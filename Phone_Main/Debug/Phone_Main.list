
Phone_Main.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004c60  08000110  08000110  00010110  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000294  08004d70  08004d70  00014d70  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08005004  08005004  00020078  2**0
                  CONTENTS
  4 .ARM          00000000  08005004  08005004  00020078  2**0
                  CONTENTS
  5 .preinit_array 00000000  08005004  08005004  00020078  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08005004  08005004  00015004  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08005008  08005008  00015008  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000078  20000000  0800500c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00002bd8  20000078  08005084  00020078  2**2
                  ALLOC
 10 ._user_heap_stack 00001400  20002c50  08005084  00022c50  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020078  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000fe50  00000000  00000000  000200a1  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000026b5  00000000  00000000  0002fef1  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000ef0  00000000  00000000  000325a8  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000db8  00000000  00000000  00033498  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00019266  00000000  00000000  00034250  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   0000cd7e  00000000  00000000  0004d4b6  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00091a05  00000000  00000000  0005a234  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  000ebc39  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00004188  00000000  00000000  000ebcb4  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000110 <__do_global_dtors_aux>:
 8000110:	b510      	push	{r4, lr}
 8000112:	4c05      	ldr	r4, [pc, #20]	; (8000128 <__do_global_dtors_aux+0x18>)
 8000114:	7823      	ldrb	r3, [r4, #0]
 8000116:	b933      	cbnz	r3, 8000126 <__do_global_dtors_aux+0x16>
 8000118:	4b04      	ldr	r3, [pc, #16]	; (800012c <__do_global_dtors_aux+0x1c>)
 800011a:	b113      	cbz	r3, 8000122 <__do_global_dtors_aux+0x12>
 800011c:	4804      	ldr	r0, [pc, #16]	; (8000130 <__do_global_dtors_aux+0x20>)
 800011e:	f3af 8000 	nop.w
 8000122:	2301      	movs	r3, #1
 8000124:	7023      	strb	r3, [r4, #0]
 8000126:	bd10      	pop	{r4, pc}
 8000128:	20000078 	.word	0x20000078
 800012c:	00000000 	.word	0x00000000
 8000130:	08004d58 	.word	0x08004d58

08000134 <frame_dummy>:
 8000134:	b508      	push	{r3, lr}
 8000136:	4b03      	ldr	r3, [pc, #12]	; (8000144 <frame_dummy+0x10>)
 8000138:	b11b      	cbz	r3, 8000142 <frame_dummy+0xe>
 800013a:	4903      	ldr	r1, [pc, #12]	; (8000148 <frame_dummy+0x14>)
 800013c:	4803      	ldr	r0, [pc, #12]	; (800014c <frame_dummy+0x18>)
 800013e:	f3af 8000 	nop.w
 8000142:	bd08      	pop	{r3, pc}
 8000144:	00000000 	.word	0x00000000
 8000148:	2000007c 	.word	0x2000007c
 800014c:	08004d58 	.word	0x08004d58

08000150 <strcmp>:
 8000150:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000154:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000158:	2a01      	cmp	r2, #1
 800015a:	bf28      	it	cs
 800015c:	429a      	cmpcs	r2, r3
 800015e:	d0f7      	beq.n	8000150 <strcmp>
 8000160:	1ad0      	subs	r0, r2, r3
 8000162:	4770      	bx	lr

08000164 <strlen>:
 8000164:	4603      	mov	r3, r0
 8000166:	f813 2b01 	ldrb.w	r2, [r3], #1
 800016a:	2a00      	cmp	r2, #0
 800016c:	d1fb      	bne.n	8000166 <strlen+0x2>
 800016e:	1a18      	subs	r0, r3, r0
 8000170:	3801      	subs	r0, #1
 8000172:	4770      	bx	lr

08000174 <vApplicationGetIdleTaskMemory>:
 8000174:	b480      	push	{r7}
 8000176:	b085      	sub	sp, #20
 8000178:	af00      	add	r7, sp, #0
 800017a:	60f8      	str	r0, [r7, #12]
 800017c:	60b9      	str	r1, [r7, #8]
 800017e:	607a      	str	r2, [r7, #4]
 8000180:	68fb      	ldr	r3, [r7, #12]
 8000182:	4a06      	ldr	r2, [pc, #24]	; (800019c <vApplicationGetIdleTaskMemory+0x28>)
 8000184:	601a      	str	r2, [r3, #0]
 8000186:	68bb      	ldr	r3, [r7, #8]
 8000188:	4a05      	ldr	r2, [pc, #20]	; (80001a0 <vApplicationGetIdleTaskMemory+0x2c>)
 800018a:	601a      	str	r2, [r3, #0]
 800018c:	687b      	ldr	r3, [r7, #4]
 800018e:	2280      	movs	r2, #128	; 0x80
 8000190:	601a      	str	r2, [r3, #0]
 8000192:	bf00      	nop
 8000194:	3714      	adds	r7, #20
 8000196:	46bd      	mov	sp, r7
 8000198:	bc80      	pop	{r7}
 800019a:	4770      	bx	lr
 800019c:	20000094 	.word	0x20000094
 80001a0:	200000e8 	.word	0x200000e8

080001a4 <HAL_UART_RxCpltCallback>:
te_phone_state PHONE_STATE = IDLE;
te_sms_state SMS_STATE = NO_SMS;
ts_phonebook_entry phonebook[25];
int phonebook_index = 0;
void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
 80001a4:	b580      	push	{r7, lr}
 80001a6:	b082      	sub	sp, #8
 80001a8:	af00      	add	r7, sp, #0
 80001aa:	6078      	str	r0, [r7, #4]
	if(display_rx[display_rx_index] == '\n')
 80001ac:	4b13      	ldr	r3, [pc, #76]	; (80001fc <HAL_UART_RxCpltCallback+0x58>)
 80001ae:	681b      	ldr	r3, [r3, #0]
 80001b0:	4a13      	ldr	r2, [pc, #76]	; (8000200 <HAL_UART_RxCpltCallback+0x5c>)
 80001b2:	5cd3      	ldrb	r3, [r2, r3]
 80001b4:	2b0a      	cmp	r3, #10
 80001b6:	d10f      	bne.n	80001d8 <HAL_UART_RxCpltCallback+0x34>
	{
		display_rec_flag = TRUE;
 80001b8:	4b12      	ldr	r3, [pc, #72]	; (8000204 <HAL_UART_RxCpltCallback+0x60>)
 80001ba:	2201      	movs	r2, #1
 80001bc:	701a      	strb	r2, [r3, #0]
		display_rx_index = 0;
 80001be:	4b0f      	ldr	r3, [pc, #60]	; (80001fc <HAL_UART_RxCpltCallback+0x58>)
 80001c0:	2200      	movs	r2, #0
 80001c2:	601a      	str	r2, [r3, #0]
		HAL_UART_Receive_IT(DISPLAY_UART, (uint8_t*)&display_rx[display_rx_index], 1);
 80001c4:	4b0d      	ldr	r3, [pc, #52]	; (80001fc <HAL_UART_RxCpltCallback+0x58>)
 80001c6:	681b      	ldr	r3, [r3, #0]
 80001c8:	4a0d      	ldr	r2, [pc, #52]	; (8000200 <HAL_UART_RxCpltCallback+0x5c>)
 80001ca:	4413      	add	r3, r2
 80001cc:	2201      	movs	r2, #1
 80001ce:	4619      	mov	r1, r3
 80001d0:	480d      	ldr	r0, [pc, #52]	; (8000208 <HAL_UART_RxCpltCallback+0x64>)
 80001d2:	f002 fc5d 	bl	8002a90 <HAL_UART_Receive_IT>
	{
		display_rx_index++;
		HAL_UART_Receive_IT(DISPLAY_UART, (uint8_t*)&display_rx[display_rx_index], 1);
	}

}
 80001d6:	e00d      	b.n	80001f4 <HAL_UART_RxCpltCallback+0x50>
		display_rx_index++;
 80001d8:	4b08      	ldr	r3, [pc, #32]	; (80001fc <HAL_UART_RxCpltCallback+0x58>)
 80001da:	681b      	ldr	r3, [r3, #0]
 80001dc:	3301      	adds	r3, #1
 80001de:	4a07      	ldr	r2, [pc, #28]	; (80001fc <HAL_UART_RxCpltCallback+0x58>)
 80001e0:	6013      	str	r3, [r2, #0]
		HAL_UART_Receive_IT(DISPLAY_UART, (uint8_t*)&display_rx[display_rx_index], 1);
 80001e2:	4b06      	ldr	r3, [pc, #24]	; (80001fc <HAL_UART_RxCpltCallback+0x58>)
 80001e4:	681b      	ldr	r3, [r3, #0]
 80001e6:	4a06      	ldr	r2, [pc, #24]	; (8000200 <HAL_UART_RxCpltCallback+0x5c>)
 80001e8:	4413      	add	r3, r2
 80001ea:	2201      	movs	r2, #1
 80001ec:	4619      	mov	r1, r3
 80001ee:	4806      	ldr	r0, [pc, #24]	; (8000208 <HAL_UART_RxCpltCallback+0x64>)
 80001f0:	f002 fc4e 	bl	8002a90 <HAL_UART_Receive_IT>
}
 80001f4:	bf00      	nop
 80001f6:	3708      	adds	r7, #8
 80001f8:	46bd      	mov	sp, r7
 80001fa:	bd80      	pop	{r7, pc}
 80001fc:	200003e8 	.word	0x200003e8
 8000200:	200002e8 	.word	0x200002e8
 8000204:	200006ec 	.word	0x200006ec
 8000208:	20002bb8 	.word	0x20002bb8

0800020c <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 800020c:	b580      	push	{r7, lr}
 800020e:	b0d8      	sub	sp, #352	; 0x160
 8000210:	af02      	add	r7, sp, #8
	/* USER CODE END 1 */

	/* MCU Configuration--------------------------------------------------------*/

	/* Reset of all peripherals, Initializes the Flash interface and the Systick. */
	HAL_Init();
 8000212:	f001 f925 	bl	8001460 <HAL_Init>

	/* USER CODE BEGIN Init */
	MX_GPIO_Init();
 8000216:	f000 f9e3 	bl	80005e0 <MX_GPIO_Init>
	/* USER CODE END Init */

	/* Configure the system clock */
	SystemClock_Config();
 800021a:	f000 f949 	bl	80004b0 <SystemClock_Config>
	/* USER CODE BEGIN SysInit */

	/* USER CODE END SysInit */

	/* Initialize all configured peripherals */
	MX_GPIO_Init();
 800021e:	f000 f9df 	bl	80005e0 <MX_GPIO_Init>
	MX_USART1_UART_Init();
 8000222:	f000 f989 	bl	8000538 <MX_USART1_UART_Init>
	MX_USART2_UART_Init();
 8000226:	f000 f9b1 	bl	800058c <MX_USART2_UART_Init>


	char close_echo[] = "ATE0\n";
 800022a:	4a92      	ldr	r2, [pc, #584]	; (8000474 <main+0x268>)
 800022c:	f507 73a0 	add.w	r3, r7, #320	; 0x140
 8000230:	e892 0003 	ldmia.w	r2, {r0, r1}
 8000234:	6018      	str	r0, [r3, #0]
 8000236:	3304      	adds	r3, #4
 8000238:	8019      	strh	r1, [r3, #0]
	char response[256] = {0};
 800023a:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800023e:	4618      	mov	r0, r3
 8000240:	f44f 7380 	mov.w	r3, #256	; 0x100
 8000244:	461a      	mov	r2, r3
 8000246:	2100      	movs	r1, #0
 8000248:	f004 f8e9 	bl	800441e <memset>
	char get_entry[64] = {0};
 800024c:	463b      	mov	r3, r7
 800024e:	4618      	mov	r0, r3
 8000250:	2340      	movs	r3, #64	; 0x40
 8000252:	461a      	mov	r2, r3
 8000254:	2100      	movs	r1, #0
 8000256:	f004 f8e2 	bl	800441e <memset>
	char *p1;
	char *p2;
	int index = 0;
 800025a:	2300      	movs	r3, #0
 800025c:	f8c7 314c 	str.w	r3, [r7, #332]	; 0x14c
	HAL_UART_Transmit(GSM_UART, (uint8_t*)&close_echo[0], strlen(close_echo), 200);
 8000260:	f507 73a0 	add.w	r3, r7, #320	; 0x140
 8000264:	4618      	mov	r0, r3
 8000266:	f7ff ff7d 	bl	8000164 <strlen>
 800026a:	4603      	mov	r3, r0
 800026c:	b29a      	uxth	r2, r3
 800026e:	f507 71a0 	add.w	r1, r7, #320	; 0x140
 8000272:	23c8      	movs	r3, #200	; 0xc8
 8000274:	4880      	ldr	r0, [pc, #512]	; (8000478 <main+0x26c>)
 8000276:	f002 fada 	bl	800282e <HAL_UART_Transmit>
	HAL_UART_Receive(GSM_UART, (uint8_t*)&response[0], sizeof(response), 400);
 800027a:	f107 0140 	add.w	r1, r7, #64	; 0x40
 800027e:	f44f 73c8 	mov.w	r3, #400	; 0x190
 8000282:	f44f 7280 	mov.w	r2, #256	; 0x100
 8000286:	487c      	ldr	r0, [pc, #496]	; (8000478 <main+0x26c>)
 8000288:	f002 fb63 	bl	8002952 <HAL_UART_Receive>
	memset(response, 0, sizeof(response));
 800028c:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8000290:	f44f 7280 	mov.w	r2, #256	; 0x100
 8000294:	2100      	movs	r1, #0
 8000296:	4618      	mov	r0, r3
 8000298:	f004 f8c1 	bl	800441e <memset>
	for(int i = 1; i < 251; i++)
 800029c:	2301      	movs	r3, #1
 800029e:	f8c7 3148 	str.w	r3, [r7, #328]	; 0x148
 80002a2:	e0ab      	b.n	80003fc <main+0x1f0>
	{
		sprintf(get_entry, "AT+CPBR=%d\r\n", i);
 80002a4:	463b      	mov	r3, r7
 80002a6:	f8d7 2148 	ldr.w	r2, [r7, #328]	; 0x148
 80002aa:	4974      	ldr	r1, [pc, #464]	; (800047c <main+0x270>)
 80002ac:	4618      	mov	r0, r3
 80002ae:	f004 f8bf 	bl	8004430 <siprintf>
		HAL_UART_Transmit(GSM_UART, (uint8_t*)&get_entry[0], strlen(get_entry), 200);
 80002b2:	463b      	mov	r3, r7
 80002b4:	4618      	mov	r0, r3
 80002b6:	f7ff ff55 	bl	8000164 <strlen>
 80002ba:	4603      	mov	r3, r0
 80002bc:	b29a      	uxth	r2, r3
 80002be:	4639      	mov	r1, r7
 80002c0:	23c8      	movs	r3, #200	; 0xc8
 80002c2:	486d      	ldr	r0, [pc, #436]	; (8000478 <main+0x26c>)
 80002c4:	f002 fab3 	bl	800282e <HAL_UART_Transmit>
		HAL_UART_Receive(GSM_UART, (uint8_t*)&response[0], sizeof(response), 400);
 80002c8:	f107 0140 	add.w	r1, r7, #64	; 0x40
 80002cc:	f44f 73c8 	mov.w	r3, #400	; 0x190
 80002d0:	f44f 7280 	mov.w	r2, #256	; 0x100
 80002d4:	4868      	ldr	r0, [pc, #416]	; (8000478 <main+0x26c>)
 80002d6:	f002 fb3c 	bl	8002952 <HAL_UART_Receive>
		if(strcmp(response, "\r\nOK\r\n") == 0)
 80002da:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80002de:	4968      	ldr	r1, [pc, #416]	; (8000480 <main+0x274>)
 80002e0:	4618      	mov	r0, r3
 80002e2:	f7ff ff35 	bl	8000150 <strcmp>
 80002e6:	4603      	mov	r3, r0
 80002e8:	2b00      	cmp	r3, #0
 80002ea:	f000 808d 	beq.w	8000408 <main+0x1fc>
			break;
		p1 = strstr(response, "\"");
 80002ee:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80002f2:	2122      	movs	r1, #34	; 0x22
 80002f4:	4618      	mov	r0, r3
 80002f6:	f004 f8bb 	bl	8004470 <strchr>
 80002fa:	f8c7 0154 	str.w	r0, [r7, #340]	; 0x154
		p1++;
 80002fe:	f8d7 3154 	ldr.w	r3, [r7, #340]	; 0x154
 8000302:	3301      	adds	r3, #1
 8000304:	f8c7 3154 	str.w	r3, [r7, #340]	; 0x154
		if(p1)
 8000308:	f8d7 3154 	ldr.w	r3, [r7, #340]	; 0x154
 800030c:	2b00      	cmp	r3, #0
 800030e:	d01e      	beq.n	800034e <main+0x142>
		  p2 = strstr(p1,"\"");
 8000310:	2122      	movs	r1, #34	; 0x22
 8000312:	f8d7 0154 	ldr.w	r0, [r7, #340]	; 0x154
 8000316:	f004 f8ab 	bl	8004470 <strchr>
 800031a:	f8c7 0150 	str.w	r0, [r7, #336]	; 0x150
		while(p1 != p2)
 800031e:	e016      	b.n	800034e <main+0x142>
		{
		  phonebook[i-1].number[index++] = *p1;
 8000320:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 8000324:	1e5a      	subs	r2, r3, #1
 8000326:	f8d7 314c 	ldr.w	r3, [r7, #332]	; 0x14c
 800032a:	1c59      	adds	r1, r3, #1
 800032c:	f8c7 114c 	str.w	r1, [r7, #332]	; 0x14c
 8000330:	f8d7 1154 	ldr.w	r1, [r7, #340]	; 0x154
 8000334:	7808      	ldrb	r0, [r1, #0]
 8000336:	4953      	ldr	r1, [pc, #332]	; (8000484 <main+0x278>)
 8000338:	0152      	lsls	r2, r2, #5
 800033a:	440a      	add	r2, r1
 800033c:	4413      	add	r3, r2
 800033e:	3310      	adds	r3, #16
 8000340:	4602      	mov	r2, r0
 8000342:	701a      	strb	r2, [r3, #0]
		  p1++;
 8000344:	f8d7 3154 	ldr.w	r3, [r7, #340]	; 0x154
 8000348:	3301      	adds	r3, #1
 800034a:	f8c7 3154 	str.w	r3, [r7, #340]	; 0x154
		while(p1 != p2)
 800034e:	f8d7 2154 	ldr.w	r2, [r7, #340]	; 0x154
 8000352:	f8d7 3150 	ldr.w	r3, [r7, #336]	; 0x150
 8000356:	429a      	cmp	r2, r3
 8000358:	d1e2      	bne.n	8000320 <main+0x114>
		}
		p2++;
 800035a:	f8d7 3150 	ldr.w	r3, [r7, #336]	; 0x150
 800035e:	3301      	adds	r3, #1
 8000360:	f8c7 3150 	str.w	r3, [r7, #336]	; 0x150
		p1 = strstr(p2, "\"");
 8000364:	2122      	movs	r1, #34	; 0x22
 8000366:	f8d7 0150 	ldr.w	r0, [r7, #336]	; 0x150
 800036a:	f004 f881 	bl	8004470 <strchr>
 800036e:	f8c7 0154 	str.w	r0, [r7, #340]	; 0x154
		p1++;
 8000372:	f8d7 3154 	ldr.w	r3, [r7, #340]	; 0x154
 8000376:	3301      	adds	r3, #1
 8000378:	f8c7 3154 	str.w	r3, [r7, #340]	; 0x154
		if(p1)
 800037c:	f8d7 3154 	ldr.w	r3, [r7, #340]	; 0x154
 8000380:	2b00      	cmp	r3, #0
 8000382:	d006      	beq.n	8000392 <main+0x186>
		  p2 = strstr(p1,"\"");
 8000384:	2122      	movs	r1, #34	; 0x22
 8000386:	f8d7 0154 	ldr.w	r0, [r7, #340]	; 0x154
 800038a:	f004 f871 	bl	8004470 <strchr>
 800038e:	f8c7 0150 	str.w	r0, [r7, #336]	; 0x150
		index = 0;
 8000392:	2300      	movs	r3, #0
 8000394:	f8c7 314c 	str.w	r3, [r7, #332]	; 0x14c
		while(p1 != p2)
 8000398:	e015      	b.n	80003c6 <main+0x1ba>
		{
		  phonebook[i-1].name[index++] = *p1;
 800039a:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 800039e:	1e5a      	subs	r2, r3, #1
 80003a0:	f8d7 314c 	ldr.w	r3, [r7, #332]	; 0x14c
 80003a4:	1c59      	adds	r1, r3, #1
 80003a6:	f8c7 114c 	str.w	r1, [r7, #332]	; 0x14c
 80003aa:	f8d7 1154 	ldr.w	r1, [r7, #340]	; 0x154
 80003ae:	7808      	ldrb	r0, [r1, #0]
 80003b0:	4934      	ldr	r1, [pc, #208]	; (8000484 <main+0x278>)
 80003b2:	0152      	lsls	r2, r2, #5
 80003b4:	440a      	add	r2, r1
 80003b6:	4413      	add	r3, r2
 80003b8:	4602      	mov	r2, r0
 80003ba:	701a      	strb	r2, [r3, #0]
		  p1++;
 80003bc:	f8d7 3154 	ldr.w	r3, [r7, #340]	; 0x154
 80003c0:	3301      	adds	r3, #1
 80003c2:	f8c7 3154 	str.w	r3, [r7, #340]	; 0x154
		while(p1 != p2)
 80003c6:	f8d7 2154 	ldr.w	r2, [r7, #340]	; 0x154
 80003ca:	f8d7 3150 	ldr.w	r3, [r7, #336]	; 0x150
 80003ce:	429a      	cmp	r2, r3
 80003d0:	d1e3      	bne.n	800039a <main+0x18e>
		}
		memset(response, 0, sizeof(response));
 80003d2:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80003d6:	f44f 7280 	mov.w	r2, #256	; 0x100
 80003da:	2100      	movs	r1, #0
 80003dc:	4618      	mov	r0, r3
 80003de:	f004 f81e 	bl	800441e <memset>
		index = 0;
 80003e2:	2300      	movs	r3, #0
 80003e4:	f8c7 314c 	str.w	r3, [r7, #332]	; 0x14c
		phonebook_index++;
 80003e8:	4b27      	ldr	r3, [pc, #156]	; (8000488 <main+0x27c>)
 80003ea:	681b      	ldr	r3, [r3, #0]
 80003ec:	3301      	adds	r3, #1
 80003ee:	4a26      	ldr	r2, [pc, #152]	; (8000488 <main+0x27c>)
 80003f0:	6013      	str	r3, [r2, #0]
	for(int i = 1; i < 251; i++)
 80003f2:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 80003f6:	3301      	adds	r3, #1
 80003f8:	f8c7 3148 	str.w	r3, [r7, #328]	; 0x148
 80003fc:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 8000400:	2bfa      	cmp	r3, #250	; 0xfa
 8000402:	f77f af4f 	ble.w	80002a4 <main+0x98>
 8000406:	e000      	b.n	800040a <main+0x1fe>
			break;
 8000408:	bf00      	nop
	}

	if(xTaskCreate(display_uart_task_func, "display_uart", 256, NULL, 3, &display_uart_task) != pdPASS)
 800040a:	4b20      	ldr	r3, [pc, #128]	; (800048c <main+0x280>)
 800040c:	9301      	str	r3, [sp, #4]
 800040e:	2303      	movs	r3, #3
 8000410:	9300      	str	r3, [sp, #0]
 8000412:	2300      	movs	r3, #0
 8000414:	f44f 7280 	mov.w	r2, #256	; 0x100
 8000418:	491d      	ldr	r1, [pc, #116]	; (8000490 <main+0x284>)
 800041a:	481e      	ldr	r0, [pc, #120]	; (8000494 <main+0x288>)
 800041c:	f002 ff96 	bl	800334c <xTaskCreate>
 8000420:	4603      	mov	r3, r0
 8000422:	2b01      	cmp	r3, #1
 8000424:	d000      	beq.n	8000428 <main+0x21c>
	{
		__NOP();
 8000426:	bf00      	nop
	}
	if(xTaskCreate(message_task_func, "sms_task", 256, NULL, 3, &sms_task) != pdPASS)
 8000428:	4b1b      	ldr	r3, [pc, #108]	; (8000498 <main+0x28c>)
 800042a:	9301      	str	r3, [sp, #4]
 800042c:	2303      	movs	r3, #3
 800042e:	9300      	str	r3, [sp, #0]
 8000430:	2300      	movs	r3, #0
 8000432:	f44f 7280 	mov.w	r2, #256	; 0x100
 8000436:	4919      	ldr	r1, [pc, #100]	; (800049c <main+0x290>)
 8000438:	4819      	ldr	r0, [pc, #100]	; (80004a0 <main+0x294>)
 800043a:	f002 ff87 	bl	800334c <xTaskCreate>
 800043e:	4603      	mov	r3, r0
 8000440:	2b01      	cmp	r3, #1
 8000442:	d000      	beq.n	8000446 <main+0x23a>
	{
		__NOP();
 8000444:	bf00      	nop
	}

	if(xTaskCreate(call_task_func, "call_task", 512, NULL, 7, &call_task) != pdPASS)
 8000446:	4b17      	ldr	r3, [pc, #92]	; (80004a4 <main+0x298>)
 8000448:	9301      	str	r3, [sp, #4]
 800044a:	2307      	movs	r3, #7
 800044c:	9300      	str	r3, [sp, #0]
 800044e:	2300      	movs	r3, #0
 8000450:	f44f 7200 	mov.w	r2, #512	; 0x200
 8000454:	4914      	ldr	r1, [pc, #80]	; (80004a8 <main+0x29c>)
 8000456:	4815      	ldr	r0, [pc, #84]	; (80004ac <main+0x2a0>)
 8000458:	f002 ff78 	bl	800334c <xTaskCreate>
 800045c:	4603      	mov	r3, r0
 800045e:	2b01      	cmp	r3, #1
 8000460:	d000      	beq.n	8000464 <main+0x258>
	{
		__NOP();
 8000462:	bf00      	nop
	}
	vTaskStartScheduler();
 8000464:	f003 f8d4 	bl	8003610 <vTaskStartScheduler>
 8000468:	2300      	movs	r3, #0

}
 800046a:	4618      	mov	r0, r3
 800046c:	f507 77ac 	add.w	r7, r7, #344	; 0x158
 8000470:	46bd      	mov	sp, r7
 8000472:	bd80      	pop	{r7, pc}
 8000474:	08004db0 	.word	0x08004db0
 8000478:	20002b74 	.word	0x20002b74
 800047c:	08004d70 	.word	0x08004d70
 8000480:	08004d80 	.word	0x08004d80
 8000484:	2000284c 	.word	0x2000284c
 8000488:	200006f0 	.word	0x200006f0
 800048c:	20002bf8 	.word	0x20002bf8
 8000490:	08004d88 	.word	0x08004d88
 8000494:	08000985 	.word	0x08000985
 8000498:	20002bb4 	.word	0x20002bb4
 800049c:	08004d98 	.word	0x08004d98
 80004a0:	080009c5 	.word	0x080009c5
 80004a4:	20002b6c 	.word	0x20002b6c
 80004a8:	08004da4 	.word	0x08004da4
 80004ac:	08000b2d 	.word	0x08000b2d

080004b0 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80004b0:	b580      	push	{r7, lr}
 80004b2:	b090      	sub	sp, #64	; 0x40
 80004b4:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80004b6:	f107 0318 	add.w	r3, r7, #24
 80004ba:	2228      	movs	r2, #40	; 0x28
 80004bc:	2100      	movs	r1, #0
 80004be:	4618      	mov	r0, r3
 80004c0:	f003 ffad 	bl	800441e <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80004c4:	1d3b      	adds	r3, r7, #4
 80004c6:	2200      	movs	r2, #0
 80004c8:	601a      	str	r2, [r3, #0]
 80004ca:	605a      	str	r2, [r3, #4]
 80004cc:	609a      	str	r2, [r3, #8]
 80004ce:	60da      	str	r2, [r3, #12]
 80004d0:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 80004d2:	2301      	movs	r3, #1
 80004d4:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80004d6:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80004da:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 80004dc:	2300      	movs	r3, #0
 80004de:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80004e0:	2301      	movs	r3, #1
 80004e2:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80004e4:	2302      	movs	r3, #2
 80004e6:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80004e8:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80004ec:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL2;
 80004ee:	2300      	movs	r3, #0
 80004f0:	63fb      	str	r3, [r7, #60]	; 0x3c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80004f2:	f107 0318 	add.w	r3, r7, #24
 80004f6:	4618      	mov	r0, r3
 80004f8:	f001 fab6 	bl	8001a68 <HAL_RCC_OscConfig>
 80004fc:	4603      	mov	r3, r0
 80004fe:	2b00      	cmp	r3, #0
 8000500:	d001      	beq.n	8000506 <SystemClock_Config+0x56>
  {
    Error_Handler();
 8000502:	f000 fdfb 	bl	80010fc <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000506:	230f      	movs	r3, #15
 8000508:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800050a:	2302      	movs	r3, #2
 800050c:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800050e:	2300      	movs	r3, #0
 8000510:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8000512:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000516:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8000518:	2300      	movs	r3, #0
 800051a:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 800051c:	1d3b      	adds	r3, r7, #4
 800051e:	2100      	movs	r1, #0
 8000520:	4618      	mov	r0, r3
 8000522:	f001 fd21 	bl	8001f68 <HAL_RCC_ClockConfig>
 8000526:	4603      	mov	r3, r0
 8000528:	2b00      	cmp	r3, #0
 800052a:	d001      	beq.n	8000530 <SystemClock_Config+0x80>
  {
    Error_Handler();
 800052c:	f000 fde6 	bl	80010fc <Error_Handler>
  }
}
 8000530:	bf00      	nop
 8000532:	3740      	adds	r7, #64	; 0x40
 8000534:	46bd      	mov	sp, r7
 8000536:	bd80      	pop	{r7, pc}

08000538 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 8000538:	b580      	push	{r7, lr}
 800053a:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 800053c:	4b11      	ldr	r3, [pc, #68]	; (8000584 <MX_USART1_UART_Init+0x4c>)
 800053e:	4a12      	ldr	r2, [pc, #72]	; (8000588 <MX_USART1_UART_Init+0x50>)
 8000540:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 8000542:	4b10      	ldr	r3, [pc, #64]	; (8000584 <MX_USART1_UART_Init+0x4c>)
 8000544:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8000548:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 800054a:	4b0e      	ldr	r3, [pc, #56]	; (8000584 <MX_USART1_UART_Init+0x4c>)
 800054c:	2200      	movs	r2, #0
 800054e:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8000550:	4b0c      	ldr	r3, [pc, #48]	; (8000584 <MX_USART1_UART_Init+0x4c>)
 8000552:	2200      	movs	r2, #0
 8000554:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 8000556:	4b0b      	ldr	r3, [pc, #44]	; (8000584 <MX_USART1_UART_Init+0x4c>)
 8000558:	2200      	movs	r2, #0
 800055a:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 800055c:	4b09      	ldr	r3, [pc, #36]	; (8000584 <MX_USART1_UART_Init+0x4c>)
 800055e:	220c      	movs	r2, #12
 8000560:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8000562:	4b08      	ldr	r3, [pc, #32]	; (8000584 <MX_USART1_UART_Init+0x4c>)
 8000564:	2200      	movs	r2, #0
 8000566:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8000568:	4b06      	ldr	r3, [pc, #24]	; (8000584 <MX_USART1_UART_Init+0x4c>)
 800056a:	2200      	movs	r2, #0
 800056c:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 800056e:	4805      	ldr	r0, [pc, #20]	; (8000584 <MX_USART1_UART_Init+0x4c>)
 8000570:	f002 f910 	bl	8002794 <HAL_UART_Init>
 8000574:	4603      	mov	r3, r0
 8000576:	2b00      	cmp	r3, #0
 8000578:	d001      	beq.n	800057e <MX_USART1_UART_Init+0x46>
  {
    Error_Handler();
 800057a:	f000 fdbf 	bl	80010fc <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 800057e:	bf00      	nop
 8000580:	bd80      	pop	{r7, pc}
 8000582:	bf00      	nop
 8000584:	20002b74 	.word	0x20002b74
 8000588:	40013800 	.word	0x40013800

0800058c <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 800058c:	b580      	push	{r7, lr}
 800058e:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8000590:	4b11      	ldr	r3, [pc, #68]	; (80005d8 <MX_USART2_UART_Init+0x4c>)
 8000592:	4a12      	ldr	r2, [pc, #72]	; (80005dc <MX_USART2_UART_Init+0x50>)
 8000594:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 9600;
 8000596:	4b10      	ldr	r3, [pc, #64]	; (80005d8 <MX_USART2_UART_Init+0x4c>)
 8000598:	f44f 5216 	mov.w	r2, #9600	; 0x2580
 800059c:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 800059e:	4b0e      	ldr	r3, [pc, #56]	; (80005d8 <MX_USART2_UART_Init+0x4c>)
 80005a0:	2200      	movs	r2, #0
 80005a2:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 80005a4:	4b0c      	ldr	r3, [pc, #48]	; (80005d8 <MX_USART2_UART_Init+0x4c>)
 80005a6:	2200      	movs	r2, #0
 80005a8:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 80005aa:	4b0b      	ldr	r3, [pc, #44]	; (80005d8 <MX_USART2_UART_Init+0x4c>)
 80005ac:	2200      	movs	r2, #0
 80005ae:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 80005b0:	4b09      	ldr	r3, [pc, #36]	; (80005d8 <MX_USART2_UART_Init+0x4c>)
 80005b2:	220c      	movs	r2, #12
 80005b4:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80005b6:	4b08      	ldr	r3, [pc, #32]	; (80005d8 <MX_USART2_UART_Init+0x4c>)
 80005b8:	2200      	movs	r2, #0
 80005ba:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 80005bc:	4b06      	ldr	r3, [pc, #24]	; (80005d8 <MX_USART2_UART_Init+0x4c>)
 80005be:	2200      	movs	r2, #0
 80005c0:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 80005c2:	4805      	ldr	r0, [pc, #20]	; (80005d8 <MX_USART2_UART_Init+0x4c>)
 80005c4:	f002 f8e6 	bl	8002794 <HAL_UART_Init>
 80005c8:	4603      	mov	r3, r0
 80005ca:	2b00      	cmp	r3, #0
 80005cc:	d001      	beq.n	80005d2 <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 80005ce:	f000 fd95 	bl	80010fc <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 80005d2:	bf00      	nop
 80005d4:	bd80      	pop	{r7, pc}
 80005d6:	bf00      	nop
 80005d8:	20002bb8 	.word	0x20002bb8
 80005dc:	40004400 	.word	0x40004400

080005e0 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 80005e0:	b580      	push	{r7, lr}
 80005e2:	b088      	sub	sp, #32
 80005e4:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80005e6:	f107 0310 	add.w	r3, r7, #16
 80005ea:	2200      	movs	r2, #0
 80005ec:	601a      	str	r2, [r3, #0]
 80005ee:	605a      	str	r2, [r3, #4]
 80005f0:	609a      	str	r2, [r3, #8]
 80005f2:	60da      	str	r2, [r3, #12]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80005f4:	4b1d      	ldr	r3, [pc, #116]	; (800066c <MX_GPIO_Init+0x8c>)
 80005f6:	699b      	ldr	r3, [r3, #24]
 80005f8:	4a1c      	ldr	r2, [pc, #112]	; (800066c <MX_GPIO_Init+0x8c>)
 80005fa:	f043 0320 	orr.w	r3, r3, #32
 80005fe:	6193      	str	r3, [r2, #24]
 8000600:	4b1a      	ldr	r3, [pc, #104]	; (800066c <MX_GPIO_Init+0x8c>)
 8000602:	699b      	ldr	r3, [r3, #24]
 8000604:	f003 0320 	and.w	r3, r3, #32
 8000608:	60fb      	str	r3, [r7, #12]
 800060a:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800060c:	4b17      	ldr	r3, [pc, #92]	; (800066c <MX_GPIO_Init+0x8c>)
 800060e:	699b      	ldr	r3, [r3, #24]
 8000610:	4a16      	ldr	r2, [pc, #88]	; (800066c <MX_GPIO_Init+0x8c>)
 8000612:	f043 0304 	orr.w	r3, r3, #4
 8000616:	6193      	str	r3, [r2, #24]
 8000618:	4b14      	ldr	r3, [pc, #80]	; (800066c <MX_GPIO_Init+0x8c>)
 800061a:	699b      	ldr	r3, [r3, #24]
 800061c:	f003 0304 	and.w	r3, r3, #4
 8000620:	60bb      	str	r3, [r7, #8]
 8000622:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000624:	4b11      	ldr	r3, [pc, #68]	; (800066c <MX_GPIO_Init+0x8c>)
 8000626:	699b      	ldr	r3, [r3, #24]
 8000628:	4a10      	ldr	r2, [pc, #64]	; (800066c <MX_GPIO_Init+0x8c>)
 800062a:	f043 0308 	orr.w	r3, r3, #8
 800062e:	6193      	str	r3, [r2, #24]
 8000630:	4b0e      	ldr	r3, [pc, #56]	; (800066c <MX_GPIO_Init+0x8c>)
 8000632:	699b      	ldr	r3, [r3, #24]
 8000634:	f003 0308 	and.w	r3, r3, #8
 8000638:	607b      	str	r3, [r7, #4]
 800063a:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin : PB0 */
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 800063c:	2301      	movs	r3, #1
 800063e:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8000640:	4b0b      	ldr	r3, [pc, #44]	; (8000670 <MX_GPIO_Init+0x90>)
 8000642:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000644:	2300      	movs	r3, #0
 8000646:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000648:	f107 0310 	add.w	r3, r7, #16
 800064c:	4619      	mov	r1, r3
 800064e:	4809      	ldr	r0, [pc, #36]	; (8000674 <MX_GPIO_Init+0x94>)
 8000650:	f001 f88e 	bl	8001770 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI0_IRQn, 5, 0);
 8000654:	2200      	movs	r2, #0
 8000656:	2105      	movs	r1, #5
 8000658:	2006      	movs	r0, #6
 800065a:	f000 ffe8 	bl	800162e <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI0_IRQn);
 800065e:	2006      	movs	r0, #6
 8000660:	f001 f801 	bl	8001666 <HAL_NVIC_EnableIRQ>

}
 8000664:	bf00      	nop
 8000666:	3720      	adds	r7, #32
 8000668:	46bd      	mov	sp, r7
 800066a:	bd80      	pop	{r7, pc}
 800066c:	40021000 	.word	0x40021000
 8000670:	10210000 	.word	0x10210000
 8000674:	40010c00 	.word	0x40010c00

08000678 <show_subscriber_with_index>:

void show_subscriber_with_index(int index)
{
 8000678:	b580      	push	{r7, lr}
 800067a:	b0a8      	sub	sp, #160	; 0xa0
 800067c:	af00      	add	r7, sp, #0
 800067e:	6078      	str	r0, [r7, #4]
	char name[64] = {0};
 8000680:	f107 0360 	add.w	r3, r7, #96	; 0x60
 8000684:	2240      	movs	r2, #64	; 0x40
 8000686:	2100      	movs	r1, #0
 8000688:	4618      	mov	r0, r3
 800068a:	f003 fec8 	bl	800441e <memset>
	char number[64] = {0};
 800068e:	f107 0320 	add.w	r3, r7, #32
 8000692:	2240      	movs	r2, #64	; 0x40
 8000694:	2100      	movs	r1, #0
 8000696:	4618      	mov	r0, r3
 8000698:	f003 fec1 	bl	800441e <memset>
	char active_button1[] = "vis b2,1\xFF\xFF\xFF";
 800069c:	4a36      	ldr	r2, [pc, #216]	; (8000778 <show_subscriber_with_index+0x100>)
 800069e:	f107 0314 	add.w	r3, r7, #20
 80006a2:	ca07      	ldmia	r2, {r0, r1, r2}
 80006a4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
	char active_button2[] = "vis b3,1\xFF\xFF\xFF";
 80006a8:	4a34      	ldr	r2, [pc, #208]	; (800077c <show_subscriber_with_index+0x104>)
 80006aa:	f107 0308 	add.w	r3, r7, #8
 80006ae:	ca07      	ldmia	r2, {r0, r1, r2}
 80006b0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
	if(index < phonebook_index)
 80006b4:	4b32      	ldr	r3, [pc, #200]	; (8000780 <show_subscriber_with_index+0x108>)
 80006b6:	681b      	ldr	r3, [r3, #0]
 80006b8:	687a      	ldr	r2, [r7, #4]
 80006ba:	429a      	cmp	r2, r3
 80006bc:	da15      	bge.n	80006ea <show_subscriber_with_index+0x72>
	{
		sprintf(name, "call_main_page.t0.txt=\"%s\"\xFF\xFF\xFF", phonebook[index].name);
 80006be:	687b      	ldr	r3, [r7, #4]
 80006c0:	015b      	lsls	r3, r3, #5
 80006c2:	4a30      	ldr	r2, [pc, #192]	; (8000784 <show_subscriber_with_index+0x10c>)
 80006c4:	441a      	add	r2, r3
 80006c6:	f107 0360 	add.w	r3, r7, #96	; 0x60
 80006ca:	492f      	ldr	r1, [pc, #188]	; (8000788 <show_subscriber_with_index+0x110>)
 80006cc:	4618      	mov	r0, r3
 80006ce:	f003 feaf 	bl	8004430 <siprintf>
		sprintf(number, "call_main_page.t1.txt=\"%s\"\xFF\xFF\xFF", phonebook[index].number);
 80006d2:	687b      	ldr	r3, [r7, #4]
 80006d4:	015b      	lsls	r3, r3, #5
 80006d6:	3310      	adds	r3, #16
 80006d8:	4a2a      	ldr	r2, [pc, #168]	; (8000784 <show_subscriber_with_index+0x10c>)
 80006da:	441a      	add	r2, r3
 80006dc:	f107 0320 	add.w	r3, r7, #32
 80006e0:	492a      	ldr	r1, [pc, #168]	; (800078c <show_subscriber_with_index+0x114>)
 80006e2:	4618      	mov	r0, r3
 80006e4:	f003 fea4 	bl	8004430 <siprintf>
 80006e8:	e00d      	b.n	8000706 <show_subscriber_with_index+0x8e>
	}
	else
	{
		sprintf(name, "call_main_page.t0.txt=\"%s\"\xFF\xFF\xFF", "empty");
 80006ea:	f107 0360 	add.w	r3, r7, #96	; 0x60
 80006ee:	4a28      	ldr	r2, [pc, #160]	; (8000790 <show_subscriber_with_index+0x118>)
 80006f0:	4925      	ldr	r1, [pc, #148]	; (8000788 <show_subscriber_with_index+0x110>)
 80006f2:	4618      	mov	r0, r3
 80006f4:	f003 fe9c 	bl	8004430 <siprintf>
		sprintf(number, "call_main_page.t1.txt=\"%s\"\xFF\xFF\xFF",  "empty");
 80006f8:	f107 0320 	add.w	r3, r7, #32
 80006fc:	4a24      	ldr	r2, [pc, #144]	; (8000790 <show_subscriber_with_index+0x118>)
 80006fe:	4923      	ldr	r1, [pc, #140]	; (800078c <show_subscriber_with_index+0x114>)
 8000700:	4618      	mov	r0, r3
 8000702:	f003 fe95 	bl	8004430 <siprintf>
	}
	HAL_UART_Transmit(DISPLAY_UART, (uint8_t*)name, strlen(name), 200);
 8000706:	f107 0360 	add.w	r3, r7, #96	; 0x60
 800070a:	4618      	mov	r0, r3
 800070c:	f7ff fd2a 	bl	8000164 <strlen>
 8000710:	4603      	mov	r3, r0
 8000712:	b29a      	uxth	r2, r3
 8000714:	f107 0160 	add.w	r1, r7, #96	; 0x60
 8000718:	23c8      	movs	r3, #200	; 0xc8
 800071a:	481e      	ldr	r0, [pc, #120]	; (8000794 <show_subscriber_with_index+0x11c>)
 800071c:	f002 f887 	bl	800282e <HAL_UART_Transmit>
	HAL_UART_Transmit(DISPLAY_UART, (uint8_t*)number, strlen(number), 200);
 8000720:	f107 0320 	add.w	r3, r7, #32
 8000724:	4618      	mov	r0, r3
 8000726:	f7ff fd1d 	bl	8000164 <strlen>
 800072a:	4603      	mov	r3, r0
 800072c:	b29a      	uxth	r2, r3
 800072e:	f107 0120 	add.w	r1, r7, #32
 8000732:	23c8      	movs	r3, #200	; 0xc8
 8000734:	4817      	ldr	r0, [pc, #92]	; (8000794 <show_subscriber_with_index+0x11c>)
 8000736:	f002 f87a 	bl	800282e <HAL_UART_Transmit>
	HAL_UART_Transmit(DISPLAY_UART, (uint8_t*)active_button1, strlen(active_button1), 100);
 800073a:	f107 0314 	add.w	r3, r7, #20
 800073e:	4618      	mov	r0, r3
 8000740:	f7ff fd10 	bl	8000164 <strlen>
 8000744:	4603      	mov	r3, r0
 8000746:	b29a      	uxth	r2, r3
 8000748:	f107 0114 	add.w	r1, r7, #20
 800074c:	2364      	movs	r3, #100	; 0x64
 800074e:	4811      	ldr	r0, [pc, #68]	; (8000794 <show_subscriber_with_index+0x11c>)
 8000750:	f002 f86d 	bl	800282e <HAL_UART_Transmit>
	HAL_UART_Transmit(DISPLAY_UART, (uint8_t*)active_button2, strlen(active_button2), 100);
 8000754:	f107 0308 	add.w	r3, r7, #8
 8000758:	4618      	mov	r0, r3
 800075a:	f7ff fd03 	bl	8000164 <strlen>
 800075e:	4603      	mov	r3, r0
 8000760:	b29a      	uxth	r2, r3
 8000762:	f107 0108 	add.w	r1, r7, #8
 8000766:	2364      	movs	r3, #100	; 0x64
 8000768:	480a      	ldr	r0, [pc, #40]	; (8000794 <show_subscriber_with_index+0x11c>)
 800076a:	f002 f860 	bl	800282e <HAL_UART_Transmit>
}
 800076e:	bf00      	nop
 8000770:	37a0      	adds	r7, #160	; 0xa0
 8000772:	46bd      	mov	sp, r7
 8000774:	bd80      	pop	{r7, pc}
 8000776:	bf00      	nop
 8000778:	08004e00 	.word	0x08004e00
 800077c:	08004e0c 	.word	0x08004e0c
 8000780:	200006f0 	.word	0x200006f0
 8000784:	2000284c 	.word	0x2000284c
 8000788:	08004db8 	.word	0x08004db8
 800078c:	08004dd8 	.word	0x08004dd8
 8000790:	08004df8 	.word	0x08004df8
 8000794:	20002bb8 	.word	0x20002bb8

08000798 <add_subscriber>:

void add_subscriber(char *data)
{
 8000798:	b580      	push	{r7, lr}
 800079a:	b094      	sub	sp, #80	; 0x50
 800079c:	af00      	add	r7, sp, #0
 800079e:	6078      	str	r0, [r7, #4]
	char *name = strtok(data, ">");
 80007a0:	4925      	ldr	r1, [pc, #148]	; (8000838 <add_subscriber+0xa0>)
 80007a2:	6878      	ldr	r0, [r7, #4]
 80007a4:	f003 fe94 	bl	80044d0 <strtok>
 80007a8:	64f8      	str	r0, [r7, #76]	; 0x4c
	char *number = strtok(NULL, ">");
 80007aa:	4923      	ldr	r1, [pc, #140]	; (8000838 <add_subscriber+0xa0>)
 80007ac:	2000      	movs	r0, #0
 80007ae:	f003 fe8f 	bl	80044d0 <strtok>
 80007b2:	64b8      	str	r0, [r7, #72]	; 0x48
	number[strlen(number)-1] = '\0';
 80007b4:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 80007b6:	f7ff fcd5 	bl	8000164 <strlen>
 80007ba:	4603      	mov	r3, r0
 80007bc:	3b01      	subs	r3, #1
 80007be:	6cba      	ldr	r2, [r7, #72]	; 0x48
 80007c0:	4413      	add	r3, r2
 80007c2:	2200      	movs	r2, #0
 80007c4:	701a      	strb	r2, [r3, #0]
	char sim_write_command[64] = {0};
 80007c6:	f107 0308 	add.w	r3, r7, #8
 80007ca:	2240      	movs	r2, #64	; 0x40
 80007cc:	2100      	movs	r1, #0
 80007ce:	4618      	mov	r0, r3
 80007d0:	f003 fe25 	bl	800441e <memset>
	sprintf(sim_write_command, "AT+CPBW=,\"%s\",145,\"%s\"", number, name);
 80007d4:	f107 0008 	add.w	r0, r7, #8
 80007d8:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 80007da:	6cba      	ldr	r2, [r7, #72]	; 0x48
 80007dc:	4917      	ldr	r1, [pc, #92]	; (800083c <add_subscriber+0xa4>)
 80007de:	f003 fe27 	bl	8004430 <siprintf>
	strcpy(phonebook[phonebook_index].name, name);
 80007e2:	4b17      	ldr	r3, [pc, #92]	; (8000840 <add_subscriber+0xa8>)
 80007e4:	681b      	ldr	r3, [r3, #0]
 80007e6:	015b      	lsls	r3, r3, #5
 80007e8:	4a16      	ldr	r2, [pc, #88]	; (8000844 <add_subscriber+0xac>)
 80007ea:	4413      	add	r3, r2
 80007ec:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
 80007ee:	4618      	mov	r0, r3
 80007f0:	f003 fe4b 	bl	800448a <strcpy>
	strcpy(phonebook[phonebook_index].number, number);
 80007f4:	4b12      	ldr	r3, [pc, #72]	; (8000840 <add_subscriber+0xa8>)
 80007f6:	681b      	ldr	r3, [r3, #0]
 80007f8:	015b      	lsls	r3, r3, #5
 80007fa:	3310      	adds	r3, #16
 80007fc:	4a11      	ldr	r2, [pc, #68]	; (8000844 <add_subscriber+0xac>)
 80007fe:	4413      	add	r3, r2
 8000800:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 8000802:	4618      	mov	r0, r3
 8000804:	f003 fe41 	bl	800448a <strcpy>
	HAL_UART_Transmit(GSM_UART, (uint8_t*)sim_write_command, strlen(sim_write_command), 300);
 8000808:	f107 0308 	add.w	r3, r7, #8
 800080c:	4618      	mov	r0, r3
 800080e:	f7ff fca9 	bl	8000164 <strlen>
 8000812:	4603      	mov	r3, r0
 8000814:	b29a      	uxth	r2, r3
 8000816:	f107 0108 	add.w	r1, r7, #8
 800081a:	f44f 7396 	mov.w	r3, #300	; 0x12c
 800081e:	480a      	ldr	r0, [pc, #40]	; (8000848 <add_subscriber+0xb0>)
 8000820:	f002 f805 	bl	800282e <HAL_UART_Transmit>
	phonebook_index++;
 8000824:	4b06      	ldr	r3, [pc, #24]	; (8000840 <add_subscriber+0xa8>)
 8000826:	681b      	ldr	r3, [r3, #0]
 8000828:	3301      	adds	r3, #1
 800082a:	4a05      	ldr	r2, [pc, #20]	; (8000840 <add_subscriber+0xa8>)
 800082c:	6013      	str	r3, [r2, #0]
}
 800082e:	bf00      	nop
 8000830:	3750      	adds	r7, #80	; 0x50
 8000832:	46bd      	mov	sp, r7
 8000834:	bd80      	pop	{r7, pc}
 8000836:	bf00      	nop
 8000838:	08004e18 	.word	0x08004e18
 800083c:	08004e1c 	.word	0x08004e1c
 8000840:	200006f0 	.word	0x200006f0
 8000844:	2000284c 	.word	0x2000284c
 8000848:	20002b74 	.word	0x20002b74

0800084c <parse_display_request>:

void parse_display_request()
{
 800084c:	b580      	push	{r7, lr}
 800084e:	af00      	add	r7, sp, #0
	if((display_rx[1] == 0x01 && display_rx[2] == 0x10) || (display_rx[1] == 0x05 && display_rx[2] == 0x05)) //call
 8000850:	4b44      	ldr	r3, [pc, #272]	; (8000964 <parse_display_request+0x118>)
 8000852:	785b      	ldrb	r3, [r3, #1]
 8000854:	2b01      	cmp	r3, #1
 8000856:	d103      	bne.n	8000860 <parse_display_request+0x14>
 8000858:	4b42      	ldr	r3, [pc, #264]	; (8000964 <parse_display_request+0x118>)
 800085a:	789b      	ldrb	r3, [r3, #2]
 800085c:	2b10      	cmp	r3, #16
 800085e:	d007      	beq.n	8000870 <parse_display_request+0x24>
 8000860:	4b40      	ldr	r3, [pc, #256]	; (8000964 <parse_display_request+0x118>)
 8000862:	785b      	ldrb	r3, [r3, #1]
 8000864:	2b05      	cmp	r3, #5
 8000866:	d116      	bne.n	8000896 <parse_display_request+0x4a>
 8000868:	4b3e      	ldr	r3, [pc, #248]	; (8000964 <parse_display_request+0x118>)
 800086a:	789b      	ldrb	r3, [r3, #2]
 800086c:	2b05      	cmp	r3, #5
 800086e:	d112      	bne.n	8000896 <parse_display_request+0x4a>
	{
		memcpy(call_task_data, display_rx, RX_SIZE);
 8000870:	4a3d      	ldr	r2, [pc, #244]	; (8000968 <parse_display_request+0x11c>)
 8000872:	4b3c      	ldr	r3, [pc, #240]	; (8000964 <parse_display_request+0x118>)
 8000874:	4610      	mov	r0, r2
 8000876:	4619      	mov	r1, r3
 8000878:	f44f 7380 	mov.w	r3, #256	; 0x100
 800087c:	461a      	mov	r2, r3
 800087e:	f003 fdc3 	bl	8004408 <memcpy>
		PHONE_STATE = BUSY;
 8000882:	4b3a      	ldr	r3, [pc, #232]	; (800096c <parse_display_request+0x120>)
 8000884:	2200      	movs	r2, #0
 8000886:	701a      	strb	r2, [r3, #0]
		CALL_TYPE = MO;
 8000888:	4b39      	ldr	r3, [pc, #228]	; (8000970 <parse_display_request+0x124>)
 800088a:	2200      	movs	r2, #0
 800088c:	701a      	strb	r2, [r3, #0]
		CALL_STATE = INITIATE_CALL;
 800088e:	4b39      	ldr	r3, [pc, #228]	; (8000974 <parse_display_request+0x128>)
 8000890:	2201      	movs	r2, #1
 8000892:	701a      	strb	r2, [r3, #0]
 8000894:	e05d      	b.n	8000952 <parse_display_request+0x106>
	}
	else if((display_rx[1] == 0x03 && display_rx[2] == 0x02) || (display_rx[1] == 0x04 && display_rx[2] == 0x02)) //Terminate call by user
 8000896:	4b33      	ldr	r3, [pc, #204]	; (8000964 <parse_display_request+0x118>)
 8000898:	785b      	ldrb	r3, [r3, #1]
 800089a:	2b03      	cmp	r3, #3
 800089c:	d103      	bne.n	80008a6 <parse_display_request+0x5a>
 800089e:	4b31      	ldr	r3, [pc, #196]	; (8000964 <parse_display_request+0x118>)
 80008a0:	789b      	ldrb	r3, [r3, #2]
 80008a2:	2b02      	cmp	r3, #2
 80008a4:	d007      	beq.n	80008b6 <parse_display_request+0x6a>
 80008a6:	4b2f      	ldr	r3, [pc, #188]	; (8000964 <parse_display_request+0x118>)
 80008a8:	785b      	ldrb	r3, [r3, #1]
 80008aa:	2b04      	cmp	r3, #4
 80008ac:	d107      	bne.n	80008be <parse_display_request+0x72>
 80008ae:	4b2d      	ldr	r3, [pc, #180]	; (8000964 <parse_display_request+0x118>)
 80008b0:	789b      	ldrb	r3, [r3, #2]
 80008b2:	2b02      	cmp	r3, #2
 80008b4:	d103      	bne.n	80008be <parse_display_request+0x72>
	{
		CALL_STATE = TERMINATE_CALL;
 80008b6:	4b2f      	ldr	r3, [pc, #188]	; (8000974 <parse_display_request+0x128>)
 80008b8:	2206      	movs	r2, #6
 80008ba:	701a      	strb	r2, [r3, #0]
 80008bc:	e049      	b.n	8000952 <parse_display_request+0x106>
	}
	else if(display_rx[1] == 0x04 && display_rx[2] == 0x03) //Terminate call by user
 80008be:	4b29      	ldr	r3, [pc, #164]	; (8000964 <parse_display_request+0x118>)
 80008c0:	785b      	ldrb	r3, [r3, #1]
 80008c2:	2b04      	cmp	r3, #4
 80008c4:	d107      	bne.n	80008d6 <parse_display_request+0x8a>
 80008c6:	4b27      	ldr	r3, [pc, #156]	; (8000964 <parse_display_request+0x118>)
 80008c8:	789b      	ldrb	r3, [r3, #2]
 80008ca:	2b03      	cmp	r3, #3
 80008cc:	d103      	bne.n	80008d6 <parse_display_request+0x8a>
	{
		CALL_STATE = ACCEPT_CALL;
 80008ce:	4b29      	ldr	r3, [pc, #164]	; (8000974 <parse_display_request+0x128>)
 80008d0:	2207      	movs	r2, #7
 80008d2:	701a      	strb	r2, [r3, #0]
 80008d4:	e03d      	b.n	8000952 <parse_display_request+0x106>
	}
	else if((display_rx[1] == 0x06 && display_rx[2] == 0x05)) //Add subscriber to phone book
 80008d6:	4b23      	ldr	r3, [pc, #140]	; (8000964 <parse_display_request+0x118>)
 80008d8:	785b      	ldrb	r3, [r3, #1]
 80008da:	2b06      	cmp	r3, #6
 80008dc:	d107      	bne.n	80008ee <parse_display_request+0xa2>
 80008de:	4b21      	ldr	r3, [pc, #132]	; (8000964 <parse_display_request+0x118>)
 80008e0:	789b      	ldrb	r3, [r3, #2]
 80008e2:	2b05      	cmp	r3, #5
 80008e4:	d103      	bne.n	80008ee <parse_display_request+0xa2>
	{
		add_subscriber(&display_rx[7]);
 80008e6:	4824      	ldr	r0, [pc, #144]	; (8000978 <parse_display_request+0x12c>)
 80008e8:	f7ff ff56 	bl	8000798 <add_subscriber>
 80008ec:	e031      	b.n	8000952 <parse_display_request+0x106>
	}
	else if((display_rx[1] == 0x05 && display_rx[2] == 0x06) || (display_rx[1] == 0x05 && display_rx[2] == 0x03) //Get phonebook entry
 80008ee:	4b1d      	ldr	r3, [pc, #116]	; (8000964 <parse_display_request+0x118>)
 80008f0:	785b      	ldrb	r3, [r3, #1]
 80008f2:	2b05      	cmp	r3, #5
 80008f4:	d103      	bne.n	80008fe <parse_display_request+0xb2>
 80008f6:	4b1b      	ldr	r3, [pc, #108]	; (8000964 <parse_display_request+0x118>)
 80008f8:	789b      	ldrb	r3, [r3, #2]
 80008fa:	2b06      	cmp	r3, #6
 80008fc:	d00f      	beq.n	800091e <parse_display_request+0xd2>
 80008fe:	4b19      	ldr	r3, [pc, #100]	; (8000964 <parse_display_request+0x118>)
 8000900:	785b      	ldrb	r3, [r3, #1]
 8000902:	2b05      	cmp	r3, #5
 8000904:	d103      	bne.n	800090e <parse_display_request+0xc2>
 8000906:	4b17      	ldr	r3, [pc, #92]	; (8000964 <parse_display_request+0x118>)
 8000908:	789b      	ldrb	r3, [r3, #2]
 800090a:	2b03      	cmp	r3, #3
 800090c:	d007      	beq.n	800091e <parse_display_request+0xd2>
			|| (display_rx[1] == 0x05 && display_rx[2] == 0x07))
 800090e:	4b15      	ldr	r3, [pc, #84]	; (8000964 <parse_display_request+0x118>)
 8000910:	785b      	ldrb	r3, [r3, #1]
 8000912:	2b05      	cmp	r3, #5
 8000914:	d109      	bne.n	800092a <parse_display_request+0xde>
 8000916:	4b13      	ldr	r3, [pc, #76]	; (8000964 <parse_display_request+0x118>)
 8000918:	789b      	ldrb	r3, [r3, #2]
 800091a:	2b07      	cmp	r3, #7
 800091c:	d105      	bne.n	800092a <parse_display_request+0xde>
	{
		show_subscriber_with_index(display_rx[7]);
 800091e:	4b11      	ldr	r3, [pc, #68]	; (8000964 <parse_display_request+0x118>)
 8000920:	79db      	ldrb	r3, [r3, #7]
 8000922:	4618      	mov	r0, r3
 8000924:	f7ff fea8 	bl	8000678 <show_subscriber_with_index>
 8000928:	e013      	b.n	8000952 <parse_display_request+0x106>
	}
	else if(display_rx[1] == 0x02 && display_rx[2] == 0x39)//Send sms
 800092a:	4b0e      	ldr	r3, [pc, #56]	; (8000964 <parse_display_request+0x118>)
 800092c:	785b      	ldrb	r3, [r3, #1]
 800092e:	2b02      	cmp	r3, #2
 8000930:	d10f      	bne.n	8000952 <parse_display_request+0x106>
 8000932:	4b0c      	ldr	r3, [pc, #48]	; (8000964 <parse_display_request+0x118>)
 8000934:	789b      	ldrb	r3, [r3, #2]
 8000936:	2b39      	cmp	r3, #57	; 0x39
 8000938:	d10b      	bne.n	8000952 <parse_display_request+0x106>
	{
		memcpy(sms_task_data, display_rx, RX_SIZE);
 800093a:	4a10      	ldr	r2, [pc, #64]	; (800097c <parse_display_request+0x130>)
 800093c:	4b09      	ldr	r3, [pc, #36]	; (8000964 <parse_display_request+0x118>)
 800093e:	4610      	mov	r0, r2
 8000940:	4619      	mov	r1, r3
 8000942:	f44f 7380 	mov.w	r3, #256	; 0x100
 8000946:	461a      	mov	r2, r3
 8000948:	f003 fd5e 	bl	8004408 <memcpy>
		SMS_STATE = SEND_SMS;
 800094c:	4b0c      	ldr	r3, [pc, #48]	; (8000980 <parse_display_request+0x134>)
 800094e:	2201      	movs	r2, #1
 8000950:	701a      	strb	r2, [r3, #0]
	}
	memset(display_rx, 0, RX_SIZE);
 8000952:	f44f 7280 	mov.w	r2, #256	; 0x100
 8000956:	2100      	movs	r1, #0
 8000958:	4802      	ldr	r0, [pc, #8]	; (8000964 <parse_display_request+0x118>)
 800095a:	f003 fd60 	bl	800441e <memset>
}
 800095e:	bf00      	nop
 8000960:	bd80      	pop	{r7, pc}
 8000962:	bf00      	nop
 8000964:	200002e8 	.word	0x200002e8
 8000968:	200004ec 	.word	0x200004ec
 800096c:	20000000 	.word	0x20000000
 8000970:	20002bfc 	.word	0x20002bfc
 8000974:	200006ed 	.word	0x200006ed
 8000978:	200002ef 	.word	0x200002ef
 800097c:	200003ec 	.word	0x200003ec
 8000980:	200006ee 	.word	0x200006ee

08000984 <display_uart_task_func>:

void display_uart_task_func(void *argument)
{
 8000984:	b580      	push	{r7, lr}
 8000986:	b082      	sub	sp, #8
 8000988:	af00      	add	r7, sp, #0
 800098a:	6078      	str	r0, [r7, #4]
	HAL_UART_Receive_IT(DISPLAY_UART, (uint8_t*)&display_rx[display_rx_index], 1);
 800098c:	4b09      	ldr	r3, [pc, #36]	; (80009b4 <display_uart_task_func+0x30>)
 800098e:	681b      	ldr	r3, [r3, #0]
 8000990:	4a09      	ldr	r2, [pc, #36]	; (80009b8 <display_uart_task_func+0x34>)
 8000992:	4413      	add	r3, r2
 8000994:	2201      	movs	r2, #1
 8000996:	4619      	mov	r1, r3
 8000998:	4808      	ldr	r0, [pc, #32]	; (80009bc <display_uart_task_func+0x38>)
 800099a:	f002 f879 	bl	8002a90 <HAL_UART_Receive_IT>
	while(1)
	{
		if(display_rec_flag)
 800099e:	4b08      	ldr	r3, [pc, #32]	; (80009c0 <display_uart_task_func+0x3c>)
 80009a0:	781b      	ldrb	r3, [r3, #0]
 80009a2:	2b00      	cmp	r3, #0
 80009a4:	d0fb      	beq.n	800099e <display_uart_task_func+0x1a>
		{
			display_rec_flag = FALSE;
 80009a6:	4b06      	ldr	r3, [pc, #24]	; (80009c0 <display_uart_task_func+0x3c>)
 80009a8:	2200      	movs	r2, #0
 80009aa:	701a      	strb	r2, [r3, #0]
			parse_display_request();
 80009ac:	f7ff ff4e 	bl	800084c <parse_display_request>
		if(display_rec_flag)
 80009b0:	e7f5      	b.n	800099e <display_uart_task_func+0x1a>
 80009b2:	bf00      	nop
 80009b4:	200003e8 	.word	0x200003e8
 80009b8:	200002e8 	.word	0x200002e8
 80009bc:	20002bb8 	.word	0x20002bb8
 80009c0:	200006ec 	.word	0x200006ec

080009c4 <message_task_func>:
		}
	}
}

void message_task_func(void *argument)
{
 80009c4:	b580      	push	{r7, lr}
 80009c6:	b0c0      	sub	sp, #256	; 0x100
 80009c8:	af00      	add	r7, sp, #0
 80009ca:	6078      	str	r0, [r7, #4]
	char text_mod[] = "AT+CMGF=1\r\n";
 80009cc:	4a4f      	ldr	r2, [pc, #316]	; (8000b0c <message_task_func+0x148>)
 80009ce:	f107 03ec 	add.w	r3, r7, #236	; 0xec
 80009d2:	ca07      	ldmia	r2, {r0, r1, r2}
 80009d4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
	char sender_command[64] = {0};
 80009d8:	f107 03ac 	add.w	r3, r7, #172	; 0xac
 80009dc:	2240      	movs	r2, #64	; 0x40
 80009de:	2100      	movs	r1, #0
 80009e0:	4618      	mov	r0, r3
 80009e2:	f003 fd1c 	bl	800441e <memset>
	char message_command[160] = {0};
 80009e6:	f107 030c 	add.w	r3, r7, #12
 80009ea:	22a0      	movs	r2, #160	; 0xa0
 80009ec:	2100      	movs	r1, #0
 80009ee:	4618      	mov	r0, r3
 80009f0:	f003 fd15 	bl	800441e <memset>
	char *number;
	char *message;
	while(1)
	{
		switch (SMS_STATE) {
 80009f4:	4b46      	ldr	r3, [pc, #280]	; (8000b10 <message_task_func+0x14c>)
 80009f6:	781b      	ldrb	r3, [r3, #0]
 80009f8:	2b01      	cmp	r3, #1
 80009fa:	d002      	beq.n	8000a02 <message_task_func+0x3e>
 80009fc:	2b02      	cmp	r3, #2
 80009fe:	d074      	beq.n	8000aea <message_task_func+0x126>
 8000a00:	e07d      	b.n	8000afe <message_task_func+0x13a>
			case SEND_SMS:
				memset(at_response, 0, RX_SIZE);
 8000a02:	f44f 7280 	mov.w	r2, #256	; 0x100
 8000a06:	2100      	movs	r1, #0
 8000a08:	4842      	ldr	r0, [pc, #264]	; (8000b14 <message_task_func+0x150>)
 8000a0a:	f003 fd08 	bl	800441e <memset>
				number = strtok(&sms_task_data[7], ">");
 8000a0e:	4942      	ldr	r1, [pc, #264]	; (8000b18 <message_task_func+0x154>)
 8000a10:	4842      	ldr	r0, [pc, #264]	; (8000b1c <message_task_func+0x158>)
 8000a12:	f003 fd5d 	bl	80044d0 <strtok>
 8000a16:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
				message = strtok(NULL, ">");
 8000a1a:	493f      	ldr	r1, [pc, #252]	; (8000b18 <message_task_func+0x154>)
 8000a1c:	2000      	movs	r0, #0
 8000a1e:	f003 fd57 	bl	80044d0 <strtok>
 8000a22:	f8c7 00f8 	str.w	r0, [r7, #248]	; 0xf8
				sprintf(&sender_command[0], "AT+CMGS=\"%s\"\r\n", number);
 8000a26:	f107 03ac 	add.w	r3, r7, #172	; 0xac
 8000a2a:	f8d7 20fc 	ldr.w	r2, [r7, #252]	; 0xfc
 8000a2e:	493c      	ldr	r1, [pc, #240]	; (8000b20 <message_task_func+0x15c>)
 8000a30:	4618      	mov	r0, r3
 8000a32:	f003 fcfd 	bl	8004430 <siprintf>
				sprintf(&message_command[0], "%s", message);
 8000a36:	f107 030c 	add.w	r3, r7, #12
 8000a3a:	f8d7 10f8 	ldr.w	r1, [r7, #248]	; 0xf8
 8000a3e:	4618      	mov	r0, r3
 8000a40:	f003 fd23 	bl	800448a <strcpy>
				message_command[strlen(message_command)-1] = 26;
 8000a44:	f107 030c 	add.w	r3, r7, #12
 8000a48:	4618      	mov	r0, r3
 8000a4a:	f7ff fb8b 	bl	8000164 <strlen>
 8000a4e:	4603      	mov	r3, r0
 8000a50:	3b01      	subs	r3, #1
 8000a52:	f507 7280 	add.w	r2, r7, #256	; 0x100
 8000a56:	4413      	add	r3, r2
 8000a58:	221a      	movs	r2, #26
 8000a5a:	f803 2cf4 	strb.w	r2, [r3, #-244]
				HAL_UART_Transmit(GSM_UART, (uint8_t*)text_mod, strlen(text_mod), 300);
 8000a5e:	f107 03ec 	add.w	r3, r7, #236	; 0xec
 8000a62:	4618      	mov	r0, r3
 8000a64:	f7ff fb7e 	bl	8000164 <strlen>
 8000a68:	4603      	mov	r3, r0
 8000a6a:	b29a      	uxth	r2, r3
 8000a6c:	f107 01ec 	add.w	r1, r7, #236	; 0xec
 8000a70:	f44f 7396 	mov.w	r3, #300	; 0x12c
 8000a74:	482b      	ldr	r0, [pc, #172]	; (8000b24 <message_task_func+0x160>)
 8000a76:	f001 feda 	bl	800282e <HAL_UART_Transmit>
				HAL_UART_Receive(GSM_UART, (uint8_t*)&at_response[0], sizeof(at_response), 300);
 8000a7a:	f44f 7396 	mov.w	r3, #300	; 0x12c
 8000a7e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8000a82:	4924      	ldr	r1, [pc, #144]	; (8000b14 <message_task_func+0x150>)
 8000a84:	4827      	ldr	r0, [pc, #156]	; (8000b24 <message_task_func+0x160>)
 8000a86:	f001 ff64 	bl	8002952 <HAL_UART_Receive>
				HAL_UART_Transmit(GSM_UART, (uint8_t*)sender_command, strlen(sender_command), 300);
 8000a8a:	f107 03ac 	add.w	r3, r7, #172	; 0xac
 8000a8e:	4618      	mov	r0, r3
 8000a90:	f7ff fb68 	bl	8000164 <strlen>
 8000a94:	4603      	mov	r3, r0
 8000a96:	b29a      	uxth	r2, r3
 8000a98:	f107 01ac 	add.w	r1, r7, #172	; 0xac
 8000a9c:	f44f 7396 	mov.w	r3, #300	; 0x12c
 8000aa0:	4820      	ldr	r0, [pc, #128]	; (8000b24 <message_task_func+0x160>)
 8000aa2:	f001 fec4 	bl	800282e <HAL_UART_Transmit>
				HAL_UART_Receive(GSM_UART, (uint8_t*)&at_response[0], sizeof(at_response), 300);
 8000aa6:	f44f 7396 	mov.w	r3, #300	; 0x12c
 8000aaa:	f44f 7280 	mov.w	r2, #256	; 0x100
 8000aae:	4919      	ldr	r1, [pc, #100]	; (8000b14 <message_task_func+0x150>)
 8000ab0:	481c      	ldr	r0, [pc, #112]	; (8000b24 <message_task_func+0x160>)
 8000ab2:	f001 ff4e 	bl	8002952 <HAL_UART_Receive>
				HAL_UART_Transmit(GSM_UART, (uint8_t*)message_command, strlen(sender_command), 300);
 8000ab6:	f107 03ac 	add.w	r3, r7, #172	; 0xac
 8000aba:	4618      	mov	r0, r3
 8000abc:	f7ff fb52 	bl	8000164 <strlen>
 8000ac0:	4603      	mov	r3, r0
 8000ac2:	b29a      	uxth	r2, r3
 8000ac4:	f107 010c 	add.w	r1, r7, #12
 8000ac8:	f44f 7396 	mov.w	r3, #300	; 0x12c
 8000acc:	4815      	ldr	r0, [pc, #84]	; (8000b24 <message_task_func+0x160>)
 8000ace:	f001 feae 	bl	800282e <HAL_UART_Transmit>
				HAL_UART_Receive(GSM_UART, (uint8_t*)&at_response[0], sizeof(at_response), 300);
 8000ad2:	f44f 7396 	mov.w	r3, #300	; 0x12c
 8000ad6:	f44f 7280 	mov.w	r2, #256	; 0x100
 8000ada:	490e      	ldr	r1, [pc, #56]	; (8000b14 <message_task_func+0x150>)
 8000adc:	4811      	ldr	r0, [pc, #68]	; (8000b24 <message_task_func+0x160>)
 8000ade:	f001 ff38 	bl	8002952 <HAL_UART_Receive>
				SMS_STATE = COMPLETED_SMS;
 8000ae2:	4b0b      	ldr	r3, [pc, #44]	; (8000b10 <message_task_func+0x14c>)
 8000ae4:	2202      	movs	r2, #2
 8000ae6:	701a      	strb	r2, [r3, #0]
			break;
 8000ae8:	e00e      	b.n	8000b08 <message_task_func+0x144>
			case COMPLETED_SMS:
				memset(sms_task_data, 0, RX_SIZE);
 8000aea:	f44f 7280 	mov.w	r2, #256	; 0x100
 8000aee:	2100      	movs	r1, #0
 8000af0:	480d      	ldr	r0, [pc, #52]	; (8000b28 <message_task_func+0x164>)
 8000af2:	f003 fc94 	bl	800441e <memset>
				SMS_STATE = NO_SMS;
 8000af6:	4b06      	ldr	r3, [pc, #24]	; (8000b10 <message_task_func+0x14c>)
 8000af8:	2200      	movs	r2, #0
 8000afa:	701a      	strb	r2, [r3, #0]
			break;
 8000afc:	e004      	b.n	8000b08 <message_task_func+0x144>
			default:
				vTaskDelay(500 / portTICK_PERIOD_MS);
 8000afe:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000b02:	f002 fd51 	bl	80035a8 <vTaskDelay>
			break;
 8000b06:	bf00      	nop
		switch (SMS_STATE) {
 8000b08:	e774      	b.n	80009f4 <message_task_func+0x30>
 8000b0a:	bf00      	nop
 8000b0c:	08004e44 	.word	0x08004e44
 8000b10:	200006ee 	.word	0x200006ee
 8000b14:	200005ec 	.word	0x200005ec
 8000b18:	08004e18 	.word	0x08004e18
 8000b1c:	200003f3 	.word	0x200003f3
 8000b20:	08004e34 	.word	0x08004e34
 8000b24:	20002b74 	.word	0x20002b74
 8000b28:	200003ec 	.word	0x200003ec

08000b2c <call_task_func>:
		}
	}
}

void call_task_func(void *argument)
{
 8000b2c:	b5b0      	push	{r4, r5, r7, lr}
 8000b2e:	b0d6      	sub	sp, #344	; 0x158
 8000b30:	af00      	add	r7, sp, #0
 8000b32:	1d3b      	adds	r3, r7, #4
 8000b34:	6018      	str	r0, [r3, #0]
	char custom_command[64] = {0};
 8000b36:	f507 738c 	add.w	r3, r7, #280	; 0x118
 8000b3a:	2240      	movs	r2, #64	; 0x40
 8000b3c:	2100      	movs	r1, #0
 8000b3e:	4618      	mov	r0, r3
 8000b40:	f003 fc6d 	bl	800441e <memset>
	char check_status[] = "AT+CLCC\r\n";
 8000b44:	4aba      	ldr	r2, [pc, #744]	; (8000e30 <call_task_func+0x304>)
 8000b46:	f507 7386 	add.w	r3, r7, #268	; 0x10c
 8000b4a:	ca07      	ldmia	r2, {r0, r1, r2}
 8000b4c:	c303      	stmia	r3!, {r0, r1}
 8000b4e:	801a      	strh	r2, [r3, #0]
	char terminate_call[] = "ATH0\r\n";
 8000b50:	4ab8      	ldr	r2, [pc, #736]	; (8000e34 <call_task_func+0x308>)
 8000b52:	f507 7382 	add.w	r3, r7, #260	; 0x104
 8000b56:	e892 0003 	ldmia.w	r2, {r0, r1}
 8000b5a:	6018      	str	r0, [r3, #0]
 8000b5c:	3304      	adds	r3, #4
 8000b5e:	8019      	strh	r1, [r3, #0]
 8000b60:	3302      	adds	r3, #2
 8000b62:	0c0a      	lsrs	r2, r1, #16
 8000b64:	701a      	strb	r2, [r3, #0]
	char send_call_end[] = "call_progress.t1.txt=\"Call Ended!\"\xFF\xFF\xFF";
 8000b66:	4bb4      	ldr	r3, [pc, #720]	; (8000e38 <call_task_func+0x30c>)
 8000b68:	f107 04dc 	add.w	r4, r7, #220	; 0xdc
 8000b6c:	461d      	mov	r5, r3
 8000b6e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000b70:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000b72:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000b74:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000b76:	e895 0003 	ldmia.w	r5, {r0, r1}
 8000b7a:	6020      	str	r0, [r4, #0]
 8000b7c:	3404      	adds	r4, #4
 8000b7e:	8021      	strh	r1, [r4, #0]
	char send_call_start[] = "call_progress.t1.txt=\"Call Active!!\"\xFF\xFF\xFF";
 8000b80:	4bae      	ldr	r3, [pc, #696]	; (8000e3c <call_task_func+0x310>)
 8000b82:	f107 04b4 	add.w	r4, r7, #180	; 0xb4
 8000b86:	461d      	mov	r5, r3
 8000b88:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000b8a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000b8c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000b8e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000b90:	e895 0003 	ldmia.w	r5, {r0, r1}
 8000b94:	e884 0003 	stmia.w	r4, {r0, r1}
	char start_page_timer[] = "call_progress.tm0.en=1\xFF\xFF\xFF";
 8000b98:	4ba9      	ldr	r3, [pc, #676]	; (8000e40 <call_task_func+0x314>)
 8000b9a:	f107 0498 	add.w	r4, r7, #152	; 0x98
 8000b9e:	461d      	mov	r5, r3
 8000ba0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000ba2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000ba4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8000ba8:	c403      	stmia	r4!, {r0, r1}
 8000baa:	8022      	strh	r2, [r4, #0]
	char send_call_start_incoming[] = "incoming_call.t2.txt=\"Call Active!\"\xFF\xFF\xFF";
 8000bac:	4ba5      	ldr	r3, [pc, #660]	; (8000e44 <call_task_func+0x318>)
 8000bae:	f107 0470 	add.w	r4, r7, #112	; 0x70
 8000bb2:	461d      	mov	r5, r3
 8000bb4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000bb6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000bb8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000bba:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000bbc:	e895 0003 	ldmia.w	r5, {r0, r1}
 8000bc0:	6020      	str	r0, [r4, #0]
 8000bc2:	3404      	adds	r4, #4
 8000bc4:	8021      	strh	r1, [r4, #0]
 8000bc6:	3402      	adds	r4, #2
 8000bc8:	0c0b      	lsrs	r3, r1, #16
 8000bca:	7023      	strb	r3, [r4, #0]
	char send_call_end_incoming[] = "incoming_call.t2.txt=\"Call Ended!\"\xFF\xFF\xFF";
 8000bcc:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8000bd0:	4a9d      	ldr	r2, [pc, #628]	; (8000e48 <call_task_func+0x31c>)
 8000bd2:	461c      	mov	r4, r3
 8000bd4:	4615      	mov	r5, r2
 8000bd6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000bd8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000bda:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000bdc:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000bde:	e895 0003 	ldmia.w	r5, {r0, r1}
 8000be2:	6020      	str	r0, [r4, #0]
 8000be4:	3404      	adds	r4, #4
 8000be6:	8021      	strh	r1, [r4, #0]
	char answer_call[] = "ATA\r\n";
 8000be8:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8000bec:	4a97      	ldr	r2, [pc, #604]	; (8000e4c <call_task_func+0x320>)
 8000bee:	e892 0003 	ldmia.w	r2, {r0, r1}
 8000bf2:	6018      	str	r0, [r3, #0]
 8000bf4:	3304      	adds	r3, #4
 8000bf6:	8019      	strh	r1, [r3, #0]
	char incoming_page[] = "page incoming_call\xFF\xFF\xFF";
 8000bf8:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8000bfc:	4a94      	ldr	r2, [pc, #592]	; (8000e50 <call_task_func+0x324>)
 8000bfe:	461c      	mov	r4, r3
 8000c00:	4615      	mov	r5, r2
 8000c02:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000c04:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000c06:	e895 0003 	ldmia.w	r5, {r0, r1}
 8000c0a:	6020      	str	r0, [r4, #0]
 8000c0c:	3404      	adds	r4, #4
 8000c0e:	8021      	strh	r1, [r4, #0]
	char start_page_timer_incoming[] = "incoming_call.tm0.en=1\xFF\xFF\xFF";
 8000c10:	f107 030c 	add.w	r3, r7, #12
 8000c14:	4a8f      	ldr	r2, [pc, #572]	; (8000e54 <call_task_func+0x328>)
 8000c16:	461c      	mov	r4, r3
 8000c18:	4615      	mov	r5, r2
 8000c1a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000c1c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000c1e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8000c22:	c403      	stmia	r4!, {r0, r1}
 8000c24:	8022      	strh	r2, [r4, #0]
	while(1)
	{
		switch(CALL_STATE)
 8000c26:	4b8c      	ldr	r3, [pc, #560]	; (8000e58 <call_task_func+0x32c>)
 8000c28:	781b      	ldrb	r3, [r3, #0]
 8000c2a:	3b01      	subs	r3, #1
 8000c2c:	2b06      	cmp	r3, #6
 8000c2e:	f200 8190 	bhi.w	8000f52 <call_task_func+0x426>
 8000c32:	a201      	add	r2, pc, #4	; (adr r2, 8000c38 <call_task_func+0x10c>)
 8000c34:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000c38:	08000c55 	.word	0x08000c55
 8000c3c:	08000f53 	.word	0x08000f53
 8000c40:	08000f53 	.word	0x08000f53
 8000c44:	08000d29 	.word	0x08000d29
 8000c48:	08000de3 	.word	0x08000de3
 8000c4c:	08000e81 	.word	0x08000e81
 8000c50:	08000da3 	.word	0x08000da3
		{
			case INITIATE_CALL:
				memset(at_response, 0, RX_SIZE);
 8000c54:	f44f 7280 	mov.w	r2, #256	; 0x100
 8000c58:	2100      	movs	r1, #0
 8000c5a:	4880      	ldr	r0, [pc, #512]	; (8000e5c <call_task_func+0x330>)
 8000c5c:	f003 fbdf 	bl	800441e <memset>
				call_task_data[strlen(call_task_data)-1] = '\0';
 8000c60:	487f      	ldr	r0, [pc, #508]	; (8000e60 <call_task_func+0x334>)
 8000c62:	f7ff fa7f 	bl	8000164 <strlen>
 8000c66:	4603      	mov	r3, r0
 8000c68:	3b01      	subs	r3, #1
 8000c6a:	4a7d      	ldr	r2, [pc, #500]	; (8000e60 <call_task_func+0x334>)
 8000c6c:	2100      	movs	r1, #0
 8000c6e:	54d1      	strb	r1, [r2, r3]
				if(CALL_TYPE == MO)
 8000c70:	4b7c      	ldr	r3, [pc, #496]	; (8000e64 <call_task_func+0x338>)
 8000c72:	781b      	ldrb	r3, [r3, #0]
 8000c74:	2b00      	cmp	r3, #0
 8000c76:	d12b      	bne.n	8000cd0 <call_task_func+0x1a4>
				{
					sprintf(&custom_command[0], "ATD+%si;\r\n", &call_task_data[8]);
 8000c78:	f507 738c 	add.w	r3, r7, #280	; 0x118
 8000c7c:	4a7a      	ldr	r2, [pc, #488]	; (8000e68 <call_task_func+0x33c>)
 8000c7e:	497b      	ldr	r1, [pc, #492]	; (8000e6c <call_task_func+0x340>)
 8000c80:	4618      	mov	r0, r3
 8000c82:	f003 fbd5 	bl	8004430 <siprintf>
					HAL_UART_Transmit(GSM_UART, (uint8_t*)&custom_command[0], strlen(custom_command), 500);
 8000c86:	f507 738c 	add.w	r3, r7, #280	; 0x118
 8000c8a:	4618      	mov	r0, r3
 8000c8c:	f7ff fa6a 	bl	8000164 <strlen>
 8000c90:	4603      	mov	r3, r0
 8000c92:	b29a      	uxth	r2, r3
 8000c94:	f507 718c 	add.w	r1, r7, #280	; 0x118
 8000c98:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 8000c9c:	4874      	ldr	r0, [pc, #464]	; (8000e70 <call_task_func+0x344>)
 8000c9e:	f001 fdc6 	bl	800282e <HAL_UART_Transmit>
					HAL_UART_Receive(GSM_UART, (uint8_t*)&at_response[0], sizeof(at_response), 5000);
 8000ca2:	f241 3388 	movw	r3, #5000	; 0x1388
 8000ca6:	f44f 7280 	mov.w	r2, #256	; 0x100
 8000caa:	496c      	ldr	r1, [pc, #432]	; (8000e5c <call_task_func+0x330>)
 8000cac:	4870      	ldr	r0, [pc, #448]	; (8000e70 <call_task_func+0x344>)
 8000cae:	f001 fe50 	bl	8002952 <HAL_UART_Receive>
					if(strcmp(at_response,"\r\nOK\r\n") == 0)
 8000cb2:	4970      	ldr	r1, [pc, #448]	; (8000e74 <call_task_func+0x348>)
 8000cb4:	4869      	ldr	r0, [pc, #420]	; (8000e5c <call_task_func+0x330>)
 8000cb6:	f7ff fa4b 	bl	8000150 <strcmp>
 8000cba:	4603      	mov	r3, r0
 8000cbc:	2b00      	cmp	r3, #0
 8000cbe:	d103      	bne.n	8000cc8 <call_task_func+0x19c>
						CALL_STATE = DIALING;
 8000cc0:	4b65      	ldr	r3, [pc, #404]	; (8000e58 <call_task_func+0x32c>)
 8000cc2:	2204      	movs	r2, #4
 8000cc4:	701a      	strb	r2, [r3, #0]
					sprintf(custom_command, "incoming_call.t0.txt=\"%s\"\xFF\xFF\xFF", call_task_data);
					HAL_UART_Transmit(DISPLAY_UART, (uint8_t*)incoming_page, strlen(incoming_page), 300);
					HAL_UART_Transmit(DISPLAY_UART, (uint8_t*)custom_command, strlen(custom_command), 300);
					CALL_STATE = CHECK_CALL_STATE;
				}
			break;
 8000cc6:	e146      	b.n	8000f56 <call_task_func+0x42a>
						CALL_STATE = TERMINATE_CALL;
 8000cc8:	4b63      	ldr	r3, [pc, #396]	; (8000e58 <call_task_func+0x32c>)
 8000cca:	2206      	movs	r2, #6
 8000ccc:	701a      	strb	r2, [r3, #0]
			break;
 8000cce:	e142      	b.n	8000f56 <call_task_func+0x42a>
				else if(CALL_TYPE == MT)
 8000cd0:	4b64      	ldr	r3, [pc, #400]	; (8000e64 <call_task_func+0x338>)
 8000cd2:	781b      	ldrb	r3, [r3, #0]
 8000cd4:	2b01      	cmp	r3, #1
 8000cd6:	f040 813e 	bne.w	8000f56 <call_task_func+0x42a>
					sprintf(custom_command, "incoming_call.t0.txt=\"%s\"\xFF\xFF\xFF", call_task_data);
 8000cda:	f507 738c 	add.w	r3, r7, #280	; 0x118
 8000cde:	4a60      	ldr	r2, [pc, #384]	; (8000e60 <call_task_func+0x334>)
 8000ce0:	4965      	ldr	r1, [pc, #404]	; (8000e78 <call_task_func+0x34c>)
 8000ce2:	4618      	mov	r0, r3
 8000ce4:	f003 fba4 	bl	8004430 <siprintf>
					HAL_UART_Transmit(DISPLAY_UART, (uint8_t*)incoming_page, strlen(incoming_page), 300);
 8000ce8:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8000cec:	4618      	mov	r0, r3
 8000cee:	f7ff fa39 	bl	8000164 <strlen>
 8000cf2:	4603      	mov	r3, r0
 8000cf4:	b29a      	uxth	r2, r3
 8000cf6:	f107 0128 	add.w	r1, r7, #40	; 0x28
 8000cfa:	f44f 7396 	mov.w	r3, #300	; 0x12c
 8000cfe:	485f      	ldr	r0, [pc, #380]	; (8000e7c <call_task_func+0x350>)
 8000d00:	f001 fd95 	bl	800282e <HAL_UART_Transmit>
					HAL_UART_Transmit(DISPLAY_UART, (uint8_t*)custom_command, strlen(custom_command), 300);
 8000d04:	f507 738c 	add.w	r3, r7, #280	; 0x118
 8000d08:	4618      	mov	r0, r3
 8000d0a:	f7ff fa2b 	bl	8000164 <strlen>
 8000d0e:	4603      	mov	r3, r0
 8000d10:	b29a      	uxth	r2, r3
 8000d12:	f507 718c 	add.w	r1, r7, #280	; 0x118
 8000d16:	f44f 7396 	mov.w	r3, #300	; 0x12c
 8000d1a:	4858      	ldr	r0, [pc, #352]	; (8000e7c <call_task_func+0x350>)
 8000d1c:	f001 fd87 	bl	800282e <HAL_UART_Transmit>
					CALL_STATE = CHECK_CALL_STATE;
 8000d20:	4b4d      	ldr	r3, [pc, #308]	; (8000e58 <call_task_func+0x32c>)
 8000d22:	2205      	movs	r2, #5
 8000d24:	701a      	strb	r2, [r3, #0]
			break;
 8000d26:	e116      	b.n	8000f56 <call_task_func+0x42a>
			case DIALING:
				memset(at_response, 0, RX_SIZE);
 8000d28:	f44f 7280 	mov.w	r2, #256	; 0x100
 8000d2c:	2100      	movs	r1, #0
 8000d2e:	484b      	ldr	r0, [pc, #300]	; (8000e5c <call_task_func+0x330>)
 8000d30:	f003 fb75 	bl	800441e <memset>
				HAL_UART_Transmit(GSM_UART, (uint8_t*)check_status, strlen(check_status), 200);
 8000d34:	f507 7386 	add.w	r3, r7, #268	; 0x10c
 8000d38:	4618      	mov	r0, r3
 8000d3a:	f7ff fa13 	bl	8000164 <strlen>
 8000d3e:	4603      	mov	r3, r0
 8000d40:	b29a      	uxth	r2, r3
 8000d42:	f507 7186 	add.w	r1, r7, #268	; 0x10c
 8000d46:	23c8      	movs	r3, #200	; 0xc8
 8000d48:	4849      	ldr	r0, [pc, #292]	; (8000e70 <call_task_func+0x344>)
 8000d4a:	f001 fd70 	bl	800282e <HAL_UART_Transmit>
				HAL_UART_Receive(GSM_UART, (uint8_t*)&at_response[0], sizeof(at_response), 400);
 8000d4e:	f44f 73c8 	mov.w	r3, #400	; 0x190
 8000d52:	f44f 7280 	mov.w	r2, #256	; 0x100
 8000d56:	4941      	ldr	r1, [pc, #260]	; (8000e5c <call_task_func+0x330>)
 8000d58:	4845      	ldr	r0, [pc, #276]	; (8000e70 <call_task_func+0x344>)
 8000d5a:	f001 fdfa 	bl	8002952 <HAL_UART_Receive>
				if(at_response[13] == '0')
 8000d5e:	4b3f      	ldr	r3, [pc, #252]	; (8000e5c <call_task_func+0x330>)
 8000d60:	7b5b      	ldrb	r3, [r3, #13]
 8000d62:	2b30      	cmp	r3, #48	; 0x30
 8000d64:	d111      	bne.n	8000d8a <call_task_func+0x25e>
				{
					CALL_STATE = CHECK_CALL_STATE;
 8000d66:	4b3c      	ldr	r3, [pc, #240]	; (8000e58 <call_task_func+0x32c>)
 8000d68:	2205      	movs	r2, #5
 8000d6a:	701a      	strb	r2, [r3, #0]
					HAL_UART_Transmit(DISPLAY_UART, (uint8_t*)send_call_start, strlen(send_call_start), 300);
 8000d6c:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 8000d70:	4618      	mov	r0, r3
 8000d72:	f7ff f9f7 	bl	8000164 <strlen>
 8000d76:	4603      	mov	r3, r0
 8000d78:	b29a      	uxth	r2, r3
 8000d7a:	f107 01b4 	add.w	r1, r7, #180	; 0xb4
 8000d7e:	f44f 7396 	mov.w	r3, #300	; 0x12c
 8000d82:	483e      	ldr	r0, [pc, #248]	; (8000e7c <call_task_func+0x350>)
 8000d84:	f001 fd53 	bl	800282e <HAL_UART_Transmit>
				}
				else if(strcmp(at_response,"\r\nOK\r\n") == 0)
					CALL_STATE = TERMINATE_CALL;
			break;
 8000d88:	e0e7      	b.n	8000f5a <call_task_func+0x42e>
				else if(strcmp(at_response,"\r\nOK\r\n") == 0)
 8000d8a:	493a      	ldr	r1, [pc, #232]	; (8000e74 <call_task_func+0x348>)
 8000d8c:	4833      	ldr	r0, [pc, #204]	; (8000e5c <call_task_func+0x330>)
 8000d8e:	f7ff f9df 	bl	8000150 <strcmp>
 8000d92:	4603      	mov	r3, r0
 8000d94:	2b00      	cmp	r3, #0
 8000d96:	f040 80e0 	bne.w	8000f5a <call_task_func+0x42e>
					CALL_STATE = TERMINATE_CALL;
 8000d9a:	4b2f      	ldr	r3, [pc, #188]	; (8000e58 <call_task_func+0x32c>)
 8000d9c:	2206      	movs	r2, #6
 8000d9e:	701a      	strb	r2, [r3, #0]
			break;
 8000da0:	e0db      	b.n	8000f5a <call_task_func+0x42e>
			case ACCEPT_CALL:
				HAL_UART_Transmit(DISPLAY_UART, (uint8_t*)send_call_start_incoming, strlen(send_call_start_incoming), 300);
 8000da2:	f107 0370 	add.w	r3, r7, #112	; 0x70
 8000da6:	4618      	mov	r0, r3
 8000da8:	f7ff f9dc 	bl	8000164 <strlen>
 8000dac:	4603      	mov	r3, r0
 8000dae:	b29a      	uxth	r2, r3
 8000db0:	f107 0170 	add.w	r1, r7, #112	; 0x70
 8000db4:	f44f 7396 	mov.w	r3, #300	; 0x12c
 8000db8:	4830      	ldr	r0, [pc, #192]	; (8000e7c <call_task_func+0x350>)
 8000dba:	f001 fd38 	bl	800282e <HAL_UART_Transmit>
				HAL_UART_Transmit(GSM_UART, (uint8_t*)answer_call, strlen(answer_call), 300);
 8000dbe:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8000dc2:	4618      	mov	r0, r3
 8000dc4:	f7ff f9ce 	bl	8000164 <strlen>
 8000dc8:	4603      	mov	r3, r0
 8000dca:	b29a      	uxth	r2, r3
 8000dcc:	f107 0140 	add.w	r1, r7, #64	; 0x40
 8000dd0:	f44f 7396 	mov.w	r3, #300	; 0x12c
 8000dd4:	4826      	ldr	r0, [pc, #152]	; (8000e70 <call_task_func+0x344>)
 8000dd6:	f001 fd2a 	bl	800282e <HAL_UART_Transmit>
				CALL_STATE = CHECK_CALL_STATE;
 8000dda:	4b1f      	ldr	r3, [pc, #124]	; (8000e58 <call_task_func+0x32c>)
 8000ddc:	2205      	movs	r2, #5
 8000dde:	701a      	strb	r2, [r3, #0]
			break;
 8000de0:	e0be      	b.n	8000f60 <call_task_func+0x434>
			case CHECK_CALL_STATE:
				memset(at_response, 0, RX_SIZE);
 8000de2:	f44f 7280 	mov.w	r2, #256	; 0x100
 8000de6:	2100      	movs	r1, #0
 8000de8:	481c      	ldr	r0, [pc, #112]	; (8000e5c <call_task_func+0x330>)
 8000dea:	f003 fb18 	bl	800441e <memset>
				HAL_UART_Transmit(GSM_UART, (uint8_t*)check_status, strlen(check_status), 200);
 8000dee:	f507 7386 	add.w	r3, r7, #268	; 0x10c
 8000df2:	4618      	mov	r0, r3
 8000df4:	f7ff f9b6 	bl	8000164 <strlen>
 8000df8:	4603      	mov	r3, r0
 8000dfa:	b29a      	uxth	r2, r3
 8000dfc:	f507 7186 	add.w	r1, r7, #268	; 0x10c
 8000e00:	23c8      	movs	r3, #200	; 0xc8
 8000e02:	481b      	ldr	r0, [pc, #108]	; (8000e70 <call_task_func+0x344>)
 8000e04:	f001 fd13 	bl	800282e <HAL_UART_Transmit>
				HAL_UART_Receive(GSM_UART, (uint8_t*)&at_response[0], sizeof(at_response), 400);
 8000e08:	f44f 73c8 	mov.w	r3, #400	; 0x190
 8000e0c:	f44f 7280 	mov.w	r2, #256	; 0x100
 8000e10:	4912      	ldr	r1, [pc, #72]	; (8000e5c <call_task_func+0x330>)
 8000e12:	4817      	ldr	r0, [pc, #92]	; (8000e70 <call_task_func+0x344>)
 8000e14:	f001 fd9d 	bl	8002952 <HAL_UART_Receive>
				if(strcmp(at_response,"\r\nOK\r\n") == 0)
 8000e18:	4916      	ldr	r1, [pc, #88]	; (8000e74 <call_task_func+0x348>)
 8000e1a:	4810      	ldr	r0, [pc, #64]	; (8000e5c <call_task_func+0x330>)
 8000e1c:	f7ff f998 	bl	8000150 <strcmp>
 8000e20:	4603      	mov	r3, r0
 8000e22:	2b00      	cmp	r3, #0
 8000e24:	f040 809b 	bne.w	8000f5e <call_task_func+0x432>
					CALL_STATE = TERMINATE_CALL;
 8000e28:	4b0b      	ldr	r3, [pc, #44]	; (8000e58 <call_task_func+0x32c>)
 8000e2a:	2206      	movs	r2, #6
 8000e2c:	701a      	strb	r2, [r3, #0]
			break;
 8000e2e:	e096      	b.n	8000f5e <call_task_func+0x432>
 8000e30:	08004e7c 	.word	0x08004e7c
 8000e34:	08004e88 	.word	0x08004e88
 8000e38:	08004e90 	.word	0x08004e90
 8000e3c:	08004eb8 	.word	0x08004eb8
 8000e40:	08004ee0 	.word	0x08004ee0
 8000e44:	08004efc 	.word	0x08004efc
 8000e48:	08004f24 	.word	0x08004f24
 8000e4c:	08004f4c 	.word	0x08004f4c
 8000e50:	08004f54 	.word	0x08004f54
 8000e54:	08004f6c 	.word	0x08004f6c
 8000e58:	200006ed 	.word	0x200006ed
 8000e5c:	200005ec 	.word	0x200005ec
 8000e60:	200004ec 	.word	0x200004ec
 8000e64:	20002bfc 	.word	0x20002bfc
 8000e68:	200004f4 	.word	0x200004f4
 8000e6c:	08004e50 	.word	0x08004e50
 8000e70:	20002b74 	.word	0x20002b74
 8000e74:	08004d80 	.word	0x08004d80
 8000e78:	08004e5c 	.word	0x08004e5c
 8000e7c:	20002bb8 	.word	0x20002bb8
			case TERMINATE_CALL:
				memset(at_response, 0, RX_SIZE);
 8000e80:	f44f 7280 	mov.w	r2, #256	; 0x100
 8000e84:	2100      	movs	r1, #0
 8000e86:	4839      	ldr	r0, [pc, #228]	; (8000f6c <call_task_func+0x440>)
 8000e88:	f003 fac9 	bl	800441e <memset>
				HAL_UART_Transmit(GSM_UART, (uint8_t*)terminate_call, strlen(terminate_call), 200);
 8000e8c:	f507 7382 	add.w	r3, r7, #260	; 0x104
 8000e90:	4618      	mov	r0, r3
 8000e92:	f7ff f967 	bl	8000164 <strlen>
 8000e96:	4603      	mov	r3, r0
 8000e98:	b29a      	uxth	r2, r3
 8000e9a:	f507 7182 	add.w	r1, r7, #260	; 0x104
 8000e9e:	23c8      	movs	r3, #200	; 0xc8
 8000ea0:	4833      	ldr	r0, [pc, #204]	; (8000f70 <call_task_func+0x444>)
 8000ea2:	f001 fcc4 	bl	800282e <HAL_UART_Transmit>
				HAL_UART_Receive(GSM_UART, (uint8_t*)&at_response[0], sizeof(at_response), 400);
 8000ea6:	f44f 73c8 	mov.w	r3, #400	; 0x190
 8000eaa:	f44f 7280 	mov.w	r2, #256	; 0x100
 8000eae:	492f      	ldr	r1, [pc, #188]	; (8000f6c <call_task_func+0x440>)
 8000eb0:	482f      	ldr	r0, [pc, #188]	; (8000f70 <call_task_func+0x444>)
 8000eb2:	f001 fd4e 	bl	8002952 <HAL_UART_Receive>
				if(CALL_TYPE == MO)
 8000eb6:	4b2f      	ldr	r3, [pc, #188]	; (8000f74 <call_task_func+0x448>)
 8000eb8:	781b      	ldrb	r3, [r3, #0]
 8000eba:	2b00      	cmp	r3, #0
 8000ebc:	d11c      	bne.n	8000ef8 <call_task_func+0x3cc>
				{
					HAL_UART_Transmit(DISPLAY_UART, (uint8_t*)send_call_end, strlen(send_call_end), 300);
 8000ebe:	f107 03dc 	add.w	r3, r7, #220	; 0xdc
 8000ec2:	4618      	mov	r0, r3
 8000ec4:	f7ff f94e 	bl	8000164 <strlen>
 8000ec8:	4603      	mov	r3, r0
 8000eca:	b29a      	uxth	r2, r3
 8000ecc:	f107 01dc 	add.w	r1, r7, #220	; 0xdc
 8000ed0:	f44f 7396 	mov.w	r3, #300	; 0x12c
 8000ed4:	4828      	ldr	r0, [pc, #160]	; (8000f78 <call_task_func+0x44c>)
 8000ed6:	f001 fcaa 	bl	800282e <HAL_UART_Transmit>
					HAL_UART_Transmit(DISPLAY_UART, (uint8_t*)start_page_timer, strlen(start_page_timer), 300);
 8000eda:	f107 0398 	add.w	r3, r7, #152	; 0x98
 8000ede:	4618      	mov	r0, r3
 8000ee0:	f7ff f940 	bl	8000164 <strlen>
 8000ee4:	4603      	mov	r3, r0
 8000ee6:	b29a      	uxth	r2, r3
 8000ee8:	f107 0198 	add.w	r1, r7, #152	; 0x98
 8000eec:	f44f 7396 	mov.w	r3, #300	; 0x12c
 8000ef0:	4821      	ldr	r0, [pc, #132]	; (8000f78 <call_task_func+0x44c>)
 8000ef2:	f001 fc9c 	bl	800282e <HAL_UART_Transmit>
 8000ef6:	e01f      	b.n	8000f38 <call_task_func+0x40c>
				}
				else if(CALL_TYPE == MT)
 8000ef8:	4b1e      	ldr	r3, [pc, #120]	; (8000f74 <call_task_func+0x448>)
 8000efa:	781b      	ldrb	r3, [r3, #0]
 8000efc:	2b01      	cmp	r3, #1
 8000efe:	d11b      	bne.n	8000f38 <call_task_func+0x40c>
				{
					HAL_UART_Transmit(DISPLAY_UART, (uint8_t*)send_call_end_incoming, strlen(send_call_end_incoming), 300);
 8000f00:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8000f04:	4618      	mov	r0, r3
 8000f06:	f7ff f92d 	bl	8000164 <strlen>
 8000f0a:	4603      	mov	r3, r0
 8000f0c:	b29a      	uxth	r2, r3
 8000f0e:	f107 0148 	add.w	r1, r7, #72	; 0x48
 8000f12:	f44f 7396 	mov.w	r3, #300	; 0x12c
 8000f16:	4818      	ldr	r0, [pc, #96]	; (8000f78 <call_task_func+0x44c>)
 8000f18:	f001 fc89 	bl	800282e <HAL_UART_Transmit>
					HAL_UART_Transmit(DISPLAY_UART, (uint8_t*)start_page_timer_incoming, strlen(start_page_timer_incoming), 300);
 8000f1c:	f107 030c 	add.w	r3, r7, #12
 8000f20:	4618      	mov	r0, r3
 8000f22:	f7ff f91f 	bl	8000164 <strlen>
 8000f26:	4603      	mov	r3, r0
 8000f28:	b29a      	uxth	r2, r3
 8000f2a:	f107 010c 	add.w	r1, r7, #12
 8000f2e:	f44f 7396 	mov.w	r3, #300	; 0x12c
 8000f32:	4811      	ldr	r0, [pc, #68]	; (8000f78 <call_task_func+0x44c>)
 8000f34:	f001 fc7b 	bl	800282e <HAL_UART_Transmit>
				}
				memset(call_task_data, 0, RX_SIZE);
 8000f38:	f44f 7280 	mov.w	r2, #256	; 0x100
 8000f3c:	2100      	movs	r1, #0
 8000f3e:	480f      	ldr	r0, [pc, #60]	; (8000f7c <call_task_func+0x450>)
 8000f40:	f003 fa6d 	bl	800441e <memset>
				PHONE_STATE = IDLE;
 8000f44:	4b0e      	ldr	r3, [pc, #56]	; (8000f80 <call_task_func+0x454>)
 8000f46:	2201      	movs	r2, #1
 8000f48:	701a      	strb	r2, [r3, #0]
				CALL_STATE = NO_CALL;
 8000f4a:	4b0e      	ldr	r3, [pc, #56]	; (8000f84 <call_task_func+0x458>)
 8000f4c:	2200      	movs	r2, #0
 8000f4e:	701a      	strb	r2, [r3, #0]
			break;
 8000f50:	e006      	b.n	8000f60 <call_task_func+0x434>
			default:
			break;
 8000f52:	bf00      	nop
 8000f54:	e004      	b.n	8000f60 <call_task_func+0x434>
			break;
 8000f56:	bf00      	nop
 8000f58:	e002      	b.n	8000f60 <call_task_func+0x434>
			break;
 8000f5a:	bf00      	nop
 8000f5c:	e000      	b.n	8000f60 <call_task_func+0x434>
			break;
 8000f5e:	bf00      	nop
		}
		vTaskDelay(500 / portTICK_PERIOD_MS);
 8000f60:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000f64:	f002 fb20 	bl	80035a8 <vTaskDelay>
		switch(CALL_STATE)
 8000f68:	e65d      	b.n	8000c26 <call_task_func+0xfa>
 8000f6a:	bf00      	nop
 8000f6c:	200005ec 	.word	0x200005ec
 8000f70:	20002b74 	.word	0x20002b74
 8000f74:	20002bfc 	.word	0x20002bfc
 8000f78:	20002bb8 	.word	0x20002bb8
 8000f7c:	200004ec 	.word	0x200004ec
 8000f80:	20000000 	.word	0x20000000
 8000f84:	200006ed 	.word	0x200006ed

08000f88 <call_detected>:
	}
}

static void call_detected()
{
 8000f88:	b580      	push	{r7, lr}
 8000f8a:	b086      	sub	sp, #24
 8000f8c:	af00      	add	r7, sp, #0
	char check_call[] = "AT+CLCC\r\n";
 8000f8e:	4a2c      	ldr	r2, [pc, #176]	; (8001040 <call_detected+0xb8>)
 8000f90:	463b      	mov	r3, r7
 8000f92:	ca07      	ldmia	r2, {r0, r1, r2}
 8000f94:	c303      	stmia	r3!, {r0, r1}
 8000f96:	801a      	strh	r2, [r3, #0]
	int index;
	char *p1, *p2;
	memset(at_response, 0, sizeof(at_response));
 8000f98:	f44f 7280 	mov.w	r2, #256	; 0x100
 8000f9c:	2100      	movs	r1, #0
 8000f9e:	4829      	ldr	r0, [pc, #164]	; (8001044 <call_detected+0xbc>)
 8000fa0:	f003 fa3d 	bl	800441e <memset>
	HAL_UART_Transmit(GSM_UART, (uint8_t*)check_call, strlen(check_call), 200);
 8000fa4:	463b      	mov	r3, r7
 8000fa6:	4618      	mov	r0, r3
 8000fa8:	f7ff f8dc 	bl	8000164 <strlen>
 8000fac:	4603      	mov	r3, r0
 8000fae:	b29a      	uxth	r2, r3
 8000fb0:	4639      	mov	r1, r7
 8000fb2:	23c8      	movs	r3, #200	; 0xc8
 8000fb4:	4824      	ldr	r0, [pc, #144]	; (8001048 <call_detected+0xc0>)
 8000fb6:	f001 fc3a 	bl	800282e <HAL_UART_Transmit>
	HAL_UART_Receive(GSM_UART, (uint8_t*)&at_response[0], sizeof(at_response), 300);
 8000fba:	f44f 7396 	mov.w	r3, #300	; 0x12c
 8000fbe:	f44f 7280 	mov.w	r2, #256	; 0x100
 8000fc2:	4920      	ldr	r1, [pc, #128]	; (8001044 <call_detected+0xbc>)
 8000fc4:	4820      	ldr	r0, [pc, #128]	; (8001048 <call_detected+0xc0>)
 8000fc6:	f001 fcc4 	bl	8002952 <HAL_UART_Receive>
	if(at_response[13] == '4' && PHONE_STATE == IDLE)
 8000fca:	4b1e      	ldr	r3, [pc, #120]	; (8001044 <call_detected+0xbc>)
 8000fcc:	7b5b      	ldrb	r3, [r3, #13]
 8000fce:	2b34      	cmp	r3, #52	; 0x34
 8000fd0:	d132      	bne.n	8001038 <call_detected+0xb0>
 8000fd2:	4b1e      	ldr	r3, [pc, #120]	; (800104c <call_detected+0xc4>)
 8000fd4:	781b      	ldrb	r3, [r3, #0]
 8000fd6:	2b01      	cmp	r3, #1
 8000fd8:	d12e      	bne.n	8001038 <call_detected+0xb0>
	{
		index = 0;
 8000fda:	2300      	movs	r3, #0
 8000fdc:	617b      	str	r3, [r7, #20]
		p1 = strstr(at_response, "\"");
 8000fde:	2122      	movs	r1, #34	; 0x22
 8000fe0:	4818      	ldr	r0, [pc, #96]	; (8001044 <call_detected+0xbc>)
 8000fe2:	f003 fa45 	bl	8004470 <strchr>
 8000fe6:	6138      	str	r0, [r7, #16]
		p1++;
 8000fe8:	693b      	ldr	r3, [r7, #16]
 8000fea:	3301      	adds	r3, #1
 8000fec:	613b      	str	r3, [r7, #16]
		if(p1)
 8000fee:	693b      	ldr	r3, [r7, #16]
 8000ff0:	2b00      	cmp	r3, #0
 8000ff2:	d00f      	beq.n	8001014 <call_detected+0x8c>
			p2 = strstr(p1,"\"");
 8000ff4:	2122      	movs	r1, #34	; 0x22
 8000ff6:	6938      	ldr	r0, [r7, #16]
 8000ff8:	f003 fa3a 	bl	8004470 <strchr>
 8000ffc:	60f8      	str	r0, [r7, #12]
		while(p1 != p2)
 8000ffe:	e009      	b.n	8001014 <call_detected+0x8c>
		{
			call_task_data[index++] = *p1;
 8001000:	697b      	ldr	r3, [r7, #20]
 8001002:	1c5a      	adds	r2, r3, #1
 8001004:	617a      	str	r2, [r7, #20]
 8001006:	693a      	ldr	r2, [r7, #16]
 8001008:	7811      	ldrb	r1, [r2, #0]
 800100a:	4a11      	ldr	r2, [pc, #68]	; (8001050 <call_detected+0xc8>)
 800100c:	54d1      	strb	r1, [r2, r3]
			p1++;
 800100e:	693b      	ldr	r3, [r7, #16]
 8001010:	3301      	adds	r3, #1
 8001012:	613b      	str	r3, [r7, #16]
		while(p1 != p2)
 8001014:	693a      	ldr	r2, [r7, #16]
 8001016:	68fb      	ldr	r3, [r7, #12]
 8001018:	429a      	cmp	r2, r3
 800101a:	d1f1      	bne.n	8001000 <call_detected+0x78>
		}
		call_task_data[index] = '\n';
 800101c:	4a0c      	ldr	r2, [pc, #48]	; (8001050 <call_detected+0xc8>)
 800101e:	697b      	ldr	r3, [r7, #20]
 8001020:	4413      	add	r3, r2
 8001022:	220a      	movs	r2, #10
 8001024:	701a      	strb	r2, [r3, #0]
		PHONE_STATE = BUSY;
 8001026:	4b09      	ldr	r3, [pc, #36]	; (800104c <call_detected+0xc4>)
 8001028:	2200      	movs	r2, #0
 800102a:	701a      	strb	r2, [r3, #0]
		CALL_TYPE = MT;
 800102c:	4b09      	ldr	r3, [pc, #36]	; (8001054 <call_detected+0xcc>)
 800102e:	2201      	movs	r2, #1
 8001030:	701a      	strb	r2, [r3, #0]
		CALL_STATE = INITIATE_CALL;
 8001032:	4b09      	ldr	r3, [pc, #36]	; (8001058 <call_detected+0xd0>)
 8001034:	2201      	movs	r2, #1
 8001036:	701a      	strb	r2, [r3, #0]
	}
}
 8001038:	bf00      	nop
 800103a:	3718      	adds	r7, #24
 800103c:	46bd      	mov	sp, r7
 800103e:	bd80      	pop	{r7, pc}
 8001040:	08004e7c 	.word	0x08004e7c
 8001044:	200005ec 	.word	0x200005ec
 8001048:	20002b74 	.word	0x20002b74
 800104c:	20000000 	.word	0x20000000
 8001050:	200004ec 	.word	0x200004ec
 8001054:	20002bfc 	.word	0x20002bfc
 8001058:	200006ed 	.word	0x200006ed

0800105c <sms_detected>:

static void sms_detected()
{
 800105c:	b480      	push	{r7}
 800105e:	af00      	add	r7, sp, #0

}
 8001060:	bf00      	nop
 8001062:	46bd      	mov	sp, r7
 8001064:	bc80      	pop	{r7}
 8001066:	4770      	bx	lr

08001068 <ring_int_handler>:

void ring_int_handler()
{
 8001068:	b580      	push	{r7, lr}
 800106a:	b084      	sub	sp, #16
 800106c:	af00      	add	r7, sp, #0
	char phone_state[] = "AT+CPAS\r\n";
 800106e:	4a16      	ldr	r2, [pc, #88]	; (80010c8 <ring_int_handler+0x60>)
 8001070:	1d3b      	adds	r3, r7, #4
 8001072:	ca07      	ldmia	r2, {r0, r1, r2}
 8001074:	c303      	stmia	r3!, {r0, r1}
 8001076:	801a      	strh	r2, [r3, #0]
	HAL_UART_Transmit(GSM_UART, (uint8_t*)phone_state, strlen(phone_state), 200);
 8001078:	1d3b      	adds	r3, r7, #4
 800107a:	4618      	mov	r0, r3
 800107c:	f7ff f872 	bl	8000164 <strlen>
 8001080:	4603      	mov	r3, r0
 8001082:	b29a      	uxth	r2, r3
 8001084:	1d39      	adds	r1, r7, #4
 8001086:	23c8      	movs	r3, #200	; 0xc8
 8001088:	4810      	ldr	r0, [pc, #64]	; (80010cc <ring_int_handler+0x64>)
 800108a:	f001 fbd0 	bl	800282e <HAL_UART_Transmit>
	HAL_UART_Receive(GSM_UART, (uint8_t*)&at_response[0], sizeof(at_response), 500);
 800108e:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 8001092:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001096:	490e      	ldr	r1, [pc, #56]	; (80010d0 <ring_int_handler+0x68>)
 8001098:	480c      	ldr	r0, [pc, #48]	; (80010cc <ring_int_handler+0x64>)
 800109a:	f001 fc5a 	bl	8002952 <HAL_UART_Receive>
	if(strstr(at_response, "RING") != NULL)
 800109e:	490d      	ldr	r1, [pc, #52]	; (80010d4 <ring_int_handler+0x6c>)
 80010a0:	480b      	ldr	r0, [pc, #44]	; (80010d0 <ring_int_handler+0x68>)
 80010a2:	f003 f9fa 	bl	800449a <strstr>
 80010a6:	4603      	mov	r3, r0
 80010a8:	2b00      	cmp	r3, #0
 80010aa:	d002      	beq.n	80010b2 <ring_int_handler+0x4a>
	{
		call_detected();
 80010ac:	f7ff ff6c 	bl	8000f88 <call_detected>
	}
	else if(at_response[9] == '0')
	{
		sms_detected();
	}
}
 80010b0:	e005      	b.n	80010be <ring_int_handler+0x56>
	else if(at_response[9] == '0')
 80010b2:	4b07      	ldr	r3, [pc, #28]	; (80010d0 <ring_int_handler+0x68>)
 80010b4:	7a5b      	ldrb	r3, [r3, #9]
 80010b6:	2b30      	cmp	r3, #48	; 0x30
 80010b8:	d101      	bne.n	80010be <ring_int_handler+0x56>
		sms_detected();
 80010ba:	f7ff ffcf 	bl	800105c <sms_detected>
}
 80010be:	bf00      	nop
 80010c0:	3710      	adds	r7, #16
 80010c2:	46bd      	mov	sp, r7
 80010c4:	bd80      	pop	{r7, pc}
 80010c6:	bf00      	nop
 80010c8:	08004f90 	.word	0x08004f90
 80010cc:	20002b74 	.word	0x20002b74
 80010d0:	200005ec 	.word	0x200005ec
 80010d4:	08004f88 	.word	0x08004f88

080010d8 <HAL_TIM_PeriodElapsedCallback>:
  * a global variable "uwTick" used as application time base.
  * @param  htim : TIM handle
  * @retval None
  */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 80010d8:	b580      	push	{r7, lr}
 80010da:	b082      	sub	sp, #8
 80010dc:	af00      	add	r7, sp, #0
 80010de:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM1) {
 80010e0:	687b      	ldr	r3, [r7, #4]
 80010e2:	681b      	ldr	r3, [r3, #0]
 80010e4:	4a04      	ldr	r2, [pc, #16]	; (80010f8 <HAL_TIM_PeriodElapsedCallback+0x20>)
 80010e6:	4293      	cmp	r3, r2
 80010e8:	d101      	bne.n	80010ee <HAL_TIM_PeriodElapsedCallback+0x16>
    HAL_IncTick();
 80010ea:	f000 f9cf 	bl	800148c <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 80010ee:	bf00      	nop
 80010f0:	3708      	adds	r7, #8
 80010f2:	46bd      	mov	sp, r7
 80010f4:	bd80      	pop	{r7, pc}
 80010f6:	bf00      	nop
 80010f8:	40012c00 	.word	0x40012c00

080010fc <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80010fc:	b480      	push	{r7}
 80010fe:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001100:	b672      	cpsid	i
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8001102:	e7fe      	b.n	8001102 <Error_Handler+0x6>

08001104 <HAL_MspInit>:
 8001104:	b580      	push	{r7, lr}
 8001106:	b084      	sub	sp, #16
 8001108:	af00      	add	r7, sp, #0
 800110a:	4b18      	ldr	r3, [pc, #96]	; (800116c <HAL_MspInit+0x68>)
 800110c:	699b      	ldr	r3, [r3, #24]
 800110e:	4a17      	ldr	r2, [pc, #92]	; (800116c <HAL_MspInit+0x68>)
 8001110:	f043 0301 	orr.w	r3, r3, #1
 8001114:	6193      	str	r3, [r2, #24]
 8001116:	4b15      	ldr	r3, [pc, #84]	; (800116c <HAL_MspInit+0x68>)
 8001118:	699b      	ldr	r3, [r3, #24]
 800111a:	f003 0301 	and.w	r3, r3, #1
 800111e:	60bb      	str	r3, [r7, #8]
 8001120:	68bb      	ldr	r3, [r7, #8]
 8001122:	4b12      	ldr	r3, [pc, #72]	; (800116c <HAL_MspInit+0x68>)
 8001124:	69db      	ldr	r3, [r3, #28]
 8001126:	4a11      	ldr	r2, [pc, #68]	; (800116c <HAL_MspInit+0x68>)
 8001128:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800112c:	61d3      	str	r3, [r2, #28]
 800112e:	4b0f      	ldr	r3, [pc, #60]	; (800116c <HAL_MspInit+0x68>)
 8001130:	69db      	ldr	r3, [r3, #28]
 8001132:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001136:	607b      	str	r3, [r7, #4]
 8001138:	687b      	ldr	r3, [r7, #4]
 800113a:	2200      	movs	r2, #0
 800113c:	210f      	movs	r1, #15
 800113e:	f06f 0001 	mvn.w	r0, #1
 8001142:	f000 fa74 	bl	800162e <HAL_NVIC_SetPriority>
 8001146:	4b0a      	ldr	r3, [pc, #40]	; (8001170 <HAL_MspInit+0x6c>)
 8001148:	685b      	ldr	r3, [r3, #4]
 800114a:	60fb      	str	r3, [r7, #12]
 800114c:	68fb      	ldr	r3, [r7, #12]
 800114e:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 8001152:	60fb      	str	r3, [r7, #12]
 8001154:	68fb      	ldr	r3, [r7, #12]
 8001156:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 800115a:	60fb      	str	r3, [r7, #12]
 800115c:	4a04      	ldr	r2, [pc, #16]	; (8001170 <HAL_MspInit+0x6c>)
 800115e:	68fb      	ldr	r3, [r7, #12]
 8001160:	6053      	str	r3, [r2, #4]
 8001162:	bf00      	nop
 8001164:	3710      	adds	r7, #16
 8001166:	46bd      	mov	sp, r7
 8001168:	bd80      	pop	{r7, pc}
 800116a:	bf00      	nop
 800116c:	40021000 	.word	0x40021000
 8001170:	40010000 	.word	0x40010000

08001174 <HAL_UART_MspInit>:
 8001174:	b580      	push	{r7, lr}
 8001176:	b08a      	sub	sp, #40	; 0x28
 8001178:	af00      	add	r7, sp, #0
 800117a:	6078      	str	r0, [r7, #4]
 800117c:	f107 0318 	add.w	r3, r7, #24
 8001180:	2200      	movs	r2, #0
 8001182:	601a      	str	r2, [r3, #0]
 8001184:	605a      	str	r2, [r3, #4]
 8001186:	609a      	str	r2, [r3, #8]
 8001188:	60da      	str	r2, [r3, #12]
 800118a:	687b      	ldr	r3, [r7, #4]
 800118c:	681b      	ldr	r3, [r3, #0]
 800118e:	4a3b      	ldr	r2, [pc, #236]	; (800127c <HAL_UART_MspInit+0x108>)
 8001190:	4293      	cmp	r3, r2
 8001192:	d132      	bne.n	80011fa <HAL_UART_MspInit+0x86>
 8001194:	4b3a      	ldr	r3, [pc, #232]	; (8001280 <HAL_UART_MspInit+0x10c>)
 8001196:	699b      	ldr	r3, [r3, #24]
 8001198:	4a39      	ldr	r2, [pc, #228]	; (8001280 <HAL_UART_MspInit+0x10c>)
 800119a:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800119e:	6193      	str	r3, [r2, #24]
 80011a0:	4b37      	ldr	r3, [pc, #220]	; (8001280 <HAL_UART_MspInit+0x10c>)
 80011a2:	699b      	ldr	r3, [r3, #24]
 80011a4:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80011a8:	617b      	str	r3, [r7, #20]
 80011aa:	697b      	ldr	r3, [r7, #20]
 80011ac:	4b34      	ldr	r3, [pc, #208]	; (8001280 <HAL_UART_MspInit+0x10c>)
 80011ae:	699b      	ldr	r3, [r3, #24]
 80011b0:	4a33      	ldr	r2, [pc, #204]	; (8001280 <HAL_UART_MspInit+0x10c>)
 80011b2:	f043 0304 	orr.w	r3, r3, #4
 80011b6:	6193      	str	r3, [r2, #24]
 80011b8:	4b31      	ldr	r3, [pc, #196]	; (8001280 <HAL_UART_MspInit+0x10c>)
 80011ba:	699b      	ldr	r3, [r3, #24]
 80011bc:	f003 0304 	and.w	r3, r3, #4
 80011c0:	613b      	str	r3, [r7, #16]
 80011c2:	693b      	ldr	r3, [r7, #16]
 80011c4:	f44f 7300 	mov.w	r3, #512	; 0x200
 80011c8:	61bb      	str	r3, [r7, #24]
 80011ca:	2302      	movs	r3, #2
 80011cc:	61fb      	str	r3, [r7, #28]
 80011ce:	2303      	movs	r3, #3
 80011d0:	627b      	str	r3, [r7, #36]	; 0x24
 80011d2:	f107 0318 	add.w	r3, r7, #24
 80011d6:	4619      	mov	r1, r3
 80011d8:	482a      	ldr	r0, [pc, #168]	; (8001284 <HAL_UART_MspInit+0x110>)
 80011da:	f000 fac9 	bl	8001770 <HAL_GPIO_Init>
 80011de:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80011e2:	61bb      	str	r3, [r7, #24]
 80011e4:	2300      	movs	r3, #0
 80011e6:	61fb      	str	r3, [r7, #28]
 80011e8:	2300      	movs	r3, #0
 80011ea:	623b      	str	r3, [r7, #32]
 80011ec:	f107 0318 	add.w	r3, r7, #24
 80011f0:	4619      	mov	r1, r3
 80011f2:	4824      	ldr	r0, [pc, #144]	; (8001284 <HAL_UART_MspInit+0x110>)
 80011f4:	f000 fabc 	bl	8001770 <HAL_GPIO_Init>
 80011f8:	e03c      	b.n	8001274 <HAL_UART_MspInit+0x100>
 80011fa:	687b      	ldr	r3, [r7, #4]
 80011fc:	681b      	ldr	r3, [r3, #0]
 80011fe:	4a22      	ldr	r2, [pc, #136]	; (8001288 <HAL_UART_MspInit+0x114>)
 8001200:	4293      	cmp	r3, r2
 8001202:	d137      	bne.n	8001274 <HAL_UART_MspInit+0x100>
 8001204:	4b1e      	ldr	r3, [pc, #120]	; (8001280 <HAL_UART_MspInit+0x10c>)
 8001206:	69db      	ldr	r3, [r3, #28]
 8001208:	4a1d      	ldr	r2, [pc, #116]	; (8001280 <HAL_UART_MspInit+0x10c>)
 800120a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800120e:	61d3      	str	r3, [r2, #28]
 8001210:	4b1b      	ldr	r3, [pc, #108]	; (8001280 <HAL_UART_MspInit+0x10c>)
 8001212:	69db      	ldr	r3, [r3, #28]
 8001214:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001218:	60fb      	str	r3, [r7, #12]
 800121a:	68fb      	ldr	r3, [r7, #12]
 800121c:	4b18      	ldr	r3, [pc, #96]	; (8001280 <HAL_UART_MspInit+0x10c>)
 800121e:	699b      	ldr	r3, [r3, #24]
 8001220:	4a17      	ldr	r2, [pc, #92]	; (8001280 <HAL_UART_MspInit+0x10c>)
 8001222:	f043 0304 	orr.w	r3, r3, #4
 8001226:	6193      	str	r3, [r2, #24]
 8001228:	4b15      	ldr	r3, [pc, #84]	; (8001280 <HAL_UART_MspInit+0x10c>)
 800122a:	699b      	ldr	r3, [r3, #24]
 800122c:	f003 0304 	and.w	r3, r3, #4
 8001230:	60bb      	str	r3, [r7, #8]
 8001232:	68bb      	ldr	r3, [r7, #8]
 8001234:	2304      	movs	r3, #4
 8001236:	61bb      	str	r3, [r7, #24]
 8001238:	2302      	movs	r3, #2
 800123a:	61fb      	str	r3, [r7, #28]
 800123c:	2303      	movs	r3, #3
 800123e:	627b      	str	r3, [r7, #36]	; 0x24
 8001240:	f107 0318 	add.w	r3, r7, #24
 8001244:	4619      	mov	r1, r3
 8001246:	480f      	ldr	r0, [pc, #60]	; (8001284 <HAL_UART_MspInit+0x110>)
 8001248:	f000 fa92 	bl	8001770 <HAL_GPIO_Init>
 800124c:	2308      	movs	r3, #8
 800124e:	61bb      	str	r3, [r7, #24]
 8001250:	2300      	movs	r3, #0
 8001252:	61fb      	str	r3, [r7, #28]
 8001254:	2300      	movs	r3, #0
 8001256:	623b      	str	r3, [r7, #32]
 8001258:	f107 0318 	add.w	r3, r7, #24
 800125c:	4619      	mov	r1, r3
 800125e:	4809      	ldr	r0, [pc, #36]	; (8001284 <HAL_UART_MspInit+0x110>)
 8001260:	f000 fa86 	bl	8001770 <HAL_GPIO_Init>
 8001264:	2200      	movs	r2, #0
 8001266:	2105      	movs	r1, #5
 8001268:	2026      	movs	r0, #38	; 0x26
 800126a:	f000 f9e0 	bl	800162e <HAL_NVIC_SetPriority>
 800126e:	2026      	movs	r0, #38	; 0x26
 8001270:	f000 f9f9 	bl	8001666 <HAL_NVIC_EnableIRQ>
 8001274:	bf00      	nop
 8001276:	3728      	adds	r7, #40	; 0x28
 8001278:	46bd      	mov	sp, r7
 800127a:	bd80      	pop	{r7, pc}
 800127c:	40013800 	.word	0x40013800
 8001280:	40021000 	.word	0x40021000
 8001284:	40010800 	.word	0x40010800
 8001288:	40004400 	.word	0x40004400

0800128c <HAL_InitTick>:
 800128c:	b580      	push	{r7, lr}
 800128e:	b08c      	sub	sp, #48	; 0x30
 8001290:	af00      	add	r7, sp, #0
 8001292:	6078      	str	r0, [r7, #4]
 8001294:	2300      	movs	r3, #0
 8001296:	62fb      	str	r3, [r7, #44]	; 0x2c
 8001298:	2300      	movs	r3, #0
 800129a:	62bb      	str	r3, [r7, #40]	; 0x28
 800129c:	2200      	movs	r2, #0
 800129e:	6879      	ldr	r1, [r7, #4]
 80012a0:	2019      	movs	r0, #25
 80012a2:	f000 f9c4 	bl	800162e <HAL_NVIC_SetPriority>
 80012a6:	2019      	movs	r0, #25
 80012a8:	f000 f9dd 	bl	8001666 <HAL_NVIC_EnableIRQ>
 80012ac:	4b1e      	ldr	r3, [pc, #120]	; (8001328 <HAL_InitTick+0x9c>)
 80012ae:	699b      	ldr	r3, [r3, #24]
 80012b0:	4a1d      	ldr	r2, [pc, #116]	; (8001328 <HAL_InitTick+0x9c>)
 80012b2:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80012b6:	6193      	str	r3, [r2, #24]
 80012b8:	4b1b      	ldr	r3, [pc, #108]	; (8001328 <HAL_InitTick+0x9c>)
 80012ba:	699b      	ldr	r3, [r3, #24]
 80012bc:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80012c0:	60fb      	str	r3, [r7, #12]
 80012c2:	68fb      	ldr	r3, [r7, #12]
 80012c4:	f107 0210 	add.w	r2, r7, #16
 80012c8:	f107 0314 	add.w	r3, r7, #20
 80012cc:	4611      	mov	r1, r2
 80012ce:	4618      	mov	r0, r3
 80012d0:	f000 ffc8 	bl	8002264 <HAL_RCC_GetClockConfig>
 80012d4:	f000 ffb2 	bl	800223c <HAL_RCC_GetPCLK2Freq>
 80012d8:	62f8      	str	r0, [r7, #44]	; 0x2c
 80012da:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80012dc:	4a13      	ldr	r2, [pc, #76]	; (800132c <HAL_InitTick+0xa0>)
 80012de:	fba2 2303 	umull	r2, r3, r2, r3
 80012e2:	0c9b      	lsrs	r3, r3, #18
 80012e4:	3b01      	subs	r3, #1
 80012e6:	62bb      	str	r3, [r7, #40]	; 0x28
 80012e8:	4b11      	ldr	r3, [pc, #68]	; (8001330 <HAL_InitTick+0xa4>)
 80012ea:	4a12      	ldr	r2, [pc, #72]	; (8001334 <HAL_InitTick+0xa8>)
 80012ec:	601a      	str	r2, [r3, #0]
 80012ee:	4b10      	ldr	r3, [pc, #64]	; (8001330 <HAL_InitTick+0xa4>)
 80012f0:	f240 32e7 	movw	r2, #999	; 0x3e7
 80012f4:	60da      	str	r2, [r3, #12]
 80012f6:	4a0e      	ldr	r2, [pc, #56]	; (8001330 <HAL_InitTick+0xa4>)
 80012f8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80012fa:	6053      	str	r3, [r2, #4]
 80012fc:	4b0c      	ldr	r3, [pc, #48]	; (8001330 <HAL_InitTick+0xa4>)
 80012fe:	2200      	movs	r2, #0
 8001300:	611a      	str	r2, [r3, #16]
 8001302:	4b0b      	ldr	r3, [pc, #44]	; (8001330 <HAL_InitTick+0xa4>)
 8001304:	2200      	movs	r2, #0
 8001306:	609a      	str	r2, [r3, #8]
 8001308:	4809      	ldr	r0, [pc, #36]	; (8001330 <HAL_InitTick+0xa4>)
 800130a:	f000 fff9 	bl	8002300 <HAL_TIM_Base_Init>
 800130e:	4603      	mov	r3, r0
 8001310:	2b00      	cmp	r3, #0
 8001312:	d104      	bne.n	800131e <HAL_InitTick+0x92>
 8001314:	4806      	ldr	r0, [pc, #24]	; (8001330 <HAL_InitTick+0xa4>)
 8001316:	f001 f84b 	bl	80023b0 <HAL_TIM_Base_Start_IT>
 800131a:	4603      	mov	r3, r0
 800131c:	e000      	b.n	8001320 <HAL_InitTick+0x94>
 800131e:	2301      	movs	r3, #1
 8001320:	4618      	mov	r0, r3
 8001322:	3730      	adds	r7, #48	; 0x30
 8001324:	46bd      	mov	sp, r7
 8001326:	bd80      	pop	{r7, pc}
 8001328:	40021000 	.word	0x40021000
 800132c:	431bde83 	.word	0x431bde83
 8001330:	20002c00 	.word	0x20002c00
 8001334:	40012c00 	.word	0x40012c00

08001338 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001338:	b480      	push	{r7}
 800133a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 800133c:	e7fe      	b.n	800133c <NMI_Handler+0x4>

0800133e <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 800133e:	b480      	push	{r7}
 8001340:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001342:	e7fe      	b.n	8001342 <HardFault_Handler+0x4>

08001344 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001344:	b480      	push	{r7}
 8001346:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001348:	e7fe      	b.n	8001348 <MemManage_Handler+0x4>

0800134a <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 800134a:	b480      	push	{r7}
 800134c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800134e:	e7fe      	b.n	800134e <BusFault_Handler+0x4>

08001350 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001350:	b480      	push	{r7}
 8001352:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001354:	e7fe      	b.n	8001354 <UsageFault_Handler+0x4>

08001356 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001356:	b480      	push	{r7}
 8001358:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 800135a:	bf00      	nop
 800135c:	46bd      	mov	sp, r7
 800135e:	bc80      	pop	{r7}
 8001360:	4770      	bx	lr

08001362 <EXTI0_IRQHandler>:

/**
  * @brief This function handles EXTI line0 interrupt.
  */
void EXTI0_IRQHandler(void)
{
 8001362:	b580      	push	{r7, lr}
 8001364:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI0_IRQn 0 */
	ring_int_handler();
 8001366:	f7ff fe7f 	bl	8001068 <ring_int_handler>
  /* USER CODE END EXTI0_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_0);
 800136a:	2001      	movs	r0, #1
 800136c:	f000 fb5a 	bl	8001a24 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI0_IRQn 1 */

  /* USER CODE END EXTI0_IRQn 1 */
}
 8001370:	bf00      	nop
 8001372:	bd80      	pop	{r7, pc}

08001374 <TIM1_UP_IRQHandler>:

/**
  * @brief This function handles TIM1 update interrupt.
  */
void TIM1_UP_IRQHandler(void)
{
 8001374:	b580      	push	{r7, lr}
 8001376:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM1_UP_IRQn 0 */

  /* USER CODE END TIM1_UP_IRQn 0 */
  HAL_TIM_IRQHandler(&htim1);
 8001378:	4802      	ldr	r0, [pc, #8]	; (8001384 <TIM1_UP_IRQHandler+0x10>)
 800137a:	f001 f86b 	bl	8002454 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM1_UP_IRQn 1 */

  /* USER CODE END TIM1_UP_IRQn 1 */
}
 800137e:	bf00      	nop
 8001380:	bd80      	pop	{r7, pc}
 8001382:	bf00      	nop
 8001384:	20002c00 	.word	0x20002c00

08001388 <USART2_IRQHandler>:

/**
  * @brief This function handles USART2 global interrupt.
  */
void USART2_IRQHandler(void)
{
 8001388:	b580      	push	{r7, lr}
 800138a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART2_IRQn 0 */

  /* USER CODE END USART2_IRQn 0 */
  HAL_UART_IRQHandler(&huart2);
 800138c:	4802      	ldr	r0, [pc, #8]	; (8001398 <USART2_IRQHandler+0x10>)
 800138e:	f001 fbd3 	bl	8002b38 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART2_IRQn 1 */

  /* USER CODE END USART2_IRQn 1 */
}
 8001392:	bf00      	nop
 8001394:	bd80      	pop	{r7, pc}
 8001396:	bf00      	nop
 8001398:	20002bb8 	.word	0x20002bb8

0800139c <_sbrk>:
 800139c:	b580      	push	{r7, lr}
 800139e:	b086      	sub	sp, #24
 80013a0:	af00      	add	r7, sp, #0
 80013a2:	6078      	str	r0, [r7, #4]
 80013a4:	4a14      	ldr	r2, [pc, #80]	; (80013f8 <_sbrk+0x5c>)
 80013a6:	4b15      	ldr	r3, [pc, #84]	; (80013fc <_sbrk+0x60>)
 80013a8:	1ad3      	subs	r3, r2, r3
 80013aa:	617b      	str	r3, [r7, #20]
 80013ac:	697b      	ldr	r3, [r7, #20]
 80013ae:	613b      	str	r3, [r7, #16]
 80013b0:	4b13      	ldr	r3, [pc, #76]	; (8001400 <_sbrk+0x64>)
 80013b2:	681b      	ldr	r3, [r3, #0]
 80013b4:	2b00      	cmp	r3, #0
 80013b6:	d102      	bne.n	80013be <_sbrk+0x22>
 80013b8:	4b11      	ldr	r3, [pc, #68]	; (8001400 <_sbrk+0x64>)
 80013ba:	4a12      	ldr	r2, [pc, #72]	; (8001404 <_sbrk+0x68>)
 80013bc:	601a      	str	r2, [r3, #0]
 80013be:	4b10      	ldr	r3, [pc, #64]	; (8001400 <_sbrk+0x64>)
 80013c0:	681a      	ldr	r2, [r3, #0]
 80013c2:	687b      	ldr	r3, [r7, #4]
 80013c4:	4413      	add	r3, r2
 80013c6:	693a      	ldr	r2, [r7, #16]
 80013c8:	429a      	cmp	r2, r3
 80013ca:	d207      	bcs.n	80013dc <_sbrk+0x40>
 80013cc:	f002 fff2 	bl	80043b4 <__errno>
 80013d0:	4602      	mov	r2, r0
 80013d2:	230c      	movs	r3, #12
 80013d4:	6013      	str	r3, [r2, #0]
 80013d6:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80013da:	e009      	b.n	80013f0 <_sbrk+0x54>
 80013dc:	4b08      	ldr	r3, [pc, #32]	; (8001400 <_sbrk+0x64>)
 80013de:	681b      	ldr	r3, [r3, #0]
 80013e0:	60fb      	str	r3, [r7, #12]
 80013e2:	4b07      	ldr	r3, [pc, #28]	; (8001400 <_sbrk+0x64>)
 80013e4:	681a      	ldr	r2, [r3, #0]
 80013e6:	687b      	ldr	r3, [r7, #4]
 80013e8:	4413      	add	r3, r2
 80013ea:	4a05      	ldr	r2, [pc, #20]	; (8001400 <_sbrk+0x64>)
 80013ec:	6013      	str	r3, [r2, #0]
 80013ee:	68fb      	ldr	r3, [r7, #12]
 80013f0:	4618      	mov	r0, r3
 80013f2:	3718      	adds	r7, #24
 80013f4:	46bd      	mov	sp, r7
 80013f6:	bd80      	pop	{r7, pc}
 80013f8:	20005000 	.word	0x20005000
 80013fc:	00000400 	.word	0x00000400
 8001400:	200006f4 	.word	0x200006f4
 8001404:	20002c50 	.word	0x20002c50

08001408 <SystemInit>:
 8001408:	b480      	push	{r7}
 800140a:	af00      	add	r7, sp, #0
 800140c:	bf00      	nop
 800140e:	46bd      	mov	sp, r7
 8001410:	bc80      	pop	{r7}
 8001412:	4770      	bx	lr

08001414 <Reset_Handler>:
 8001414:	2100      	movs	r1, #0
 8001416:	e003      	b.n	8001420 <LoopCopyDataInit>

08001418 <CopyDataInit>:
 8001418:	4b0b      	ldr	r3, [pc, #44]	; (8001448 <LoopFillZerobss+0x14>)
 800141a:	585b      	ldr	r3, [r3, r1]
 800141c:	5043      	str	r3, [r0, r1]
 800141e:	3104      	adds	r1, #4

08001420 <LoopCopyDataInit>:
 8001420:	480a      	ldr	r0, [pc, #40]	; (800144c <LoopFillZerobss+0x18>)
 8001422:	4b0b      	ldr	r3, [pc, #44]	; (8001450 <LoopFillZerobss+0x1c>)
 8001424:	1842      	adds	r2, r0, r1
 8001426:	429a      	cmp	r2, r3
 8001428:	d3f6      	bcc.n	8001418 <CopyDataInit>
 800142a:	4a0a      	ldr	r2, [pc, #40]	; (8001454 <LoopFillZerobss+0x20>)
 800142c:	e002      	b.n	8001434 <LoopFillZerobss>

0800142e <FillZerobss>:
 800142e:	2300      	movs	r3, #0
 8001430:	f842 3b04 	str.w	r3, [r2], #4

08001434 <LoopFillZerobss>:
 8001434:	4b08      	ldr	r3, [pc, #32]	; (8001458 <LoopFillZerobss+0x24>)
 8001436:	429a      	cmp	r2, r3
 8001438:	d3f9      	bcc.n	800142e <FillZerobss>
 800143a:	f7ff ffe5 	bl	8001408 <SystemInit>
 800143e:	f002 ffbf 	bl	80043c0 <__libc_init_array>
 8001442:	f7fe fee3 	bl	800020c <main>
 8001446:	4770      	bx	lr
 8001448:	0800500c 	.word	0x0800500c
 800144c:	20000000 	.word	0x20000000
 8001450:	20000078 	.word	0x20000078
 8001454:	20000078 	.word	0x20000078
 8001458:	20002c50 	.word	0x20002c50

0800145c <ADC1_2_IRQHandler>:
 800145c:	e7fe      	b.n	800145c <ADC1_2_IRQHandler>
	...

08001460 <HAL_Init>:
 8001460:	b580      	push	{r7, lr}
 8001462:	af00      	add	r7, sp, #0
 8001464:	4b08      	ldr	r3, [pc, #32]	; (8001488 <HAL_Init+0x28>)
 8001466:	681b      	ldr	r3, [r3, #0]
 8001468:	4a07      	ldr	r2, [pc, #28]	; (8001488 <HAL_Init+0x28>)
 800146a:	f043 0310 	orr.w	r3, r3, #16
 800146e:	6013      	str	r3, [r2, #0]
 8001470:	2003      	movs	r0, #3
 8001472:	f000 f8d1 	bl	8001618 <HAL_NVIC_SetPriorityGrouping>
 8001476:	2000      	movs	r0, #0
 8001478:	f7ff ff08 	bl	800128c <HAL_InitTick>
 800147c:	f7ff fe42 	bl	8001104 <HAL_MspInit>
 8001480:	2300      	movs	r3, #0
 8001482:	4618      	mov	r0, r3
 8001484:	bd80      	pop	{r7, pc}
 8001486:	bf00      	nop
 8001488:	40022000 	.word	0x40022000

0800148c <HAL_IncTick>:
 800148c:	b480      	push	{r7}
 800148e:	af00      	add	r7, sp, #0
 8001490:	4b05      	ldr	r3, [pc, #20]	; (80014a8 <HAL_IncTick+0x1c>)
 8001492:	781b      	ldrb	r3, [r3, #0]
 8001494:	461a      	mov	r2, r3
 8001496:	4b05      	ldr	r3, [pc, #20]	; (80014ac <HAL_IncTick+0x20>)
 8001498:	681b      	ldr	r3, [r3, #0]
 800149a:	4413      	add	r3, r2
 800149c:	4a03      	ldr	r2, [pc, #12]	; (80014ac <HAL_IncTick+0x20>)
 800149e:	6013      	str	r3, [r2, #0]
 80014a0:	bf00      	nop
 80014a2:	46bd      	mov	sp, r7
 80014a4:	bc80      	pop	{r7}
 80014a6:	4770      	bx	lr
 80014a8:	2000000c 	.word	0x2000000c
 80014ac:	20002c48 	.word	0x20002c48

080014b0 <HAL_GetTick>:
 80014b0:	b480      	push	{r7}
 80014b2:	af00      	add	r7, sp, #0
 80014b4:	4b02      	ldr	r3, [pc, #8]	; (80014c0 <HAL_GetTick+0x10>)
 80014b6:	681b      	ldr	r3, [r3, #0]
 80014b8:	4618      	mov	r0, r3
 80014ba:	46bd      	mov	sp, r7
 80014bc:	bc80      	pop	{r7}
 80014be:	4770      	bx	lr
 80014c0:	20002c48 	.word	0x20002c48

080014c4 <__NVIC_SetPriorityGrouping>:
 80014c4:	b480      	push	{r7}
 80014c6:	b085      	sub	sp, #20
 80014c8:	af00      	add	r7, sp, #0
 80014ca:	6078      	str	r0, [r7, #4]
 80014cc:	687b      	ldr	r3, [r7, #4]
 80014ce:	f003 0307 	and.w	r3, r3, #7
 80014d2:	60fb      	str	r3, [r7, #12]
 80014d4:	4b0c      	ldr	r3, [pc, #48]	; (8001508 <__NVIC_SetPriorityGrouping+0x44>)
 80014d6:	68db      	ldr	r3, [r3, #12]
 80014d8:	60bb      	str	r3, [r7, #8]
 80014da:	68ba      	ldr	r2, [r7, #8]
 80014dc:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 80014e0:	4013      	ands	r3, r2
 80014e2:	60bb      	str	r3, [r7, #8]
 80014e4:	68fb      	ldr	r3, [r7, #12]
 80014e6:	021a      	lsls	r2, r3, #8
 80014e8:	68bb      	ldr	r3, [r7, #8]
 80014ea:	4313      	orrs	r3, r2
 80014ec:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80014f0:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80014f4:	60bb      	str	r3, [r7, #8]
 80014f6:	4a04      	ldr	r2, [pc, #16]	; (8001508 <__NVIC_SetPriorityGrouping+0x44>)
 80014f8:	68bb      	ldr	r3, [r7, #8]
 80014fa:	60d3      	str	r3, [r2, #12]
 80014fc:	bf00      	nop
 80014fe:	3714      	adds	r7, #20
 8001500:	46bd      	mov	sp, r7
 8001502:	bc80      	pop	{r7}
 8001504:	4770      	bx	lr
 8001506:	bf00      	nop
 8001508:	e000ed00 	.word	0xe000ed00

0800150c <__NVIC_GetPriorityGrouping>:
 800150c:	b480      	push	{r7}
 800150e:	af00      	add	r7, sp, #0
 8001510:	4b04      	ldr	r3, [pc, #16]	; (8001524 <__NVIC_GetPriorityGrouping+0x18>)
 8001512:	68db      	ldr	r3, [r3, #12]
 8001514:	0a1b      	lsrs	r3, r3, #8
 8001516:	f003 0307 	and.w	r3, r3, #7
 800151a:	4618      	mov	r0, r3
 800151c:	46bd      	mov	sp, r7
 800151e:	bc80      	pop	{r7}
 8001520:	4770      	bx	lr
 8001522:	bf00      	nop
 8001524:	e000ed00 	.word	0xe000ed00

08001528 <__NVIC_EnableIRQ>:
 8001528:	b480      	push	{r7}
 800152a:	b083      	sub	sp, #12
 800152c:	af00      	add	r7, sp, #0
 800152e:	4603      	mov	r3, r0
 8001530:	71fb      	strb	r3, [r7, #7]
 8001532:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001536:	2b00      	cmp	r3, #0
 8001538:	db0b      	blt.n	8001552 <__NVIC_EnableIRQ+0x2a>
 800153a:	79fb      	ldrb	r3, [r7, #7]
 800153c:	f003 021f 	and.w	r2, r3, #31
 8001540:	4906      	ldr	r1, [pc, #24]	; (800155c <__NVIC_EnableIRQ+0x34>)
 8001542:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001546:	095b      	lsrs	r3, r3, #5
 8001548:	2001      	movs	r0, #1
 800154a:	fa00 f202 	lsl.w	r2, r0, r2
 800154e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001552:	bf00      	nop
 8001554:	370c      	adds	r7, #12
 8001556:	46bd      	mov	sp, r7
 8001558:	bc80      	pop	{r7}
 800155a:	4770      	bx	lr
 800155c:	e000e100 	.word	0xe000e100

08001560 <__NVIC_SetPriority>:
 8001560:	b480      	push	{r7}
 8001562:	b083      	sub	sp, #12
 8001564:	af00      	add	r7, sp, #0
 8001566:	4603      	mov	r3, r0
 8001568:	6039      	str	r1, [r7, #0]
 800156a:	71fb      	strb	r3, [r7, #7]
 800156c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001570:	2b00      	cmp	r3, #0
 8001572:	db0a      	blt.n	800158a <__NVIC_SetPriority+0x2a>
 8001574:	683b      	ldr	r3, [r7, #0]
 8001576:	b2da      	uxtb	r2, r3
 8001578:	490c      	ldr	r1, [pc, #48]	; (80015ac <__NVIC_SetPriority+0x4c>)
 800157a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800157e:	0112      	lsls	r2, r2, #4
 8001580:	b2d2      	uxtb	r2, r2
 8001582:	440b      	add	r3, r1
 8001584:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8001588:	e00a      	b.n	80015a0 <__NVIC_SetPriority+0x40>
 800158a:	683b      	ldr	r3, [r7, #0]
 800158c:	b2da      	uxtb	r2, r3
 800158e:	4908      	ldr	r1, [pc, #32]	; (80015b0 <__NVIC_SetPriority+0x50>)
 8001590:	79fb      	ldrb	r3, [r7, #7]
 8001592:	f003 030f 	and.w	r3, r3, #15
 8001596:	3b04      	subs	r3, #4
 8001598:	0112      	lsls	r2, r2, #4
 800159a:	b2d2      	uxtb	r2, r2
 800159c:	440b      	add	r3, r1
 800159e:	761a      	strb	r2, [r3, #24]
 80015a0:	bf00      	nop
 80015a2:	370c      	adds	r7, #12
 80015a4:	46bd      	mov	sp, r7
 80015a6:	bc80      	pop	{r7}
 80015a8:	4770      	bx	lr
 80015aa:	bf00      	nop
 80015ac:	e000e100 	.word	0xe000e100
 80015b0:	e000ed00 	.word	0xe000ed00

080015b4 <NVIC_EncodePriority>:
 80015b4:	b480      	push	{r7}
 80015b6:	b089      	sub	sp, #36	; 0x24
 80015b8:	af00      	add	r7, sp, #0
 80015ba:	60f8      	str	r0, [r7, #12]
 80015bc:	60b9      	str	r1, [r7, #8]
 80015be:	607a      	str	r2, [r7, #4]
 80015c0:	68fb      	ldr	r3, [r7, #12]
 80015c2:	f003 0307 	and.w	r3, r3, #7
 80015c6:	61fb      	str	r3, [r7, #28]
 80015c8:	69fb      	ldr	r3, [r7, #28]
 80015ca:	f1c3 0307 	rsb	r3, r3, #7
 80015ce:	2b04      	cmp	r3, #4
 80015d0:	bf28      	it	cs
 80015d2:	2304      	movcs	r3, #4
 80015d4:	61bb      	str	r3, [r7, #24]
 80015d6:	69fb      	ldr	r3, [r7, #28]
 80015d8:	3304      	adds	r3, #4
 80015da:	2b06      	cmp	r3, #6
 80015dc:	d902      	bls.n	80015e4 <NVIC_EncodePriority+0x30>
 80015de:	69fb      	ldr	r3, [r7, #28]
 80015e0:	3b03      	subs	r3, #3
 80015e2:	e000      	b.n	80015e6 <NVIC_EncodePriority+0x32>
 80015e4:	2300      	movs	r3, #0
 80015e6:	617b      	str	r3, [r7, #20]
 80015e8:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80015ec:	69bb      	ldr	r3, [r7, #24]
 80015ee:	fa02 f303 	lsl.w	r3, r2, r3
 80015f2:	43da      	mvns	r2, r3
 80015f4:	68bb      	ldr	r3, [r7, #8]
 80015f6:	401a      	ands	r2, r3
 80015f8:	697b      	ldr	r3, [r7, #20]
 80015fa:	409a      	lsls	r2, r3
 80015fc:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001600:	697b      	ldr	r3, [r7, #20]
 8001602:	fa01 f303 	lsl.w	r3, r1, r3
 8001606:	43d9      	mvns	r1, r3
 8001608:	687b      	ldr	r3, [r7, #4]
 800160a:	400b      	ands	r3, r1
 800160c:	4313      	orrs	r3, r2
 800160e:	4618      	mov	r0, r3
 8001610:	3724      	adds	r7, #36	; 0x24
 8001612:	46bd      	mov	sp, r7
 8001614:	bc80      	pop	{r7}
 8001616:	4770      	bx	lr

08001618 <HAL_NVIC_SetPriorityGrouping>:
 8001618:	b580      	push	{r7, lr}
 800161a:	b082      	sub	sp, #8
 800161c:	af00      	add	r7, sp, #0
 800161e:	6078      	str	r0, [r7, #4]
 8001620:	6878      	ldr	r0, [r7, #4]
 8001622:	f7ff ff4f 	bl	80014c4 <__NVIC_SetPriorityGrouping>
 8001626:	bf00      	nop
 8001628:	3708      	adds	r7, #8
 800162a:	46bd      	mov	sp, r7
 800162c:	bd80      	pop	{r7, pc}

0800162e <HAL_NVIC_SetPriority>:
 800162e:	b580      	push	{r7, lr}
 8001630:	b086      	sub	sp, #24
 8001632:	af00      	add	r7, sp, #0
 8001634:	4603      	mov	r3, r0
 8001636:	60b9      	str	r1, [r7, #8]
 8001638:	607a      	str	r2, [r7, #4]
 800163a:	73fb      	strb	r3, [r7, #15]
 800163c:	2300      	movs	r3, #0
 800163e:	617b      	str	r3, [r7, #20]
 8001640:	f7ff ff64 	bl	800150c <__NVIC_GetPriorityGrouping>
 8001644:	6178      	str	r0, [r7, #20]
 8001646:	687a      	ldr	r2, [r7, #4]
 8001648:	68b9      	ldr	r1, [r7, #8]
 800164a:	6978      	ldr	r0, [r7, #20]
 800164c:	f7ff ffb2 	bl	80015b4 <NVIC_EncodePriority>
 8001650:	4602      	mov	r2, r0
 8001652:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001656:	4611      	mov	r1, r2
 8001658:	4618      	mov	r0, r3
 800165a:	f7ff ff81 	bl	8001560 <__NVIC_SetPriority>
 800165e:	bf00      	nop
 8001660:	3718      	adds	r7, #24
 8001662:	46bd      	mov	sp, r7
 8001664:	bd80      	pop	{r7, pc}

08001666 <HAL_NVIC_EnableIRQ>:
 8001666:	b580      	push	{r7, lr}
 8001668:	b082      	sub	sp, #8
 800166a:	af00      	add	r7, sp, #0
 800166c:	4603      	mov	r3, r0
 800166e:	71fb      	strb	r3, [r7, #7]
 8001670:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001674:	4618      	mov	r0, r3
 8001676:	f7ff ff57 	bl	8001528 <__NVIC_EnableIRQ>
 800167a:	bf00      	nop
 800167c:	3708      	adds	r7, #8
 800167e:	46bd      	mov	sp, r7
 8001680:	bd80      	pop	{r7, pc}
	...

08001684 <HAL_DMA_Abort_IT>:
 8001684:	b580      	push	{r7, lr}
 8001686:	b084      	sub	sp, #16
 8001688:	af00      	add	r7, sp, #0
 800168a:	6078      	str	r0, [r7, #4]
 800168c:	2300      	movs	r3, #0
 800168e:	73fb      	strb	r3, [r7, #15]
 8001690:	687b      	ldr	r3, [r7, #4]
 8001692:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 8001696:	2b02      	cmp	r3, #2
 8001698:	d005      	beq.n	80016a6 <HAL_DMA_Abort_IT+0x22>
 800169a:	687b      	ldr	r3, [r7, #4]
 800169c:	2204      	movs	r2, #4
 800169e:	639a      	str	r2, [r3, #56]	; 0x38
 80016a0:	2301      	movs	r3, #1
 80016a2:	73fb      	strb	r3, [r7, #15]
 80016a4:	e051      	b.n	800174a <HAL_DMA_Abort_IT+0xc6>
 80016a6:	687b      	ldr	r3, [r7, #4]
 80016a8:	681b      	ldr	r3, [r3, #0]
 80016aa:	681a      	ldr	r2, [r3, #0]
 80016ac:	687b      	ldr	r3, [r7, #4]
 80016ae:	681b      	ldr	r3, [r3, #0]
 80016b0:	f022 020e 	bic.w	r2, r2, #14
 80016b4:	601a      	str	r2, [r3, #0]
 80016b6:	687b      	ldr	r3, [r7, #4]
 80016b8:	681b      	ldr	r3, [r3, #0]
 80016ba:	681a      	ldr	r2, [r3, #0]
 80016bc:	687b      	ldr	r3, [r7, #4]
 80016be:	681b      	ldr	r3, [r3, #0]
 80016c0:	f022 0201 	bic.w	r2, r2, #1
 80016c4:	601a      	str	r2, [r3, #0]
 80016c6:	687b      	ldr	r3, [r7, #4]
 80016c8:	681b      	ldr	r3, [r3, #0]
 80016ca:	4a22      	ldr	r2, [pc, #136]	; (8001754 <HAL_DMA_Abort_IT+0xd0>)
 80016cc:	4293      	cmp	r3, r2
 80016ce:	d029      	beq.n	8001724 <HAL_DMA_Abort_IT+0xa0>
 80016d0:	687b      	ldr	r3, [r7, #4]
 80016d2:	681b      	ldr	r3, [r3, #0]
 80016d4:	4a20      	ldr	r2, [pc, #128]	; (8001758 <HAL_DMA_Abort_IT+0xd4>)
 80016d6:	4293      	cmp	r3, r2
 80016d8:	d022      	beq.n	8001720 <HAL_DMA_Abort_IT+0x9c>
 80016da:	687b      	ldr	r3, [r7, #4]
 80016dc:	681b      	ldr	r3, [r3, #0]
 80016de:	4a1f      	ldr	r2, [pc, #124]	; (800175c <HAL_DMA_Abort_IT+0xd8>)
 80016e0:	4293      	cmp	r3, r2
 80016e2:	d01a      	beq.n	800171a <HAL_DMA_Abort_IT+0x96>
 80016e4:	687b      	ldr	r3, [r7, #4]
 80016e6:	681b      	ldr	r3, [r3, #0]
 80016e8:	4a1d      	ldr	r2, [pc, #116]	; (8001760 <HAL_DMA_Abort_IT+0xdc>)
 80016ea:	4293      	cmp	r3, r2
 80016ec:	d012      	beq.n	8001714 <HAL_DMA_Abort_IT+0x90>
 80016ee:	687b      	ldr	r3, [r7, #4]
 80016f0:	681b      	ldr	r3, [r3, #0]
 80016f2:	4a1c      	ldr	r2, [pc, #112]	; (8001764 <HAL_DMA_Abort_IT+0xe0>)
 80016f4:	4293      	cmp	r3, r2
 80016f6:	d00a      	beq.n	800170e <HAL_DMA_Abort_IT+0x8a>
 80016f8:	687b      	ldr	r3, [r7, #4]
 80016fa:	681b      	ldr	r3, [r3, #0]
 80016fc:	4a1a      	ldr	r2, [pc, #104]	; (8001768 <HAL_DMA_Abort_IT+0xe4>)
 80016fe:	4293      	cmp	r3, r2
 8001700:	d102      	bne.n	8001708 <HAL_DMA_Abort_IT+0x84>
 8001702:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
 8001706:	e00e      	b.n	8001726 <HAL_DMA_Abort_IT+0xa2>
 8001708:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 800170c:	e00b      	b.n	8001726 <HAL_DMA_Abort_IT+0xa2>
 800170e:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001712:	e008      	b.n	8001726 <HAL_DMA_Abort_IT+0xa2>
 8001714:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001718:	e005      	b.n	8001726 <HAL_DMA_Abort_IT+0xa2>
 800171a:	f44f 7380 	mov.w	r3, #256	; 0x100
 800171e:	e002      	b.n	8001726 <HAL_DMA_Abort_IT+0xa2>
 8001720:	2310      	movs	r3, #16
 8001722:	e000      	b.n	8001726 <HAL_DMA_Abort_IT+0xa2>
 8001724:	2301      	movs	r3, #1
 8001726:	4a11      	ldr	r2, [pc, #68]	; (800176c <HAL_DMA_Abort_IT+0xe8>)
 8001728:	6053      	str	r3, [r2, #4]
 800172a:	687b      	ldr	r3, [r7, #4]
 800172c:	2201      	movs	r2, #1
 800172e:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8001732:	687b      	ldr	r3, [r7, #4]
 8001734:	2200      	movs	r2, #0
 8001736:	f883 2020 	strb.w	r2, [r3, #32]
 800173a:	687b      	ldr	r3, [r7, #4]
 800173c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800173e:	2b00      	cmp	r3, #0
 8001740:	d003      	beq.n	800174a <HAL_DMA_Abort_IT+0xc6>
 8001742:	687b      	ldr	r3, [r7, #4]
 8001744:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8001746:	6878      	ldr	r0, [r7, #4]
 8001748:	4798      	blx	r3
 800174a:	7bfb      	ldrb	r3, [r7, #15]
 800174c:	4618      	mov	r0, r3
 800174e:	3710      	adds	r7, #16
 8001750:	46bd      	mov	sp, r7
 8001752:	bd80      	pop	{r7, pc}
 8001754:	40020008 	.word	0x40020008
 8001758:	4002001c 	.word	0x4002001c
 800175c:	40020030 	.word	0x40020030
 8001760:	40020044 	.word	0x40020044
 8001764:	40020058 	.word	0x40020058
 8001768:	4002006c 	.word	0x4002006c
 800176c:	40020000 	.word	0x40020000

08001770 <HAL_GPIO_Init>:
 8001770:	b480      	push	{r7}
 8001772:	b08b      	sub	sp, #44	; 0x2c
 8001774:	af00      	add	r7, sp, #0
 8001776:	6078      	str	r0, [r7, #4]
 8001778:	6039      	str	r1, [r7, #0]
 800177a:	2300      	movs	r3, #0
 800177c:	627b      	str	r3, [r7, #36]	; 0x24
 800177e:	2300      	movs	r3, #0
 8001780:	623b      	str	r3, [r7, #32]
 8001782:	e127      	b.n	80019d4 <HAL_GPIO_Init+0x264>
 8001784:	2201      	movs	r2, #1
 8001786:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001788:	fa02 f303 	lsl.w	r3, r2, r3
 800178c:	61fb      	str	r3, [r7, #28]
 800178e:	683b      	ldr	r3, [r7, #0]
 8001790:	681b      	ldr	r3, [r3, #0]
 8001792:	69fa      	ldr	r2, [r7, #28]
 8001794:	4013      	ands	r3, r2
 8001796:	61bb      	str	r3, [r7, #24]
 8001798:	69ba      	ldr	r2, [r7, #24]
 800179a:	69fb      	ldr	r3, [r7, #28]
 800179c:	429a      	cmp	r2, r3
 800179e:	f040 8116 	bne.w	80019ce <HAL_GPIO_Init+0x25e>
 80017a2:	683b      	ldr	r3, [r7, #0]
 80017a4:	685b      	ldr	r3, [r3, #4]
 80017a6:	2b12      	cmp	r3, #18
 80017a8:	d034      	beq.n	8001814 <HAL_GPIO_Init+0xa4>
 80017aa:	2b12      	cmp	r3, #18
 80017ac:	d80d      	bhi.n	80017ca <HAL_GPIO_Init+0x5a>
 80017ae:	2b02      	cmp	r3, #2
 80017b0:	d02b      	beq.n	800180a <HAL_GPIO_Init+0x9a>
 80017b2:	2b02      	cmp	r3, #2
 80017b4:	d804      	bhi.n	80017c0 <HAL_GPIO_Init+0x50>
 80017b6:	2b00      	cmp	r3, #0
 80017b8:	d031      	beq.n	800181e <HAL_GPIO_Init+0xae>
 80017ba:	2b01      	cmp	r3, #1
 80017bc:	d01c      	beq.n	80017f8 <HAL_GPIO_Init+0x88>
 80017be:	e048      	b.n	8001852 <HAL_GPIO_Init+0xe2>
 80017c0:	2b03      	cmp	r3, #3
 80017c2:	d043      	beq.n	800184c <HAL_GPIO_Init+0xdc>
 80017c4:	2b11      	cmp	r3, #17
 80017c6:	d01b      	beq.n	8001800 <HAL_GPIO_Init+0x90>
 80017c8:	e043      	b.n	8001852 <HAL_GPIO_Init+0xe2>
 80017ca:	4a89      	ldr	r2, [pc, #548]	; (80019f0 <HAL_GPIO_Init+0x280>)
 80017cc:	4293      	cmp	r3, r2
 80017ce:	d026      	beq.n	800181e <HAL_GPIO_Init+0xae>
 80017d0:	4a87      	ldr	r2, [pc, #540]	; (80019f0 <HAL_GPIO_Init+0x280>)
 80017d2:	4293      	cmp	r3, r2
 80017d4:	d806      	bhi.n	80017e4 <HAL_GPIO_Init+0x74>
 80017d6:	4a87      	ldr	r2, [pc, #540]	; (80019f4 <HAL_GPIO_Init+0x284>)
 80017d8:	4293      	cmp	r3, r2
 80017da:	d020      	beq.n	800181e <HAL_GPIO_Init+0xae>
 80017dc:	4a86      	ldr	r2, [pc, #536]	; (80019f8 <HAL_GPIO_Init+0x288>)
 80017de:	4293      	cmp	r3, r2
 80017e0:	d01d      	beq.n	800181e <HAL_GPIO_Init+0xae>
 80017e2:	e036      	b.n	8001852 <HAL_GPIO_Init+0xe2>
 80017e4:	4a85      	ldr	r2, [pc, #532]	; (80019fc <HAL_GPIO_Init+0x28c>)
 80017e6:	4293      	cmp	r3, r2
 80017e8:	d019      	beq.n	800181e <HAL_GPIO_Init+0xae>
 80017ea:	4a85      	ldr	r2, [pc, #532]	; (8001a00 <HAL_GPIO_Init+0x290>)
 80017ec:	4293      	cmp	r3, r2
 80017ee:	d016      	beq.n	800181e <HAL_GPIO_Init+0xae>
 80017f0:	4a84      	ldr	r2, [pc, #528]	; (8001a04 <HAL_GPIO_Init+0x294>)
 80017f2:	4293      	cmp	r3, r2
 80017f4:	d013      	beq.n	800181e <HAL_GPIO_Init+0xae>
 80017f6:	e02c      	b.n	8001852 <HAL_GPIO_Init+0xe2>
 80017f8:	683b      	ldr	r3, [r7, #0]
 80017fa:	68db      	ldr	r3, [r3, #12]
 80017fc:	623b      	str	r3, [r7, #32]
 80017fe:	e028      	b.n	8001852 <HAL_GPIO_Init+0xe2>
 8001800:	683b      	ldr	r3, [r7, #0]
 8001802:	68db      	ldr	r3, [r3, #12]
 8001804:	3304      	adds	r3, #4
 8001806:	623b      	str	r3, [r7, #32]
 8001808:	e023      	b.n	8001852 <HAL_GPIO_Init+0xe2>
 800180a:	683b      	ldr	r3, [r7, #0]
 800180c:	68db      	ldr	r3, [r3, #12]
 800180e:	3308      	adds	r3, #8
 8001810:	623b      	str	r3, [r7, #32]
 8001812:	e01e      	b.n	8001852 <HAL_GPIO_Init+0xe2>
 8001814:	683b      	ldr	r3, [r7, #0]
 8001816:	68db      	ldr	r3, [r3, #12]
 8001818:	330c      	adds	r3, #12
 800181a:	623b      	str	r3, [r7, #32]
 800181c:	e019      	b.n	8001852 <HAL_GPIO_Init+0xe2>
 800181e:	683b      	ldr	r3, [r7, #0]
 8001820:	689b      	ldr	r3, [r3, #8]
 8001822:	2b00      	cmp	r3, #0
 8001824:	d102      	bne.n	800182c <HAL_GPIO_Init+0xbc>
 8001826:	2304      	movs	r3, #4
 8001828:	623b      	str	r3, [r7, #32]
 800182a:	e012      	b.n	8001852 <HAL_GPIO_Init+0xe2>
 800182c:	683b      	ldr	r3, [r7, #0]
 800182e:	689b      	ldr	r3, [r3, #8]
 8001830:	2b01      	cmp	r3, #1
 8001832:	d105      	bne.n	8001840 <HAL_GPIO_Init+0xd0>
 8001834:	2308      	movs	r3, #8
 8001836:	623b      	str	r3, [r7, #32]
 8001838:	687b      	ldr	r3, [r7, #4]
 800183a:	69fa      	ldr	r2, [r7, #28]
 800183c:	611a      	str	r2, [r3, #16]
 800183e:	e008      	b.n	8001852 <HAL_GPIO_Init+0xe2>
 8001840:	2308      	movs	r3, #8
 8001842:	623b      	str	r3, [r7, #32]
 8001844:	687b      	ldr	r3, [r7, #4]
 8001846:	69fa      	ldr	r2, [r7, #28]
 8001848:	615a      	str	r2, [r3, #20]
 800184a:	e002      	b.n	8001852 <HAL_GPIO_Init+0xe2>
 800184c:	2300      	movs	r3, #0
 800184e:	623b      	str	r3, [r7, #32]
 8001850:	bf00      	nop
 8001852:	69bb      	ldr	r3, [r7, #24]
 8001854:	2bff      	cmp	r3, #255	; 0xff
 8001856:	d801      	bhi.n	800185c <HAL_GPIO_Init+0xec>
 8001858:	687b      	ldr	r3, [r7, #4]
 800185a:	e001      	b.n	8001860 <HAL_GPIO_Init+0xf0>
 800185c:	687b      	ldr	r3, [r7, #4]
 800185e:	3304      	adds	r3, #4
 8001860:	617b      	str	r3, [r7, #20]
 8001862:	69bb      	ldr	r3, [r7, #24]
 8001864:	2bff      	cmp	r3, #255	; 0xff
 8001866:	d802      	bhi.n	800186e <HAL_GPIO_Init+0xfe>
 8001868:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800186a:	009b      	lsls	r3, r3, #2
 800186c:	e002      	b.n	8001874 <HAL_GPIO_Init+0x104>
 800186e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001870:	3b08      	subs	r3, #8
 8001872:	009b      	lsls	r3, r3, #2
 8001874:	613b      	str	r3, [r7, #16]
 8001876:	697b      	ldr	r3, [r7, #20]
 8001878:	681a      	ldr	r2, [r3, #0]
 800187a:	210f      	movs	r1, #15
 800187c:	693b      	ldr	r3, [r7, #16]
 800187e:	fa01 f303 	lsl.w	r3, r1, r3
 8001882:	43db      	mvns	r3, r3
 8001884:	401a      	ands	r2, r3
 8001886:	6a39      	ldr	r1, [r7, #32]
 8001888:	693b      	ldr	r3, [r7, #16]
 800188a:	fa01 f303 	lsl.w	r3, r1, r3
 800188e:	431a      	orrs	r2, r3
 8001890:	697b      	ldr	r3, [r7, #20]
 8001892:	601a      	str	r2, [r3, #0]
 8001894:	683b      	ldr	r3, [r7, #0]
 8001896:	685b      	ldr	r3, [r3, #4]
 8001898:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800189c:	2b00      	cmp	r3, #0
 800189e:	f000 8096 	beq.w	80019ce <HAL_GPIO_Init+0x25e>
 80018a2:	4b59      	ldr	r3, [pc, #356]	; (8001a08 <HAL_GPIO_Init+0x298>)
 80018a4:	699b      	ldr	r3, [r3, #24]
 80018a6:	4a58      	ldr	r2, [pc, #352]	; (8001a08 <HAL_GPIO_Init+0x298>)
 80018a8:	f043 0301 	orr.w	r3, r3, #1
 80018ac:	6193      	str	r3, [r2, #24]
 80018ae:	4b56      	ldr	r3, [pc, #344]	; (8001a08 <HAL_GPIO_Init+0x298>)
 80018b0:	699b      	ldr	r3, [r3, #24]
 80018b2:	f003 0301 	and.w	r3, r3, #1
 80018b6:	60bb      	str	r3, [r7, #8]
 80018b8:	68bb      	ldr	r3, [r7, #8]
 80018ba:	4a54      	ldr	r2, [pc, #336]	; (8001a0c <HAL_GPIO_Init+0x29c>)
 80018bc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80018be:	089b      	lsrs	r3, r3, #2
 80018c0:	3302      	adds	r3, #2
 80018c2:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80018c6:	60fb      	str	r3, [r7, #12]
 80018c8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80018ca:	f003 0303 	and.w	r3, r3, #3
 80018ce:	009b      	lsls	r3, r3, #2
 80018d0:	220f      	movs	r2, #15
 80018d2:	fa02 f303 	lsl.w	r3, r2, r3
 80018d6:	43db      	mvns	r3, r3
 80018d8:	68fa      	ldr	r2, [r7, #12]
 80018da:	4013      	ands	r3, r2
 80018dc:	60fb      	str	r3, [r7, #12]
 80018de:	687b      	ldr	r3, [r7, #4]
 80018e0:	4a4b      	ldr	r2, [pc, #300]	; (8001a10 <HAL_GPIO_Init+0x2a0>)
 80018e2:	4293      	cmp	r3, r2
 80018e4:	d013      	beq.n	800190e <HAL_GPIO_Init+0x19e>
 80018e6:	687b      	ldr	r3, [r7, #4]
 80018e8:	4a4a      	ldr	r2, [pc, #296]	; (8001a14 <HAL_GPIO_Init+0x2a4>)
 80018ea:	4293      	cmp	r3, r2
 80018ec:	d00d      	beq.n	800190a <HAL_GPIO_Init+0x19a>
 80018ee:	687b      	ldr	r3, [r7, #4]
 80018f0:	4a49      	ldr	r2, [pc, #292]	; (8001a18 <HAL_GPIO_Init+0x2a8>)
 80018f2:	4293      	cmp	r3, r2
 80018f4:	d007      	beq.n	8001906 <HAL_GPIO_Init+0x196>
 80018f6:	687b      	ldr	r3, [r7, #4]
 80018f8:	4a48      	ldr	r2, [pc, #288]	; (8001a1c <HAL_GPIO_Init+0x2ac>)
 80018fa:	4293      	cmp	r3, r2
 80018fc:	d101      	bne.n	8001902 <HAL_GPIO_Init+0x192>
 80018fe:	2303      	movs	r3, #3
 8001900:	e006      	b.n	8001910 <HAL_GPIO_Init+0x1a0>
 8001902:	2304      	movs	r3, #4
 8001904:	e004      	b.n	8001910 <HAL_GPIO_Init+0x1a0>
 8001906:	2302      	movs	r3, #2
 8001908:	e002      	b.n	8001910 <HAL_GPIO_Init+0x1a0>
 800190a:	2301      	movs	r3, #1
 800190c:	e000      	b.n	8001910 <HAL_GPIO_Init+0x1a0>
 800190e:	2300      	movs	r3, #0
 8001910:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8001912:	f002 0203 	and.w	r2, r2, #3
 8001916:	0092      	lsls	r2, r2, #2
 8001918:	4093      	lsls	r3, r2
 800191a:	68fa      	ldr	r2, [r7, #12]
 800191c:	4313      	orrs	r3, r2
 800191e:	60fb      	str	r3, [r7, #12]
 8001920:	493a      	ldr	r1, [pc, #232]	; (8001a0c <HAL_GPIO_Init+0x29c>)
 8001922:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001924:	089b      	lsrs	r3, r3, #2
 8001926:	3302      	adds	r3, #2
 8001928:	68fa      	ldr	r2, [r7, #12]
 800192a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800192e:	683b      	ldr	r3, [r7, #0]
 8001930:	685b      	ldr	r3, [r3, #4]
 8001932:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001936:	2b00      	cmp	r3, #0
 8001938:	d006      	beq.n	8001948 <HAL_GPIO_Init+0x1d8>
 800193a:	4b39      	ldr	r3, [pc, #228]	; (8001a20 <HAL_GPIO_Init+0x2b0>)
 800193c:	681a      	ldr	r2, [r3, #0]
 800193e:	4938      	ldr	r1, [pc, #224]	; (8001a20 <HAL_GPIO_Init+0x2b0>)
 8001940:	69bb      	ldr	r3, [r7, #24]
 8001942:	4313      	orrs	r3, r2
 8001944:	600b      	str	r3, [r1, #0]
 8001946:	e006      	b.n	8001956 <HAL_GPIO_Init+0x1e6>
 8001948:	4b35      	ldr	r3, [pc, #212]	; (8001a20 <HAL_GPIO_Init+0x2b0>)
 800194a:	681a      	ldr	r2, [r3, #0]
 800194c:	69bb      	ldr	r3, [r7, #24]
 800194e:	43db      	mvns	r3, r3
 8001950:	4933      	ldr	r1, [pc, #204]	; (8001a20 <HAL_GPIO_Init+0x2b0>)
 8001952:	4013      	ands	r3, r2
 8001954:	600b      	str	r3, [r1, #0]
 8001956:	683b      	ldr	r3, [r7, #0]
 8001958:	685b      	ldr	r3, [r3, #4]
 800195a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800195e:	2b00      	cmp	r3, #0
 8001960:	d006      	beq.n	8001970 <HAL_GPIO_Init+0x200>
 8001962:	4b2f      	ldr	r3, [pc, #188]	; (8001a20 <HAL_GPIO_Init+0x2b0>)
 8001964:	685a      	ldr	r2, [r3, #4]
 8001966:	492e      	ldr	r1, [pc, #184]	; (8001a20 <HAL_GPIO_Init+0x2b0>)
 8001968:	69bb      	ldr	r3, [r7, #24]
 800196a:	4313      	orrs	r3, r2
 800196c:	604b      	str	r3, [r1, #4]
 800196e:	e006      	b.n	800197e <HAL_GPIO_Init+0x20e>
 8001970:	4b2b      	ldr	r3, [pc, #172]	; (8001a20 <HAL_GPIO_Init+0x2b0>)
 8001972:	685a      	ldr	r2, [r3, #4]
 8001974:	69bb      	ldr	r3, [r7, #24]
 8001976:	43db      	mvns	r3, r3
 8001978:	4929      	ldr	r1, [pc, #164]	; (8001a20 <HAL_GPIO_Init+0x2b0>)
 800197a:	4013      	ands	r3, r2
 800197c:	604b      	str	r3, [r1, #4]
 800197e:	683b      	ldr	r3, [r7, #0]
 8001980:	685b      	ldr	r3, [r3, #4]
 8001982:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8001986:	2b00      	cmp	r3, #0
 8001988:	d006      	beq.n	8001998 <HAL_GPIO_Init+0x228>
 800198a:	4b25      	ldr	r3, [pc, #148]	; (8001a20 <HAL_GPIO_Init+0x2b0>)
 800198c:	689a      	ldr	r2, [r3, #8]
 800198e:	4924      	ldr	r1, [pc, #144]	; (8001a20 <HAL_GPIO_Init+0x2b0>)
 8001990:	69bb      	ldr	r3, [r7, #24]
 8001992:	4313      	orrs	r3, r2
 8001994:	608b      	str	r3, [r1, #8]
 8001996:	e006      	b.n	80019a6 <HAL_GPIO_Init+0x236>
 8001998:	4b21      	ldr	r3, [pc, #132]	; (8001a20 <HAL_GPIO_Init+0x2b0>)
 800199a:	689a      	ldr	r2, [r3, #8]
 800199c:	69bb      	ldr	r3, [r7, #24]
 800199e:	43db      	mvns	r3, r3
 80019a0:	491f      	ldr	r1, [pc, #124]	; (8001a20 <HAL_GPIO_Init+0x2b0>)
 80019a2:	4013      	ands	r3, r2
 80019a4:	608b      	str	r3, [r1, #8]
 80019a6:	683b      	ldr	r3, [r7, #0]
 80019a8:	685b      	ldr	r3, [r3, #4]
 80019aa:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80019ae:	2b00      	cmp	r3, #0
 80019b0:	d006      	beq.n	80019c0 <HAL_GPIO_Init+0x250>
 80019b2:	4b1b      	ldr	r3, [pc, #108]	; (8001a20 <HAL_GPIO_Init+0x2b0>)
 80019b4:	68da      	ldr	r2, [r3, #12]
 80019b6:	491a      	ldr	r1, [pc, #104]	; (8001a20 <HAL_GPIO_Init+0x2b0>)
 80019b8:	69bb      	ldr	r3, [r7, #24]
 80019ba:	4313      	orrs	r3, r2
 80019bc:	60cb      	str	r3, [r1, #12]
 80019be:	e006      	b.n	80019ce <HAL_GPIO_Init+0x25e>
 80019c0:	4b17      	ldr	r3, [pc, #92]	; (8001a20 <HAL_GPIO_Init+0x2b0>)
 80019c2:	68da      	ldr	r2, [r3, #12]
 80019c4:	69bb      	ldr	r3, [r7, #24]
 80019c6:	43db      	mvns	r3, r3
 80019c8:	4915      	ldr	r1, [pc, #84]	; (8001a20 <HAL_GPIO_Init+0x2b0>)
 80019ca:	4013      	ands	r3, r2
 80019cc:	60cb      	str	r3, [r1, #12]
 80019ce:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80019d0:	3301      	adds	r3, #1
 80019d2:	627b      	str	r3, [r7, #36]	; 0x24
 80019d4:	683b      	ldr	r3, [r7, #0]
 80019d6:	681a      	ldr	r2, [r3, #0]
 80019d8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80019da:	fa22 f303 	lsr.w	r3, r2, r3
 80019de:	2b00      	cmp	r3, #0
 80019e0:	f47f aed0 	bne.w	8001784 <HAL_GPIO_Init+0x14>
 80019e4:	bf00      	nop
 80019e6:	372c      	adds	r7, #44	; 0x2c
 80019e8:	46bd      	mov	sp, r7
 80019ea:	bc80      	pop	{r7}
 80019ec:	4770      	bx	lr
 80019ee:	bf00      	nop
 80019f0:	10210000 	.word	0x10210000
 80019f4:	10110000 	.word	0x10110000
 80019f8:	10120000 	.word	0x10120000
 80019fc:	10310000 	.word	0x10310000
 8001a00:	10320000 	.word	0x10320000
 8001a04:	10220000 	.word	0x10220000
 8001a08:	40021000 	.word	0x40021000
 8001a0c:	40010000 	.word	0x40010000
 8001a10:	40010800 	.word	0x40010800
 8001a14:	40010c00 	.word	0x40010c00
 8001a18:	40011000 	.word	0x40011000
 8001a1c:	40011400 	.word	0x40011400
 8001a20:	40010400 	.word	0x40010400

08001a24 <HAL_GPIO_EXTI_IRQHandler>:
 8001a24:	b580      	push	{r7, lr}
 8001a26:	b082      	sub	sp, #8
 8001a28:	af00      	add	r7, sp, #0
 8001a2a:	4603      	mov	r3, r0
 8001a2c:	80fb      	strh	r3, [r7, #6]
 8001a2e:	4b08      	ldr	r3, [pc, #32]	; (8001a50 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8001a30:	695a      	ldr	r2, [r3, #20]
 8001a32:	88fb      	ldrh	r3, [r7, #6]
 8001a34:	4013      	ands	r3, r2
 8001a36:	2b00      	cmp	r3, #0
 8001a38:	d006      	beq.n	8001a48 <HAL_GPIO_EXTI_IRQHandler+0x24>
 8001a3a:	4a05      	ldr	r2, [pc, #20]	; (8001a50 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8001a3c:	88fb      	ldrh	r3, [r7, #6]
 8001a3e:	6153      	str	r3, [r2, #20]
 8001a40:	88fb      	ldrh	r3, [r7, #6]
 8001a42:	4618      	mov	r0, r3
 8001a44:	f000 f806 	bl	8001a54 <HAL_GPIO_EXTI_Callback>
 8001a48:	bf00      	nop
 8001a4a:	3708      	adds	r7, #8
 8001a4c:	46bd      	mov	sp, r7
 8001a4e:	bd80      	pop	{r7, pc}
 8001a50:	40010400 	.word	0x40010400

08001a54 <HAL_GPIO_EXTI_Callback>:
 8001a54:	b480      	push	{r7}
 8001a56:	b083      	sub	sp, #12
 8001a58:	af00      	add	r7, sp, #0
 8001a5a:	4603      	mov	r3, r0
 8001a5c:	80fb      	strh	r3, [r7, #6]
 8001a5e:	bf00      	nop
 8001a60:	370c      	adds	r7, #12
 8001a62:	46bd      	mov	sp, r7
 8001a64:	bc80      	pop	{r7}
 8001a66:	4770      	bx	lr

08001a68 <HAL_RCC_OscConfig>:
 8001a68:	b580      	push	{r7, lr}
 8001a6a:	b086      	sub	sp, #24
 8001a6c:	af00      	add	r7, sp, #0
 8001a6e:	6078      	str	r0, [r7, #4]
 8001a70:	687b      	ldr	r3, [r7, #4]
 8001a72:	2b00      	cmp	r3, #0
 8001a74:	d101      	bne.n	8001a7a <HAL_RCC_OscConfig+0x12>
 8001a76:	2301      	movs	r3, #1
 8001a78:	e26c      	b.n	8001f54 <HAL_RCC_OscConfig+0x4ec>
 8001a7a:	687b      	ldr	r3, [r7, #4]
 8001a7c:	681b      	ldr	r3, [r3, #0]
 8001a7e:	f003 0301 	and.w	r3, r3, #1
 8001a82:	2b00      	cmp	r3, #0
 8001a84:	f000 8087 	beq.w	8001b96 <HAL_RCC_OscConfig+0x12e>
 8001a88:	4b92      	ldr	r3, [pc, #584]	; (8001cd4 <HAL_RCC_OscConfig+0x26c>)
 8001a8a:	685b      	ldr	r3, [r3, #4]
 8001a8c:	f003 030c 	and.w	r3, r3, #12
 8001a90:	2b04      	cmp	r3, #4
 8001a92:	d00c      	beq.n	8001aae <HAL_RCC_OscConfig+0x46>
 8001a94:	4b8f      	ldr	r3, [pc, #572]	; (8001cd4 <HAL_RCC_OscConfig+0x26c>)
 8001a96:	685b      	ldr	r3, [r3, #4]
 8001a98:	f003 030c 	and.w	r3, r3, #12
 8001a9c:	2b08      	cmp	r3, #8
 8001a9e:	d112      	bne.n	8001ac6 <HAL_RCC_OscConfig+0x5e>
 8001aa0:	4b8c      	ldr	r3, [pc, #560]	; (8001cd4 <HAL_RCC_OscConfig+0x26c>)
 8001aa2:	685b      	ldr	r3, [r3, #4]
 8001aa4:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001aa8:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001aac:	d10b      	bne.n	8001ac6 <HAL_RCC_OscConfig+0x5e>
 8001aae:	4b89      	ldr	r3, [pc, #548]	; (8001cd4 <HAL_RCC_OscConfig+0x26c>)
 8001ab0:	681b      	ldr	r3, [r3, #0]
 8001ab2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001ab6:	2b00      	cmp	r3, #0
 8001ab8:	d06c      	beq.n	8001b94 <HAL_RCC_OscConfig+0x12c>
 8001aba:	687b      	ldr	r3, [r7, #4]
 8001abc:	685b      	ldr	r3, [r3, #4]
 8001abe:	2b00      	cmp	r3, #0
 8001ac0:	d168      	bne.n	8001b94 <HAL_RCC_OscConfig+0x12c>
 8001ac2:	2301      	movs	r3, #1
 8001ac4:	e246      	b.n	8001f54 <HAL_RCC_OscConfig+0x4ec>
 8001ac6:	687b      	ldr	r3, [r7, #4]
 8001ac8:	685b      	ldr	r3, [r3, #4]
 8001aca:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001ace:	d106      	bne.n	8001ade <HAL_RCC_OscConfig+0x76>
 8001ad0:	4b80      	ldr	r3, [pc, #512]	; (8001cd4 <HAL_RCC_OscConfig+0x26c>)
 8001ad2:	681b      	ldr	r3, [r3, #0]
 8001ad4:	4a7f      	ldr	r2, [pc, #508]	; (8001cd4 <HAL_RCC_OscConfig+0x26c>)
 8001ad6:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001ada:	6013      	str	r3, [r2, #0]
 8001adc:	e02e      	b.n	8001b3c <HAL_RCC_OscConfig+0xd4>
 8001ade:	687b      	ldr	r3, [r7, #4]
 8001ae0:	685b      	ldr	r3, [r3, #4]
 8001ae2:	2b00      	cmp	r3, #0
 8001ae4:	d10c      	bne.n	8001b00 <HAL_RCC_OscConfig+0x98>
 8001ae6:	4b7b      	ldr	r3, [pc, #492]	; (8001cd4 <HAL_RCC_OscConfig+0x26c>)
 8001ae8:	681b      	ldr	r3, [r3, #0]
 8001aea:	4a7a      	ldr	r2, [pc, #488]	; (8001cd4 <HAL_RCC_OscConfig+0x26c>)
 8001aec:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001af0:	6013      	str	r3, [r2, #0]
 8001af2:	4b78      	ldr	r3, [pc, #480]	; (8001cd4 <HAL_RCC_OscConfig+0x26c>)
 8001af4:	681b      	ldr	r3, [r3, #0]
 8001af6:	4a77      	ldr	r2, [pc, #476]	; (8001cd4 <HAL_RCC_OscConfig+0x26c>)
 8001af8:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001afc:	6013      	str	r3, [r2, #0]
 8001afe:	e01d      	b.n	8001b3c <HAL_RCC_OscConfig+0xd4>
 8001b00:	687b      	ldr	r3, [r7, #4]
 8001b02:	685b      	ldr	r3, [r3, #4]
 8001b04:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8001b08:	d10c      	bne.n	8001b24 <HAL_RCC_OscConfig+0xbc>
 8001b0a:	4b72      	ldr	r3, [pc, #456]	; (8001cd4 <HAL_RCC_OscConfig+0x26c>)
 8001b0c:	681b      	ldr	r3, [r3, #0]
 8001b0e:	4a71      	ldr	r2, [pc, #452]	; (8001cd4 <HAL_RCC_OscConfig+0x26c>)
 8001b10:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8001b14:	6013      	str	r3, [r2, #0]
 8001b16:	4b6f      	ldr	r3, [pc, #444]	; (8001cd4 <HAL_RCC_OscConfig+0x26c>)
 8001b18:	681b      	ldr	r3, [r3, #0]
 8001b1a:	4a6e      	ldr	r2, [pc, #440]	; (8001cd4 <HAL_RCC_OscConfig+0x26c>)
 8001b1c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001b20:	6013      	str	r3, [r2, #0]
 8001b22:	e00b      	b.n	8001b3c <HAL_RCC_OscConfig+0xd4>
 8001b24:	4b6b      	ldr	r3, [pc, #428]	; (8001cd4 <HAL_RCC_OscConfig+0x26c>)
 8001b26:	681b      	ldr	r3, [r3, #0]
 8001b28:	4a6a      	ldr	r2, [pc, #424]	; (8001cd4 <HAL_RCC_OscConfig+0x26c>)
 8001b2a:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001b2e:	6013      	str	r3, [r2, #0]
 8001b30:	4b68      	ldr	r3, [pc, #416]	; (8001cd4 <HAL_RCC_OscConfig+0x26c>)
 8001b32:	681b      	ldr	r3, [r3, #0]
 8001b34:	4a67      	ldr	r2, [pc, #412]	; (8001cd4 <HAL_RCC_OscConfig+0x26c>)
 8001b36:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001b3a:	6013      	str	r3, [r2, #0]
 8001b3c:	687b      	ldr	r3, [r7, #4]
 8001b3e:	685b      	ldr	r3, [r3, #4]
 8001b40:	2b00      	cmp	r3, #0
 8001b42:	d013      	beq.n	8001b6c <HAL_RCC_OscConfig+0x104>
 8001b44:	f7ff fcb4 	bl	80014b0 <HAL_GetTick>
 8001b48:	6138      	str	r0, [r7, #16]
 8001b4a:	e008      	b.n	8001b5e <HAL_RCC_OscConfig+0xf6>
 8001b4c:	f7ff fcb0 	bl	80014b0 <HAL_GetTick>
 8001b50:	4602      	mov	r2, r0
 8001b52:	693b      	ldr	r3, [r7, #16]
 8001b54:	1ad3      	subs	r3, r2, r3
 8001b56:	2b64      	cmp	r3, #100	; 0x64
 8001b58:	d901      	bls.n	8001b5e <HAL_RCC_OscConfig+0xf6>
 8001b5a:	2303      	movs	r3, #3
 8001b5c:	e1fa      	b.n	8001f54 <HAL_RCC_OscConfig+0x4ec>
 8001b5e:	4b5d      	ldr	r3, [pc, #372]	; (8001cd4 <HAL_RCC_OscConfig+0x26c>)
 8001b60:	681b      	ldr	r3, [r3, #0]
 8001b62:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001b66:	2b00      	cmp	r3, #0
 8001b68:	d0f0      	beq.n	8001b4c <HAL_RCC_OscConfig+0xe4>
 8001b6a:	e014      	b.n	8001b96 <HAL_RCC_OscConfig+0x12e>
 8001b6c:	f7ff fca0 	bl	80014b0 <HAL_GetTick>
 8001b70:	6138      	str	r0, [r7, #16]
 8001b72:	e008      	b.n	8001b86 <HAL_RCC_OscConfig+0x11e>
 8001b74:	f7ff fc9c 	bl	80014b0 <HAL_GetTick>
 8001b78:	4602      	mov	r2, r0
 8001b7a:	693b      	ldr	r3, [r7, #16]
 8001b7c:	1ad3      	subs	r3, r2, r3
 8001b7e:	2b64      	cmp	r3, #100	; 0x64
 8001b80:	d901      	bls.n	8001b86 <HAL_RCC_OscConfig+0x11e>
 8001b82:	2303      	movs	r3, #3
 8001b84:	e1e6      	b.n	8001f54 <HAL_RCC_OscConfig+0x4ec>
 8001b86:	4b53      	ldr	r3, [pc, #332]	; (8001cd4 <HAL_RCC_OscConfig+0x26c>)
 8001b88:	681b      	ldr	r3, [r3, #0]
 8001b8a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001b8e:	2b00      	cmp	r3, #0
 8001b90:	d1f0      	bne.n	8001b74 <HAL_RCC_OscConfig+0x10c>
 8001b92:	e000      	b.n	8001b96 <HAL_RCC_OscConfig+0x12e>
 8001b94:	bf00      	nop
 8001b96:	687b      	ldr	r3, [r7, #4]
 8001b98:	681b      	ldr	r3, [r3, #0]
 8001b9a:	f003 0302 	and.w	r3, r3, #2
 8001b9e:	2b00      	cmp	r3, #0
 8001ba0:	d063      	beq.n	8001c6a <HAL_RCC_OscConfig+0x202>
 8001ba2:	4b4c      	ldr	r3, [pc, #304]	; (8001cd4 <HAL_RCC_OscConfig+0x26c>)
 8001ba4:	685b      	ldr	r3, [r3, #4]
 8001ba6:	f003 030c 	and.w	r3, r3, #12
 8001baa:	2b00      	cmp	r3, #0
 8001bac:	d00b      	beq.n	8001bc6 <HAL_RCC_OscConfig+0x15e>
 8001bae:	4b49      	ldr	r3, [pc, #292]	; (8001cd4 <HAL_RCC_OscConfig+0x26c>)
 8001bb0:	685b      	ldr	r3, [r3, #4]
 8001bb2:	f003 030c 	and.w	r3, r3, #12
 8001bb6:	2b08      	cmp	r3, #8
 8001bb8:	d11c      	bne.n	8001bf4 <HAL_RCC_OscConfig+0x18c>
 8001bba:	4b46      	ldr	r3, [pc, #280]	; (8001cd4 <HAL_RCC_OscConfig+0x26c>)
 8001bbc:	685b      	ldr	r3, [r3, #4]
 8001bbe:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001bc2:	2b00      	cmp	r3, #0
 8001bc4:	d116      	bne.n	8001bf4 <HAL_RCC_OscConfig+0x18c>
 8001bc6:	4b43      	ldr	r3, [pc, #268]	; (8001cd4 <HAL_RCC_OscConfig+0x26c>)
 8001bc8:	681b      	ldr	r3, [r3, #0]
 8001bca:	f003 0302 	and.w	r3, r3, #2
 8001bce:	2b00      	cmp	r3, #0
 8001bd0:	d005      	beq.n	8001bde <HAL_RCC_OscConfig+0x176>
 8001bd2:	687b      	ldr	r3, [r7, #4]
 8001bd4:	691b      	ldr	r3, [r3, #16]
 8001bd6:	2b01      	cmp	r3, #1
 8001bd8:	d001      	beq.n	8001bde <HAL_RCC_OscConfig+0x176>
 8001bda:	2301      	movs	r3, #1
 8001bdc:	e1ba      	b.n	8001f54 <HAL_RCC_OscConfig+0x4ec>
 8001bde:	4b3d      	ldr	r3, [pc, #244]	; (8001cd4 <HAL_RCC_OscConfig+0x26c>)
 8001be0:	681b      	ldr	r3, [r3, #0]
 8001be2:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8001be6:	687b      	ldr	r3, [r7, #4]
 8001be8:	695b      	ldr	r3, [r3, #20]
 8001bea:	00db      	lsls	r3, r3, #3
 8001bec:	4939      	ldr	r1, [pc, #228]	; (8001cd4 <HAL_RCC_OscConfig+0x26c>)
 8001bee:	4313      	orrs	r3, r2
 8001bf0:	600b      	str	r3, [r1, #0]
 8001bf2:	e03a      	b.n	8001c6a <HAL_RCC_OscConfig+0x202>
 8001bf4:	687b      	ldr	r3, [r7, #4]
 8001bf6:	691b      	ldr	r3, [r3, #16]
 8001bf8:	2b00      	cmp	r3, #0
 8001bfa:	d020      	beq.n	8001c3e <HAL_RCC_OscConfig+0x1d6>
 8001bfc:	4b36      	ldr	r3, [pc, #216]	; (8001cd8 <HAL_RCC_OscConfig+0x270>)
 8001bfe:	2201      	movs	r2, #1
 8001c00:	601a      	str	r2, [r3, #0]
 8001c02:	f7ff fc55 	bl	80014b0 <HAL_GetTick>
 8001c06:	6138      	str	r0, [r7, #16]
 8001c08:	e008      	b.n	8001c1c <HAL_RCC_OscConfig+0x1b4>
 8001c0a:	f7ff fc51 	bl	80014b0 <HAL_GetTick>
 8001c0e:	4602      	mov	r2, r0
 8001c10:	693b      	ldr	r3, [r7, #16]
 8001c12:	1ad3      	subs	r3, r2, r3
 8001c14:	2b02      	cmp	r3, #2
 8001c16:	d901      	bls.n	8001c1c <HAL_RCC_OscConfig+0x1b4>
 8001c18:	2303      	movs	r3, #3
 8001c1a:	e19b      	b.n	8001f54 <HAL_RCC_OscConfig+0x4ec>
 8001c1c:	4b2d      	ldr	r3, [pc, #180]	; (8001cd4 <HAL_RCC_OscConfig+0x26c>)
 8001c1e:	681b      	ldr	r3, [r3, #0]
 8001c20:	f003 0302 	and.w	r3, r3, #2
 8001c24:	2b00      	cmp	r3, #0
 8001c26:	d0f0      	beq.n	8001c0a <HAL_RCC_OscConfig+0x1a2>
 8001c28:	4b2a      	ldr	r3, [pc, #168]	; (8001cd4 <HAL_RCC_OscConfig+0x26c>)
 8001c2a:	681b      	ldr	r3, [r3, #0]
 8001c2c:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8001c30:	687b      	ldr	r3, [r7, #4]
 8001c32:	695b      	ldr	r3, [r3, #20]
 8001c34:	00db      	lsls	r3, r3, #3
 8001c36:	4927      	ldr	r1, [pc, #156]	; (8001cd4 <HAL_RCC_OscConfig+0x26c>)
 8001c38:	4313      	orrs	r3, r2
 8001c3a:	600b      	str	r3, [r1, #0]
 8001c3c:	e015      	b.n	8001c6a <HAL_RCC_OscConfig+0x202>
 8001c3e:	4b26      	ldr	r3, [pc, #152]	; (8001cd8 <HAL_RCC_OscConfig+0x270>)
 8001c40:	2200      	movs	r2, #0
 8001c42:	601a      	str	r2, [r3, #0]
 8001c44:	f7ff fc34 	bl	80014b0 <HAL_GetTick>
 8001c48:	6138      	str	r0, [r7, #16]
 8001c4a:	e008      	b.n	8001c5e <HAL_RCC_OscConfig+0x1f6>
 8001c4c:	f7ff fc30 	bl	80014b0 <HAL_GetTick>
 8001c50:	4602      	mov	r2, r0
 8001c52:	693b      	ldr	r3, [r7, #16]
 8001c54:	1ad3      	subs	r3, r2, r3
 8001c56:	2b02      	cmp	r3, #2
 8001c58:	d901      	bls.n	8001c5e <HAL_RCC_OscConfig+0x1f6>
 8001c5a:	2303      	movs	r3, #3
 8001c5c:	e17a      	b.n	8001f54 <HAL_RCC_OscConfig+0x4ec>
 8001c5e:	4b1d      	ldr	r3, [pc, #116]	; (8001cd4 <HAL_RCC_OscConfig+0x26c>)
 8001c60:	681b      	ldr	r3, [r3, #0]
 8001c62:	f003 0302 	and.w	r3, r3, #2
 8001c66:	2b00      	cmp	r3, #0
 8001c68:	d1f0      	bne.n	8001c4c <HAL_RCC_OscConfig+0x1e4>
 8001c6a:	687b      	ldr	r3, [r7, #4]
 8001c6c:	681b      	ldr	r3, [r3, #0]
 8001c6e:	f003 0308 	and.w	r3, r3, #8
 8001c72:	2b00      	cmp	r3, #0
 8001c74:	d03a      	beq.n	8001cec <HAL_RCC_OscConfig+0x284>
 8001c76:	687b      	ldr	r3, [r7, #4]
 8001c78:	699b      	ldr	r3, [r3, #24]
 8001c7a:	2b00      	cmp	r3, #0
 8001c7c:	d019      	beq.n	8001cb2 <HAL_RCC_OscConfig+0x24a>
 8001c7e:	4b17      	ldr	r3, [pc, #92]	; (8001cdc <HAL_RCC_OscConfig+0x274>)
 8001c80:	2201      	movs	r2, #1
 8001c82:	601a      	str	r2, [r3, #0]
 8001c84:	f7ff fc14 	bl	80014b0 <HAL_GetTick>
 8001c88:	6138      	str	r0, [r7, #16]
 8001c8a:	e008      	b.n	8001c9e <HAL_RCC_OscConfig+0x236>
 8001c8c:	f7ff fc10 	bl	80014b0 <HAL_GetTick>
 8001c90:	4602      	mov	r2, r0
 8001c92:	693b      	ldr	r3, [r7, #16]
 8001c94:	1ad3      	subs	r3, r2, r3
 8001c96:	2b02      	cmp	r3, #2
 8001c98:	d901      	bls.n	8001c9e <HAL_RCC_OscConfig+0x236>
 8001c9a:	2303      	movs	r3, #3
 8001c9c:	e15a      	b.n	8001f54 <HAL_RCC_OscConfig+0x4ec>
 8001c9e:	4b0d      	ldr	r3, [pc, #52]	; (8001cd4 <HAL_RCC_OscConfig+0x26c>)
 8001ca0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001ca2:	f003 0302 	and.w	r3, r3, #2
 8001ca6:	2b00      	cmp	r3, #0
 8001ca8:	d0f0      	beq.n	8001c8c <HAL_RCC_OscConfig+0x224>
 8001caa:	2001      	movs	r0, #1
 8001cac:	f000 fb0a 	bl	80022c4 <RCC_Delay>
 8001cb0:	e01c      	b.n	8001cec <HAL_RCC_OscConfig+0x284>
 8001cb2:	4b0a      	ldr	r3, [pc, #40]	; (8001cdc <HAL_RCC_OscConfig+0x274>)
 8001cb4:	2200      	movs	r2, #0
 8001cb6:	601a      	str	r2, [r3, #0]
 8001cb8:	f7ff fbfa 	bl	80014b0 <HAL_GetTick>
 8001cbc:	6138      	str	r0, [r7, #16]
 8001cbe:	e00f      	b.n	8001ce0 <HAL_RCC_OscConfig+0x278>
 8001cc0:	f7ff fbf6 	bl	80014b0 <HAL_GetTick>
 8001cc4:	4602      	mov	r2, r0
 8001cc6:	693b      	ldr	r3, [r7, #16]
 8001cc8:	1ad3      	subs	r3, r2, r3
 8001cca:	2b02      	cmp	r3, #2
 8001ccc:	d908      	bls.n	8001ce0 <HAL_RCC_OscConfig+0x278>
 8001cce:	2303      	movs	r3, #3
 8001cd0:	e140      	b.n	8001f54 <HAL_RCC_OscConfig+0x4ec>
 8001cd2:	bf00      	nop
 8001cd4:	40021000 	.word	0x40021000
 8001cd8:	42420000 	.word	0x42420000
 8001cdc:	42420480 	.word	0x42420480
 8001ce0:	4b9e      	ldr	r3, [pc, #632]	; (8001f5c <HAL_RCC_OscConfig+0x4f4>)
 8001ce2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001ce4:	f003 0302 	and.w	r3, r3, #2
 8001ce8:	2b00      	cmp	r3, #0
 8001cea:	d1e9      	bne.n	8001cc0 <HAL_RCC_OscConfig+0x258>
 8001cec:	687b      	ldr	r3, [r7, #4]
 8001cee:	681b      	ldr	r3, [r3, #0]
 8001cf0:	f003 0304 	and.w	r3, r3, #4
 8001cf4:	2b00      	cmp	r3, #0
 8001cf6:	f000 80a6 	beq.w	8001e46 <HAL_RCC_OscConfig+0x3de>
 8001cfa:	2300      	movs	r3, #0
 8001cfc:	75fb      	strb	r3, [r7, #23]
 8001cfe:	4b97      	ldr	r3, [pc, #604]	; (8001f5c <HAL_RCC_OscConfig+0x4f4>)
 8001d00:	69db      	ldr	r3, [r3, #28]
 8001d02:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001d06:	2b00      	cmp	r3, #0
 8001d08:	d10d      	bne.n	8001d26 <HAL_RCC_OscConfig+0x2be>
 8001d0a:	4b94      	ldr	r3, [pc, #592]	; (8001f5c <HAL_RCC_OscConfig+0x4f4>)
 8001d0c:	69db      	ldr	r3, [r3, #28]
 8001d0e:	4a93      	ldr	r2, [pc, #588]	; (8001f5c <HAL_RCC_OscConfig+0x4f4>)
 8001d10:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001d14:	61d3      	str	r3, [r2, #28]
 8001d16:	4b91      	ldr	r3, [pc, #580]	; (8001f5c <HAL_RCC_OscConfig+0x4f4>)
 8001d18:	69db      	ldr	r3, [r3, #28]
 8001d1a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001d1e:	60bb      	str	r3, [r7, #8]
 8001d20:	68bb      	ldr	r3, [r7, #8]
 8001d22:	2301      	movs	r3, #1
 8001d24:	75fb      	strb	r3, [r7, #23]
 8001d26:	4b8e      	ldr	r3, [pc, #568]	; (8001f60 <HAL_RCC_OscConfig+0x4f8>)
 8001d28:	681b      	ldr	r3, [r3, #0]
 8001d2a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001d2e:	2b00      	cmp	r3, #0
 8001d30:	d118      	bne.n	8001d64 <HAL_RCC_OscConfig+0x2fc>
 8001d32:	4b8b      	ldr	r3, [pc, #556]	; (8001f60 <HAL_RCC_OscConfig+0x4f8>)
 8001d34:	681b      	ldr	r3, [r3, #0]
 8001d36:	4a8a      	ldr	r2, [pc, #552]	; (8001f60 <HAL_RCC_OscConfig+0x4f8>)
 8001d38:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001d3c:	6013      	str	r3, [r2, #0]
 8001d3e:	f7ff fbb7 	bl	80014b0 <HAL_GetTick>
 8001d42:	6138      	str	r0, [r7, #16]
 8001d44:	e008      	b.n	8001d58 <HAL_RCC_OscConfig+0x2f0>
 8001d46:	f7ff fbb3 	bl	80014b0 <HAL_GetTick>
 8001d4a:	4602      	mov	r2, r0
 8001d4c:	693b      	ldr	r3, [r7, #16]
 8001d4e:	1ad3      	subs	r3, r2, r3
 8001d50:	2b64      	cmp	r3, #100	; 0x64
 8001d52:	d901      	bls.n	8001d58 <HAL_RCC_OscConfig+0x2f0>
 8001d54:	2303      	movs	r3, #3
 8001d56:	e0fd      	b.n	8001f54 <HAL_RCC_OscConfig+0x4ec>
 8001d58:	4b81      	ldr	r3, [pc, #516]	; (8001f60 <HAL_RCC_OscConfig+0x4f8>)
 8001d5a:	681b      	ldr	r3, [r3, #0]
 8001d5c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001d60:	2b00      	cmp	r3, #0
 8001d62:	d0f0      	beq.n	8001d46 <HAL_RCC_OscConfig+0x2de>
 8001d64:	687b      	ldr	r3, [r7, #4]
 8001d66:	68db      	ldr	r3, [r3, #12]
 8001d68:	2b01      	cmp	r3, #1
 8001d6a:	d106      	bne.n	8001d7a <HAL_RCC_OscConfig+0x312>
 8001d6c:	4b7b      	ldr	r3, [pc, #492]	; (8001f5c <HAL_RCC_OscConfig+0x4f4>)
 8001d6e:	6a1b      	ldr	r3, [r3, #32]
 8001d70:	4a7a      	ldr	r2, [pc, #488]	; (8001f5c <HAL_RCC_OscConfig+0x4f4>)
 8001d72:	f043 0301 	orr.w	r3, r3, #1
 8001d76:	6213      	str	r3, [r2, #32]
 8001d78:	e02d      	b.n	8001dd6 <HAL_RCC_OscConfig+0x36e>
 8001d7a:	687b      	ldr	r3, [r7, #4]
 8001d7c:	68db      	ldr	r3, [r3, #12]
 8001d7e:	2b00      	cmp	r3, #0
 8001d80:	d10c      	bne.n	8001d9c <HAL_RCC_OscConfig+0x334>
 8001d82:	4b76      	ldr	r3, [pc, #472]	; (8001f5c <HAL_RCC_OscConfig+0x4f4>)
 8001d84:	6a1b      	ldr	r3, [r3, #32]
 8001d86:	4a75      	ldr	r2, [pc, #468]	; (8001f5c <HAL_RCC_OscConfig+0x4f4>)
 8001d88:	f023 0301 	bic.w	r3, r3, #1
 8001d8c:	6213      	str	r3, [r2, #32]
 8001d8e:	4b73      	ldr	r3, [pc, #460]	; (8001f5c <HAL_RCC_OscConfig+0x4f4>)
 8001d90:	6a1b      	ldr	r3, [r3, #32]
 8001d92:	4a72      	ldr	r2, [pc, #456]	; (8001f5c <HAL_RCC_OscConfig+0x4f4>)
 8001d94:	f023 0304 	bic.w	r3, r3, #4
 8001d98:	6213      	str	r3, [r2, #32]
 8001d9a:	e01c      	b.n	8001dd6 <HAL_RCC_OscConfig+0x36e>
 8001d9c:	687b      	ldr	r3, [r7, #4]
 8001d9e:	68db      	ldr	r3, [r3, #12]
 8001da0:	2b05      	cmp	r3, #5
 8001da2:	d10c      	bne.n	8001dbe <HAL_RCC_OscConfig+0x356>
 8001da4:	4b6d      	ldr	r3, [pc, #436]	; (8001f5c <HAL_RCC_OscConfig+0x4f4>)
 8001da6:	6a1b      	ldr	r3, [r3, #32]
 8001da8:	4a6c      	ldr	r2, [pc, #432]	; (8001f5c <HAL_RCC_OscConfig+0x4f4>)
 8001daa:	f043 0304 	orr.w	r3, r3, #4
 8001dae:	6213      	str	r3, [r2, #32]
 8001db0:	4b6a      	ldr	r3, [pc, #424]	; (8001f5c <HAL_RCC_OscConfig+0x4f4>)
 8001db2:	6a1b      	ldr	r3, [r3, #32]
 8001db4:	4a69      	ldr	r2, [pc, #420]	; (8001f5c <HAL_RCC_OscConfig+0x4f4>)
 8001db6:	f043 0301 	orr.w	r3, r3, #1
 8001dba:	6213      	str	r3, [r2, #32]
 8001dbc:	e00b      	b.n	8001dd6 <HAL_RCC_OscConfig+0x36e>
 8001dbe:	4b67      	ldr	r3, [pc, #412]	; (8001f5c <HAL_RCC_OscConfig+0x4f4>)
 8001dc0:	6a1b      	ldr	r3, [r3, #32]
 8001dc2:	4a66      	ldr	r2, [pc, #408]	; (8001f5c <HAL_RCC_OscConfig+0x4f4>)
 8001dc4:	f023 0301 	bic.w	r3, r3, #1
 8001dc8:	6213      	str	r3, [r2, #32]
 8001dca:	4b64      	ldr	r3, [pc, #400]	; (8001f5c <HAL_RCC_OscConfig+0x4f4>)
 8001dcc:	6a1b      	ldr	r3, [r3, #32]
 8001dce:	4a63      	ldr	r2, [pc, #396]	; (8001f5c <HAL_RCC_OscConfig+0x4f4>)
 8001dd0:	f023 0304 	bic.w	r3, r3, #4
 8001dd4:	6213      	str	r3, [r2, #32]
 8001dd6:	687b      	ldr	r3, [r7, #4]
 8001dd8:	68db      	ldr	r3, [r3, #12]
 8001dda:	2b00      	cmp	r3, #0
 8001ddc:	d015      	beq.n	8001e0a <HAL_RCC_OscConfig+0x3a2>
 8001dde:	f7ff fb67 	bl	80014b0 <HAL_GetTick>
 8001de2:	6138      	str	r0, [r7, #16]
 8001de4:	e00a      	b.n	8001dfc <HAL_RCC_OscConfig+0x394>
 8001de6:	f7ff fb63 	bl	80014b0 <HAL_GetTick>
 8001dea:	4602      	mov	r2, r0
 8001dec:	693b      	ldr	r3, [r7, #16]
 8001dee:	1ad3      	subs	r3, r2, r3
 8001df0:	f241 3288 	movw	r2, #5000	; 0x1388
 8001df4:	4293      	cmp	r3, r2
 8001df6:	d901      	bls.n	8001dfc <HAL_RCC_OscConfig+0x394>
 8001df8:	2303      	movs	r3, #3
 8001dfa:	e0ab      	b.n	8001f54 <HAL_RCC_OscConfig+0x4ec>
 8001dfc:	4b57      	ldr	r3, [pc, #348]	; (8001f5c <HAL_RCC_OscConfig+0x4f4>)
 8001dfe:	6a1b      	ldr	r3, [r3, #32]
 8001e00:	f003 0302 	and.w	r3, r3, #2
 8001e04:	2b00      	cmp	r3, #0
 8001e06:	d0ee      	beq.n	8001de6 <HAL_RCC_OscConfig+0x37e>
 8001e08:	e014      	b.n	8001e34 <HAL_RCC_OscConfig+0x3cc>
 8001e0a:	f7ff fb51 	bl	80014b0 <HAL_GetTick>
 8001e0e:	6138      	str	r0, [r7, #16]
 8001e10:	e00a      	b.n	8001e28 <HAL_RCC_OscConfig+0x3c0>
 8001e12:	f7ff fb4d 	bl	80014b0 <HAL_GetTick>
 8001e16:	4602      	mov	r2, r0
 8001e18:	693b      	ldr	r3, [r7, #16]
 8001e1a:	1ad3      	subs	r3, r2, r3
 8001e1c:	f241 3288 	movw	r2, #5000	; 0x1388
 8001e20:	4293      	cmp	r3, r2
 8001e22:	d901      	bls.n	8001e28 <HAL_RCC_OscConfig+0x3c0>
 8001e24:	2303      	movs	r3, #3
 8001e26:	e095      	b.n	8001f54 <HAL_RCC_OscConfig+0x4ec>
 8001e28:	4b4c      	ldr	r3, [pc, #304]	; (8001f5c <HAL_RCC_OscConfig+0x4f4>)
 8001e2a:	6a1b      	ldr	r3, [r3, #32]
 8001e2c:	f003 0302 	and.w	r3, r3, #2
 8001e30:	2b00      	cmp	r3, #0
 8001e32:	d1ee      	bne.n	8001e12 <HAL_RCC_OscConfig+0x3aa>
 8001e34:	7dfb      	ldrb	r3, [r7, #23]
 8001e36:	2b01      	cmp	r3, #1
 8001e38:	d105      	bne.n	8001e46 <HAL_RCC_OscConfig+0x3de>
 8001e3a:	4b48      	ldr	r3, [pc, #288]	; (8001f5c <HAL_RCC_OscConfig+0x4f4>)
 8001e3c:	69db      	ldr	r3, [r3, #28]
 8001e3e:	4a47      	ldr	r2, [pc, #284]	; (8001f5c <HAL_RCC_OscConfig+0x4f4>)
 8001e40:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8001e44:	61d3      	str	r3, [r2, #28]
 8001e46:	687b      	ldr	r3, [r7, #4]
 8001e48:	69db      	ldr	r3, [r3, #28]
 8001e4a:	2b00      	cmp	r3, #0
 8001e4c:	f000 8081 	beq.w	8001f52 <HAL_RCC_OscConfig+0x4ea>
 8001e50:	4b42      	ldr	r3, [pc, #264]	; (8001f5c <HAL_RCC_OscConfig+0x4f4>)
 8001e52:	685b      	ldr	r3, [r3, #4]
 8001e54:	f003 030c 	and.w	r3, r3, #12
 8001e58:	2b08      	cmp	r3, #8
 8001e5a:	d061      	beq.n	8001f20 <HAL_RCC_OscConfig+0x4b8>
 8001e5c:	687b      	ldr	r3, [r7, #4]
 8001e5e:	69db      	ldr	r3, [r3, #28]
 8001e60:	2b02      	cmp	r3, #2
 8001e62:	d146      	bne.n	8001ef2 <HAL_RCC_OscConfig+0x48a>
 8001e64:	4b3f      	ldr	r3, [pc, #252]	; (8001f64 <HAL_RCC_OscConfig+0x4fc>)
 8001e66:	2200      	movs	r2, #0
 8001e68:	601a      	str	r2, [r3, #0]
 8001e6a:	f7ff fb21 	bl	80014b0 <HAL_GetTick>
 8001e6e:	6138      	str	r0, [r7, #16]
 8001e70:	e008      	b.n	8001e84 <HAL_RCC_OscConfig+0x41c>
 8001e72:	f7ff fb1d 	bl	80014b0 <HAL_GetTick>
 8001e76:	4602      	mov	r2, r0
 8001e78:	693b      	ldr	r3, [r7, #16]
 8001e7a:	1ad3      	subs	r3, r2, r3
 8001e7c:	2b02      	cmp	r3, #2
 8001e7e:	d901      	bls.n	8001e84 <HAL_RCC_OscConfig+0x41c>
 8001e80:	2303      	movs	r3, #3
 8001e82:	e067      	b.n	8001f54 <HAL_RCC_OscConfig+0x4ec>
 8001e84:	4b35      	ldr	r3, [pc, #212]	; (8001f5c <HAL_RCC_OscConfig+0x4f4>)
 8001e86:	681b      	ldr	r3, [r3, #0]
 8001e88:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001e8c:	2b00      	cmp	r3, #0
 8001e8e:	d1f0      	bne.n	8001e72 <HAL_RCC_OscConfig+0x40a>
 8001e90:	687b      	ldr	r3, [r7, #4]
 8001e92:	6a1b      	ldr	r3, [r3, #32]
 8001e94:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001e98:	d108      	bne.n	8001eac <HAL_RCC_OscConfig+0x444>
 8001e9a:	4b30      	ldr	r3, [pc, #192]	; (8001f5c <HAL_RCC_OscConfig+0x4f4>)
 8001e9c:	685b      	ldr	r3, [r3, #4]
 8001e9e:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 8001ea2:	687b      	ldr	r3, [r7, #4]
 8001ea4:	689b      	ldr	r3, [r3, #8]
 8001ea6:	492d      	ldr	r1, [pc, #180]	; (8001f5c <HAL_RCC_OscConfig+0x4f4>)
 8001ea8:	4313      	orrs	r3, r2
 8001eaa:	604b      	str	r3, [r1, #4]
 8001eac:	4b2b      	ldr	r3, [pc, #172]	; (8001f5c <HAL_RCC_OscConfig+0x4f4>)
 8001eae:	685b      	ldr	r3, [r3, #4]
 8001eb0:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 8001eb4:	687b      	ldr	r3, [r7, #4]
 8001eb6:	6a19      	ldr	r1, [r3, #32]
 8001eb8:	687b      	ldr	r3, [r7, #4]
 8001eba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001ebc:	430b      	orrs	r3, r1
 8001ebe:	4927      	ldr	r1, [pc, #156]	; (8001f5c <HAL_RCC_OscConfig+0x4f4>)
 8001ec0:	4313      	orrs	r3, r2
 8001ec2:	604b      	str	r3, [r1, #4]
 8001ec4:	4b27      	ldr	r3, [pc, #156]	; (8001f64 <HAL_RCC_OscConfig+0x4fc>)
 8001ec6:	2201      	movs	r2, #1
 8001ec8:	601a      	str	r2, [r3, #0]
 8001eca:	f7ff faf1 	bl	80014b0 <HAL_GetTick>
 8001ece:	6138      	str	r0, [r7, #16]
 8001ed0:	e008      	b.n	8001ee4 <HAL_RCC_OscConfig+0x47c>
 8001ed2:	f7ff faed 	bl	80014b0 <HAL_GetTick>
 8001ed6:	4602      	mov	r2, r0
 8001ed8:	693b      	ldr	r3, [r7, #16]
 8001eda:	1ad3      	subs	r3, r2, r3
 8001edc:	2b02      	cmp	r3, #2
 8001ede:	d901      	bls.n	8001ee4 <HAL_RCC_OscConfig+0x47c>
 8001ee0:	2303      	movs	r3, #3
 8001ee2:	e037      	b.n	8001f54 <HAL_RCC_OscConfig+0x4ec>
 8001ee4:	4b1d      	ldr	r3, [pc, #116]	; (8001f5c <HAL_RCC_OscConfig+0x4f4>)
 8001ee6:	681b      	ldr	r3, [r3, #0]
 8001ee8:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001eec:	2b00      	cmp	r3, #0
 8001eee:	d0f0      	beq.n	8001ed2 <HAL_RCC_OscConfig+0x46a>
 8001ef0:	e02f      	b.n	8001f52 <HAL_RCC_OscConfig+0x4ea>
 8001ef2:	4b1c      	ldr	r3, [pc, #112]	; (8001f64 <HAL_RCC_OscConfig+0x4fc>)
 8001ef4:	2200      	movs	r2, #0
 8001ef6:	601a      	str	r2, [r3, #0]
 8001ef8:	f7ff fada 	bl	80014b0 <HAL_GetTick>
 8001efc:	6138      	str	r0, [r7, #16]
 8001efe:	e008      	b.n	8001f12 <HAL_RCC_OscConfig+0x4aa>
 8001f00:	f7ff fad6 	bl	80014b0 <HAL_GetTick>
 8001f04:	4602      	mov	r2, r0
 8001f06:	693b      	ldr	r3, [r7, #16]
 8001f08:	1ad3      	subs	r3, r2, r3
 8001f0a:	2b02      	cmp	r3, #2
 8001f0c:	d901      	bls.n	8001f12 <HAL_RCC_OscConfig+0x4aa>
 8001f0e:	2303      	movs	r3, #3
 8001f10:	e020      	b.n	8001f54 <HAL_RCC_OscConfig+0x4ec>
 8001f12:	4b12      	ldr	r3, [pc, #72]	; (8001f5c <HAL_RCC_OscConfig+0x4f4>)
 8001f14:	681b      	ldr	r3, [r3, #0]
 8001f16:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001f1a:	2b00      	cmp	r3, #0
 8001f1c:	d1f0      	bne.n	8001f00 <HAL_RCC_OscConfig+0x498>
 8001f1e:	e018      	b.n	8001f52 <HAL_RCC_OscConfig+0x4ea>
 8001f20:	687b      	ldr	r3, [r7, #4]
 8001f22:	69db      	ldr	r3, [r3, #28]
 8001f24:	2b01      	cmp	r3, #1
 8001f26:	d101      	bne.n	8001f2c <HAL_RCC_OscConfig+0x4c4>
 8001f28:	2301      	movs	r3, #1
 8001f2a:	e013      	b.n	8001f54 <HAL_RCC_OscConfig+0x4ec>
 8001f2c:	4b0b      	ldr	r3, [pc, #44]	; (8001f5c <HAL_RCC_OscConfig+0x4f4>)
 8001f2e:	685b      	ldr	r3, [r3, #4]
 8001f30:	60fb      	str	r3, [r7, #12]
 8001f32:	68fb      	ldr	r3, [r7, #12]
 8001f34:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 8001f38:	687b      	ldr	r3, [r7, #4]
 8001f3a:	6a1b      	ldr	r3, [r3, #32]
 8001f3c:	429a      	cmp	r2, r3
 8001f3e:	d106      	bne.n	8001f4e <HAL_RCC_OscConfig+0x4e6>
 8001f40:	68fb      	ldr	r3, [r7, #12]
 8001f42:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 8001f46:	687b      	ldr	r3, [r7, #4]
 8001f48:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001f4a:	429a      	cmp	r2, r3
 8001f4c:	d001      	beq.n	8001f52 <HAL_RCC_OscConfig+0x4ea>
 8001f4e:	2301      	movs	r3, #1
 8001f50:	e000      	b.n	8001f54 <HAL_RCC_OscConfig+0x4ec>
 8001f52:	2300      	movs	r3, #0
 8001f54:	4618      	mov	r0, r3
 8001f56:	3718      	adds	r7, #24
 8001f58:	46bd      	mov	sp, r7
 8001f5a:	bd80      	pop	{r7, pc}
 8001f5c:	40021000 	.word	0x40021000
 8001f60:	40007000 	.word	0x40007000
 8001f64:	42420060 	.word	0x42420060

08001f68 <HAL_RCC_ClockConfig>:
 8001f68:	b580      	push	{r7, lr}
 8001f6a:	b084      	sub	sp, #16
 8001f6c:	af00      	add	r7, sp, #0
 8001f6e:	6078      	str	r0, [r7, #4]
 8001f70:	6039      	str	r1, [r7, #0]
 8001f72:	687b      	ldr	r3, [r7, #4]
 8001f74:	2b00      	cmp	r3, #0
 8001f76:	d101      	bne.n	8001f7c <HAL_RCC_ClockConfig+0x14>
 8001f78:	2301      	movs	r3, #1
 8001f7a:	e0d0      	b.n	800211e <HAL_RCC_ClockConfig+0x1b6>
 8001f7c:	4b6a      	ldr	r3, [pc, #424]	; (8002128 <HAL_RCC_ClockConfig+0x1c0>)
 8001f7e:	681b      	ldr	r3, [r3, #0]
 8001f80:	f003 0307 	and.w	r3, r3, #7
 8001f84:	683a      	ldr	r2, [r7, #0]
 8001f86:	429a      	cmp	r2, r3
 8001f88:	d910      	bls.n	8001fac <HAL_RCC_ClockConfig+0x44>
 8001f8a:	4b67      	ldr	r3, [pc, #412]	; (8002128 <HAL_RCC_ClockConfig+0x1c0>)
 8001f8c:	681b      	ldr	r3, [r3, #0]
 8001f8e:	f023 0207 	bic.w	r2, r3, #7
 8001f92:	4965      	ldr	r1, [pc, #404]	; (8002128 <HAL_RCC_ClockConfig+0x1c0>)
 8001f94:	683b      	ldr	r3, [r7, #0]
 8001f96:	4313      	orrs	r3, r2
 8001f98:	600b      	str	r3, [r1, #0]
 8001f9a:	4b63      	ldr	r3, [pc, #396]	; (8002128 <HAL_RCC_ClockConfig+0x1c0>)
 8001f9c:	681b      	ldr	r3, [r3, #0]
 8001f9e:	f003 0307 	and.w	r3, r3, #7
 8001fa2:	683a      	ldr	r2, [r7, #0]
 8001fa4:	429a      	cmp	r2, r3
 8001fa6:	d001      	beq.n	8001fac <HAL_RCC_ClockConfig+0x44>
 8001fa8:	2301      	movs	r3, #1
 8001faa:	e0b8      	b.n	800211e <HAL_RCC_ClockConfig+0x1b6>
 8001fac:	687b      	ldr	r3, [r7, #4]
 8001fae:	681b      	ldr	r3, [r3, #0]
 8001fb0:	f003 0302 	and.w	r3, r3, #2
 8001fb4:	2b00      	cmp	r3, #0
 8001fb6:	d020      	beq.n	8001ffa <HAL_RCC_ClockConfig+0x92>
 8001fb8:	687b      	ldr	r3, [r7, #4]
 8001fba:	681b      	ldr	r3, [r3, #0]
 8001fbc:	f003 0304 	and.w	r3, r3, #4
 8001fc0:	2b00      	cmp	r3, #0
 8001fc2:	d005      	beq.n	8001fd0 <HAL_RCC_ClockConfig+0x68>
 8001fc4:	4b59      	ldr	r3, [pc, #356]	; (800212c <HAL_RCC_ClockConfig+0x1c4>)
 8001fc6:	685b      	ldr	r3, [r3, #4]
 8001fc8:	4a58      	ldr	r2, [pc, #352]	; (800212c <HAL_RCC_ClockConfig+0x1c4>)
 8001fca:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 8001fce:	6053      	str	r3, [r2, #4]
 8001fd0:	687b      	ldr	r3, [r7, #4]
 8001fd2:	681b      	ldr	r3, [r3, #0]
 8001fd4:	f003 0308 	and.w	r3, r3, #8
 8001fd8:	2b00      	cmp	r3, #0
 8001fda:	d005      	beq.n	8001fe8 <HAL_RCC_ClockConfig+0x80>
 8001fdc:	4b53      	ldr	r3, [pc, #332]	; (800212c <HAL_RCC_ClockConfig+0x1c4>)
 8001fde:	685b      	ldr	r3, [r3, #4]
 8001fe0:	4a52      	ldr	r2, [pc, #328]	; (800212c <HAL_RCC_ClockConfig+0x1c4>)
 8001fe2:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 8001fe6:	6053      	str	r3, [r2, #4]
 8001fe8:	4b50      	ldr	r3, [pc, #320]	; (800212c <HAL_RCC_ClockConfig+0x1c4>)
 8001fea:	685b      	ldr	r3, [r3, #4]
 8001fec:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8001ff0:	687b      	ldr	r3, [r7, #4]
 8001ff2:	689b      	ldr	r3, [r3, #8]
 8001ff4:	494d      	ldr	r1, [pc, #308]	; (800212c <HAL_RCC_ClockConfig+0x1c4>)
 8001ff6:	4313      	orrs	r3, r2
 8001ff8:	604b      	str	r3, [r1, #4]
 8001ffa:	687b      	ldr	r3, [r7, #4]
 8001ffc:	681b      	ldr	r3, [r3, #0]
 8001ffe:	f003 0301 	and.w	r3, r3, #1
 8002002:	2b00      	cmp	r3, #0
 8002004:	d040      	beq.n	8002088 <HAL_RCC_ClockConfig+0x120>
 8002006:	687b      	ldr	r3, [r7, #4]
 8002008:	685b      	ldr	r3, [r3, #4]
 800200a:	2b01      	cmp	r3, #1
 800200c:	d107      	bne.n	800201e <HAL_RCC_ClockConfig+0xb6>
 800200e:	4b47      	ldr	r3, [pc, #284]	; (800212c <HAL_RCC_ClockConfig+0x1c4>)
 8002010:	681b      	ldr	r3, [r3, #0]
 8002012:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002016:	2b00      	cmp	r3, #0
 8002018:	d115      	bne.n	8002046 <HAL_RCC_ClockConfig+0xde>
 800201a:	2301      	movs	r3, #1
 800201c:	e07f      	b.n	800211e <HAL_RCC_ClockConfig+0x1b6>
 800201e:	687b      	ldr	r3, [r7, #4]
 8002020:	685b      	ldr	r3, [r3, #4]
 8002022:	2b02      	cmp	r3, #2
 8002024:	d107      	bne.n	8002036 <HAL_RCC_ClockConfig+0xce>
 8002026:	4b41      	ldr	r3, [pc, #260]	; (800212c <HAL_RCC_ClockConfig+0x1c4>)
 8002028:	681b      	ldr	r3, [r3, #0]
 800202a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800202e:	2b00      	cmp	r3, #0
 8002030:	d109      	bne.n	8002046 <HAL_RCC_ClockConfig+0xde>
 8002032:	2301      	movs	r3, #1
 8002034:	e073      	b.n	800211e <HAL_RCC_ClockConfig+0x1b6>
 8002036:	4b3d      	ldr	r3, [pc, #244]	; (800212c <HAL_RCC_ClockConfig+0x1c4>)
 8002038:	681b      	ldr	r3, [r3, #0]
 800203a:	f003 0302 	and.w	r3, r3, #2
 800203e:	2b00      	cmp	r3, #0
 8002040:	d101      	bne.n	8002046 <HAL_RCC_ClockConfig+0xde>
 8002042:	2301      	movs	r3, #1
 8002044:	e06b      	b.n	800211e <HAL_RCC_ClockConfig+0x1b6>
 8002046:	4b39      	ldr	r3, [pc, #228]	; (800212c <HAL_RCC_ClockConfig+0x1c4>)
 8002048:	685b      	ldr	r3, [r3, #4]
 800204a:	f023 0203 	bic.w	r2, r3, #3
 800204e:	687b      	ldr	r3, [r7, #4]
 8002050:	685b      	ldr	r3, [r3, #4]
 8002052:	4936      	ldr	r1, [pc, #216]	; (800212c <HAL_RCC_ClockConfig+0x1c4>)
 8002054:	4313      	orrs	r3, r2
 8002056:	604b      	str	r3, [r1, #4]
 8002058:	f7ff fa2a 	bl	80014b0 <HAL_GetTick>
 800205c:	60f8      	str	r0, [r7, #12]
 800205e:	e00a      	b.n	8002076 <HAL_RCC_ClockConfig+0x10e>
 8002060:	f7ff fa26 	bl	80014b0 <HAL_GetTick>
 8002064:	4602      	mov	r2, r0
 8002066:	68fb      	ldr	r3, [r7, #12]
 8002068:	1ad3      	subs	r3, r2, r3
 800206a:	f241 3288 	movw	r2, #5000	; 0x1388
 800206e:	4293      	cmp	r3, r2
 8002070:	d901      	bls.n	8002076 <HAL_RCC_ClockConfig+0x10e>
 8002072:	2303      	movs	r3, #3
 8002074:	e053      	b.n	800211e <HAL_RCC_ClockConfig+0x1b6>
 8002076:	4b2d      	ldr	r3, [pc, #180]	; (800212c <HAL_RCC_ClockConfig+0x1c4>)
 8002078:	685b      	ldr	r3, [r3, #4]
 800207a:	f003 020c 	and.w	r2, r3, #12
 800207e:	687b      	ldr	r3, [r7, #4]
 8002080:	685b      	ldr	r3, [r3, #4]
 8002082:	009b      	lsls	r3, r3, #2
 8002084:	429a      	cmp	r2, r3
 8002086:	d1eb      	bne.n	8002060 <HAL_RCC_ClockConfig+0xf8>
 8002088:	4b27      	ldr	r3, [pc, #156]	; (8002128 <HAL_RCC_ClockConfig+0x1c0>)
 800208a:	681b      	ldr	r3, [r3, #0]
 800208c:	f003 0307 	and.w	r3, r3, #7
 8002090:	683a      	ldr	r2, [r7, #0]
 8002092:	429a      	cmp	r2, r3
 8002094:	d210      	bcs.n	80020b8 <HAL_RCC_ClockConfig+0x150>
 8002096:	4b24      	ldr	r3, [pc, #144]	; (8002128 <HAL_RCC_ClockConfig+0x1c0>)
 8002098:	681b      	ldr	r3, [r3, #0]
 800209a:	f023 0207 	bic.w	r2, r3, #7
 800209e:	4922      	ldr	r1, [pc, #136]	; (8002128 <HAL_RCC_ClockConfig+0x1c0>)
 80020a0:	683b      	ldr	r3, [r7, #0]
 80020a2:	4313      	orrs	r3, r2
 80020a4:	600b      	str	r3, [r1, #0]
 80020a6:	4b20      	ldr	r3, [pc, #128]	; (8002128 <HAL_RCC_ClockConfig+0x1c0>)
 80020a8:	681b      	ldr	r3, [r3, #0]
 80020aa:	f003 0307 	and.w	r3, r3, #7
 80020ae:	683a      	ldr	r2, [r7, #0]
 80020b0:	429a      	cmp	r2, r3
 80020b2:	d001      	beq.n	80020b8 <HAL_RCC_ClockConfig+0x150>
 80020b4:	2301      	movs	r3, #1
 80020b6:	e032      	b.n	800211e <HAL_RCC_ClockConfig+0x1b6>
 80020b8:	687b      	ldr	r3, [r7, #4]
 80020ba:	681b      	ldr	r3, [r3, #0]
 80020bc:	f003 0304 	and.w	r3, r3, #4
 80020c0:	2b00      	cmp	r3, #0
 80020c2:	d008      	beq.n	80020d6 <HAL_RCC_ClockConfig+0x16e>
 80020c4:	4b19      	ldr	r3, [pc, #100]	; (800212c <HAL_RCC_ClockConfig+0x1c4>)
 80020c6:	685b      	ldr	r3, [r3, #4]
 80020c8:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 80020cc:	687b      	ldr	r3, [r7, #4]
 80020ce:	68db      	ldr	r3, [r3, #12]
 80020d0:	4916      	ldr	r1, [pc, #88]	; (800212c <HAL_RCC_ClockConfig+0x1c4>)
 80020d2:	4313      	orrs	r3, r2
 80020d4:	604b      	str	r3, [r1, #4]
 80020d6:	687b      	ldr	r3, [r7, #4]
 80020d8:	681b      	ldr	r3, [r3, #0]
 80020da:	f003 0308 	and.w	r3, r3, #8
 80020de:	2b00      	cmp	r3, #0
 80020e0:	d009      	beq.n	80020f6 <HAL_RCC_ClockConfig+0x18e>
 80020e2:	4b12      	ldr	r3, [pc, #72]	; (800212c <HAL_RCC_ClockConfig+0x1c4>)
 80020e4:	685b      	ldr	r3, [r3, #4]
 80020e6:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 80020ea:	687b      	ldr	r3, [r7, #4]
 80020ec:	691b      	ldr	r3, [r3, #16]
 80020ee:	00db      	lsls	r3, r3, #3
 80020f0:	490e      	ldr	r1, [pc, #56]	; (800212c <HAL_RCC_ClockConfig+0x1c4>)
 80020f2:	4313      	orrs	r3, r2
 80020f4:	604b      	str	r3, [r1, #4]
 80020f6:	f000 f821 	bl	800213c <HAL_RCC_GetSysClockFreq>
 80020fa:	4601      	mov	r1, r0
 80020fc:	4b0b      	ldr	r3, [pc, #44]	; (800212c <HAL_RCC_ClockConfig+0x1c4>)
 80020fe:	685b      	ldr	r3, [r3, #4]
 8002100:	091b      	lsrs	r3, r3, #4
 8002102:	f003 030f 	and.w	r3, r3, #15
 8002106:	4a0a      	ldr	r2, [pc, #40]	; (8002130 <HAL_RCC_ClockConfig+0x1c8>)
 8002108:	5cd3      	ldrb	r3, [r2, r3]
 800210a:	fa21 f303 	lsr.w	r3, r1, r3
 800210e:	4a09      	ldr	r2, [pc, #36]	; (8002134 <HAL_RCC_ClockConfig+0x1cc>)
 8002110:	6013      	str	r3, [r2, #0]
 8002112:	4b09      	ldr	r3, [pc, #36]	; (8002138 <HAL_RCC_ClockConfig+0x1d0>)
 8002114:	681b      	ldr	r3, [r3, #0]
 8002116:	4618      	mov	r0, r3
 8002118:	f7ff f8b8 	bl	800128c <HAL_InitTick>
 800211c:	2300      	movs	r3, #0
 800211e:	4618      	mov	r0, r3
 8002120:	3710      	adds	r7, #16
 8002122:	46bd      	mov	sp, r7
 8002124:	bd80      	pop	{r7, pc}
 8002126:	bf00      	nop
 8002128:	40022000 	.word	0x40022000
 800212c:	40021000 	.word	0x40021000
 8002130:	08004fb8 	.word	0x08004fb8
 8002134:	20000004 	.word	0x20000004
 8002138:	20000008 	.word	0x20000008

0800213c <HAL_RCC_GetSysClockFreq>:
 800213c:	b490      	push	{r4, r7}
 800213e:	b08a      	sub	sp, #40	; 0x28
 8002140:	af00      	add	r7, sp, #0
 8002142:	4b2a      	ldr	r3, [pc, #168]	; (80021ec <HAL_RCC_GetSysClockFreq+0xb0>)
 8002144:	1d3c      	adds	r4, r7, #4
 8002146:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8002148:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800214c:	4b28      	ldr	r3, [pc, #160]	; (80021f0 <HAL_RCC_GetSysClockFreq+0xb4>)
 800214e:	881b      	ldrh	r3, [r3, #0]
 8002150:	803b      	strh	r3, [r7, #0]
 8002152:	2300      	movs	r3, #0
 8002154:	61fb      	str	r3, [r7, #28]
 8002156:	2300      	movs	r3, #0
 8002158:	61bb      	str	r3, [r7, #24]
 800215a:	2300      	movs	r3, #0
 800215c:	627b      	str	r3, [r7, #36]	; 0x24
 800215e:	2300      	movs	r3, #0
 8002160:	617b      	str	r3, [r7, #20]
 8002162:	2300      	movs	r3, #0
 8002164:	623b      	str	r3, [r7, #32]
 8002166:	4b23      	ldr	r3, [pc, #140]	; (80021f4 <HAL_RCC_GetSysClockFreq+0xb8>)
 8002168:	685b      	ldr	r3, [r3, #4]
 800216a:	61fb      	str	r3, [r7, #28]
 800216c:	69fb      	ldr	r3, [r7, #28]
 800216e:	f003 030c 	and.w	r3, r3, #12
 8002172:	2b04      	cmp	r3, #4
 8002174:	d002      	beq.n	800217c <HAL_RCC_GetSysClockFreq+0x40>
 8002176:	2b08      	cmp	r3, #8
 8002178:	d003      	beq.n	8002182 <HAL_RCC_GetSysClockFreq+0x46>
 800217a:	e02d      	b.n	80021d8 <HAL_RCC_GetSysClockFreq+0x9c>
 800217c:	4b1e      	ldr	r3, [pc, #120]	; (80021f8 <HAL_RCC_GetSysClockFreq+0xbc>)
 800217e:	623b      	str	r3, [r7, #32]
 8002180:	e02d      	b.n	80021de <HAL_RCC_GetSysClockFreq+0xa2>
 8002182:	69fb      	ldr	r3, [r7, #28]
 8002184:	0c9b      	lsrs	r3, r3, #18
 8002186:	f003 030f 	and.w	r3, r3, #15
 800218a:	f107 0228 	add.w	r2, r7, #40	; 0x28
 800218e:	4413      	add	r3, r2
 8002190:	f813 3c24 	ldrb.w	r3, [r3, #-36]
 8002194:	617b      	str	r3, [r7, #20]
 8002196:	69fb      	ldr	r3, [r7, #28]
 8002198:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800219c:	2b00      	cmp	r3, #0
 800219e:	d013      	beq.n	80021c8 <HAL_RCC_GetSysClockFreq+0x8c>
 80021a0:	4b14      	ldr	r3, [pc, #80]	; (80021f4 <HAL_RCC_GetSysClockFreq+0xb8>)
 80021a2:	685b      	ldr	r3, [r3, #4]
 80021a4:	0c5b      	lsrs	r3, r3, #17
 80021a6:	f003 0301 	and.w	r3, r3, #1
 80021aa:	f107 0228 	add.w	r2, r7, #40	; 0x28
 80021ae:	4413      	add	r3, r2
 80021b0:	f813 3c28 	ldrb.w	r3, [r3, #-40]
 80021b4:	61bb      	str	r3, [r7, #24]
 80021b6:	697b      	ldr	r3, [r7, #20]
 80021b8:	4a0f      	ldr	r2, [pc, #60]	; (80021f8 <HAL_RCC_GetSysClockFreq+0xbc>)
 80021ba:	fb02 f203 	mul.w	r2, r2, r3
 80021be:	69bb      	ldr	r3, [r7, #24]
 80021c0:	fbb2 f3f3 	udiv	r3, r2, r3
 80021c4:	627b      	str	r3, [r7, #36]	; 0x24
 80021c6:	e004      	b.n	80021d2 <HAL_RCC_GetSysClockFreq+0x96>
 80021c8:	697b      	ldr	r3, [r7, #20]
 80021ca:	4a0c      	ldr	r2, [pc, #48]	; (80021fc <HAL_RCC_GetSysClockFreq+0xc0>)
 80021cc:	fb02 f303 	mul.w	r3, r2, r3
 80021d0:	627b      	str	r3, [r7, #36]	; 0x24
 80021d2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80021d4:	623b      	str	r3, [r7, #32]
 80021d6:	e002      	b.n	80021de <HAL_RCC_GetSysClockFreq+0xa2>
 80021d8:	4b07      	ldr	r3, [pc, #28]	; (80021f8 <HAL_RCC_GetSysClockFreq+0xbc>)
 80021da:	623b      	str	r3, [r7, #32]
 80021dc:	bf00      	nop
 80021de:	6a3b      	ldr	r3, [r7, #32]
 80021e0:	4618      	mov	r0, r3
 80021e2:	3728      	adds	r7, #40	; 0x28
 80021e4:	46bd      	mov	sp, r7
 80021e6:	bc90      	pop	{r4, r7}
 80021e8:	4770      	bx	lr
 80021ea:	bf00      	nop
 80021ec:	08004f9c 	.word	0x08004f9c
 80021f0:	08004fac 	.word	0x08004fac
 80021f4:	40021000 	.word	0x40021000
 80021f8:	007a1200 	.word	0x007a1200
 80021fc:	003d0900 	.word	0x003d0900

08002200 <HAL_RCC_GetHCLKFreq>:
 8002200:	b480      	push	{r7}
 8002202:	af00      	add	r7, sp, #0
 8002204:	4b02      	ldr	r3, [pc, #8]	; (8002210 <HAL_RCC_GetHCLKFreq+0x10>)
 8002206:	681b      	ldr	r3, [r3, #0]
 8002208:	4618      	mov	r0, r3
 800220a:	46bd      	mov	sp, r7
 800220c:	bc80      	pop	{r7}
 800220e:	4770      	bx	lr
 8002210:	20000004 	.word	0x20000004

08002214 <HAL_RCC_GetPCLK1Freq>:
 8002214:	b580      	push	{r7, lr}
 8002216:	af00      	add	r7, sp, #0
 8002218:	f7ff fff2 	bl	8002200 <HAL_RCC_GetHCLKFreq>
 800221c:	4601      	mov	r1, r0
 800221e:	4b05      	ldr	r3, [pc, #20]	; (8002234 <HAL_RCC_GetPCLK1Freq+0x20>)
 8002220:	685b      	ldr	r3, [r3, #4]
 8002222:	0a1b      	lsrs	r3, r3, #8
 8002224:	f003 0307 	and.w	r3, r3, #7
 8002228:	4a03      	ldr	r2, [pc, #12]	; (8002238 <HAL_RCC_GetPCLK1Freq+0x24>)
 800222a:	5cd3      	ldrb	r3, [r2, r3]
 800222c:	fa21 f303 	lsr.w	r3, r1, r3
 8002230:	4618      	mov	r0, r3
 8002232:	bd80      	pop	{r7, pc}
 8002234:	40021000 	.word	0x40021000
 8002238:	08004fc8 	.word	0x08004fc8

0800223c <HAL_RCC_GetPCLK2Freq>:
 800223c:	b580      	push	{r7, lr}
 800223e:	af00      	add	r7, sp, #0
 8002240:	f7ff ffde 	bl	8002200 <HAL_RCC_GetHCLKFreq>
 8002244:	4601      	mov	r1, r0
 8002246:	4b05      	ldr	r3, [pc, #20]	; (800225c <HAL_RCC_GetPCLK2Freq+0x20>)
 8002248:	685b      	ldr	r3, [r3, #4]
 800224a:	0adb      	lsrs	r3, r3, #11
 800224c:	f003 0307 	and.w	r3, r3, #7
 8002250:	4a03      	ldr	r2, [pc, #12]	; (8002260 <HAL_RCC_GetPCLK2Freq+0x24>)
 8002252:	5cd3      	ldrb	r3, [r2, r3]
 8002254:	fa21 f303 	lsr.w	r3, r1, r3
 8002258:	4618      	mov	r0, r3
 800225a:	bd80      	pop	{r7, pc}
 800225c:	40021000 	.word	0x40021000
 8002260:	08004fc8 	.word	0x08004fc8

08002264 <HAL_RCC_GetClockConfig>:
 8002264:	b480      	push	{r7}
 8002266:	b083      	sub	sp, #12
 8002268:	af00      	add	r7, sp, #0
 800226a:	6078      	str	r0, [r7, #4]
 800226c:	6039      	str	r1, [r7, #0]
 800226e:	687b      	ldr	r3, [r7, #4]
 8002270:	220f      	movs	r2, #15
 8002272:	601a      	str	r2, [r3, #0]
 8002274:	4b11      	ldr	r3, [pc, #68]	; (80022bc <HAL_RCC_GetClockConfig+0x58>)
 8002276:	685b      	ldr	r3, [r3, #4]
 8002278:	f003 0203 	and.w	r2, r3, #3
 800227c:	687b      	ldr	r3, [r7, #4]
 800227e:	605a      	str	r2, [r3, #4]
 8002280:	4b0e      	ldr	r3, [pc, #56]	; (80022bc <HAL_RCC_GetClockConfig+0x58>)
 8002282:	685b      	ldr	r3, [r3, #4]
 8002284:	f003 02f0 	and.w	r2, r3, #240	; 0xf0
 8002288:	687b      	ldr	r3, [r7, #4]
 800228a:	609a      	str	r2, [r3, #8]
 800228c:	4b0b      	ldr	r3, [pc, #44]	; (80022bc <HAL_RCC_GetClockConfig+0x58>)
 800228e:	685b      	ldr	r3, [r3, #4]
 8002290:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
 8002294:	687b      	ldr	r3, [r7, #4]
 8002296:	60da      	str	r2, [r3, #12]
 8002298:	4b08      	ldr	r3, [pc, #32]	; (80022bc <HAL_RCC_GetClockConfig+0x58>)
 800229a:	685b      	ldr	r3, [r3, #4]
 800229c:	08db      	lsrs	r3, r3, #3
 800229e:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
 80022a2:	687b      	ldr	r3, [r7, #4]
 80022a4:	611a      	str	r2, [r3, #16]
 80022a6:	4b06      	ldr	r3, [pc, #24]	; (80022c0 <HAL_RCC_GetClockConfig+0x5c>)
 80022a8:	681b      	ldr	r3, [r3, #0]
 80022aa:	f003 0207 	and.w	r2, r3, #7
 80022ae:	683b      	ldr	r3, [r7, #0]
 80022b0:	601a      	str	r2, [r3, #0]
 80022b2:	bf00      	nop
 80022b4:	370c      	adds	r7, #12
 80022b6:	46bd      	mov	sp, r7
 80022b8:	bc80      	pop	{r7}
 80022ba:	4770      	bx	lr
 80022bc:	40021000 	.word	0x40021000
 80022c0:	40022000 	.word	0x40022000

080022c4 <RCC_Delay>:
 80022c4:	b480      	push	{r7}
 80022c6:	b085      	sub	sp, #20
 80022c8:	af00      	add	r7, sp, #0
 80022ca:	6078      	str	r0, [r7, #4]
 80022cc:	4b0a      	ldr	r3, [pc, #40]	; (80022f8 <RCC_Delay+0x34>)
 80022ce:	681b      	ldr	r3, [r3, #0]
 80022d0:	4a0a      	ldr	r2, [pc, #40]	; (80022fc <RCC_Delay+0x38>)
 80022d2:	fba2 2303 	umull	r2, r3, r2, r3
 80022d6:	0a5b      	lsrs	r3, r3, #9
 80022d8:	687a      	ldr	r2, [r7, #4]
 80022da:	fb02 f303 	mul.w	r3, r2, r3
 80022de:	60fb      	str	r3, [r7, #12]
 80022e0:	bf00      	nop
 80022e2:	68fb      	ldr	r3, [r7, #12]
 80022e4:	1e5a      	subs	r2, r3, #1
 80022e6:	60fa      	str	r2, [r7, #12]
 80022e8:	2b00      	cmp	r3, #0
 80022ea:	d1f9      	bne.n	80022e0 <RCC_Delay+0x1c>
 80022ec:	bf00      	nop
 80022ee:	3714      	adds	r7, #20
 80022f0:	46bd      	mov	sp, r7
 80022f2:	bc80      	pop	{r7}
 80022f4:	4770      	bx	lr
 80022f6:	bf00      	nop
 80022f8:	20000004 	.word	0x20000004
 80022fc:	10624dd3 	.word	0x10624dd3

08002300 <HAL_TIM_Base_Init>:
 8002300:	b580      	push	{r7, lr}
 8002302:	b082      	sub	sp, #8
 8002304:	af00      	add	r7, sp, #0
 8002306:	6078      	str	r0, [r7, #4]
 8002308:	687b      	ldr	r3, [r7, #4]
 800230a:	2b00      	cmp	r3, #0
 800230c:	d101      	bne.n	8002312 <HAL_TIM_Base_Init+0x12>
 800230e:	2301      	movs	r3, #1
 8002310:	e041      	b.n	8002396 <HAL_TIM_Base_Init+0x96>
 8002312:	687b      	ldr	r3, [r7, #4]
 8002314:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002318:	b2db      	uxtb	r3, r3
 800231a:	2b00      	cmp	r3, #0
 800231c:	d106      	bne.n	800232c <HAL_TIM_Base_Init+0x2c>
 800231e:	687b      	ldr	r3, [r7, #4]
 8002320:	2200      	movs	r2, #0
 8002322:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002326:	6878      	ldr	r0, [r7, #4]
 8002328:	f000 f839 	bl	800239e <HAL_TIM_Base_MspInit>
 800232c:	687b      	ldr	r3, [r7, #4]
 800232e:	2202      	movs	r2, #2
 8002330:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002334:	687b      	ldr	r3, [r7, #4]
 8002336:	681a      	ldr	r2, [r3, #0]
 8002338:	687b      	ldr	r3, [r7, #4]
 800233a:	3304      	adds	r3, #4
 800233c:	4619      	mov	r1, r3
 800233e:	4610      	mov	r0, r2
 8002340:	f000 f9b4 	bl	80026ac <TIM_Base_SetConfig>
 8002344:	687b      	ldr	r3, [r7, #4]
 8002346:	2201      	movs	r2, #1
 8002348:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800234c:	687b      	ldr	r3, [r7, #4]
 800234e:	2201      	movs	r2, #1
 8002350:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002354:	687b      	ldr	r3, [r7, #4]
 8002356:	2201      	movs	r2, #1
 8002358:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800235c:	687b      	ldr	r3, [r7, #4]
 800235e:	2201      	movs	r2, #1
 8002360:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8002364:	687b      	ldr	r3, [r7, #4]
 8002366:	2201      	movs	r2, #1
 8002368:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800236c:	687b      	ldr	r3, [r7, #4]
 800236e:	2201      	movs	r2, #1
 8002370:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8002374:	687b      	ldr	r3, [r7, #4]
 8002376:	2201      	movs	r2, #1
 8002378:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800237c:	687b      	ldr	r3, [r7, #4]
 800237e:	2201      	movs	r2, #1
 8002380:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8002384:	687b      	ldr	r3, [r7, #4]
 8002386:	2201      	movs	r2, #1
 8002388:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800238c:	687b      	ldr	r3, [r7, #4]
 800238e:	2201      	movs	r2, #1
 8002390:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002394:	2300      	movs	r3, #0
 8002396:	4618      	mov	r0, r3
 8002398:	3708      	adds	r7, #8
 800239a:	46bd      	mov	sp, r7
 800239c:	bd80      	pop	{r7, pc}

0800239e <HAL_TIM_Base_MspInit>:
 800239e:	b480      	push	{r7}
 80023a0:	b083      	sub	sp, #12
 80023a2:	af00      	add	r7, sp, #0
 80023a4:	6078      	str	r0, [r7, #4]
 80023a6:	bf00      	nop
 80023a8:	370c      	adds	r7, #12
 80023aa:	46bd      	mov	sp, r7
 80023ac:	bc80      	pop	{r7}
 80023ae:	4770      	bx	lr

080023b0 <HAL_TIM_Base_Start_IT>:
 80023b0:	b480      	push	{r7}
 80023b2:	b085      	sub	sp, #20
 80023b4:	af00      	add	r7, sp, #0
 80023b6:	6078      	str	r0, [r7, #4]
 80023b8:	687b      	ldr	r3, [r7, #4]
 80023ba:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80023be:	b2db      	uxtb	r3, r3
 80023c0:	2b01      	cmp	r3, #1
 80023c2:	d001      	beq.n	80023c8 <HAL_TIM_Base_Start_IT+0x18>
 80023c4:	2301      	movs	r3, #1
 80023c6:	e03a      	b.n	800243e <HAL_TIM_Base_Start_IT+0x8e>
 80023c8:	687b      	ldr	r3, [r7, #4]
 80023ca:	2202      	movs	r2, #2
 80023cc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80023d0:	687b      	ldr	r3, [r7, #4]
 80023d2:	681b      	ldr	r3, [r3, #0]
 80023d4:	68da      	ldr	r2, [r3, #12]
 80023d6:	687b      	ldr	r3, [r7, #4]
 80023d8:	681b      	ldr	r3, [r3, #0]
 80023da:	f042 0201 	orr.w	r2, r2, #1
 80023de:	60da      	str	r2, [r3, #12]
 80023e0:	687b      	ldr	r3, [r7, #4]
 80023e2:	681b      	ldr	r3, [r3, #0]
 80023e4:	4a18      	ldr	r2, [pc, #96]	; (8002448 <HAL_TIM_Base_Start_IT+0x98>)
 80023e6:	4293      	cmp	r3, r2
 80023e8:	d00e      	beq.n	8002408 <HAL_TIM_Base_Start_IT+0x58>
 80023ea:	687b      	ldr	r3, [r7, #4]
 80023ec:	681b      	ldr	r3, [r3, #0]
 80023ee:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80023f2:	d009      	beq.n	8002408 <HAL_TIM_Base_Start_IT+0x58>
 80023f4:	687b      	ldr	r3, [r7, #4]
 80023f6:	681b      	ldr	r3, [r3, #0]
 80023f8:	4a14      	ldr	r2, [pc, #80]	; (800244c <HAL_TIM_Base_Start_IT+0x9c>)
 80023fa:	4293      	cmp	r3, r2
 80023fc:	d004      	beq.n	8002408 <HAL_TIM_Base_Start_IT+0x58>
 80023fe:	687b      	ldr	r3, [r7, #4]
 8002400:	681b      	ldr	r3, [r3, #0]
 8002402:	4a13      	ldr	r2, [pc, #76]	; (8002450 <HAL_TIM_Base_Start_IT+0xa0>)
 8002404:	4293      	cmp	r3, r2
 8002406:	d111      	bne.n	800242c <HAL_TIM_Base_Start_IT+0x7c>
 8002408:	687b      	ldr	r3, [r7, #4]
 800240a:	681b      	ldr	r3, [r3, #0]
 800240c:	689b      	ldr	r3, [r3, #8]
 800240e:	f003 0307 	and.w	r3, r3, #7
 8002412:	60fb      	str	r3, [r7, #12]
 8002414:	68fb      	ldr	r3, [r7, #12]
 8002416:	2b06      	cmp	r3, #6
 8002418:	d010      	beq.n	800243c <HAL_TIM_Base_Start_IT+0x8c>
 800241a:	687b      	ldr	r3, [r7, #4]
 800241c:	681b      	ldr	r3, [r3, #0]
 800241e:	681a      	ldr	r2, [r3, #0]
 8002420:	687b      	ldr	r3, [r7, #4]
 8002422:	681b      	ldr	r3, [r3, #0]
 8002424:	f042 0201 	orr.w	r2, r2, #1
 8002428:	601a      	str	r2, [r3, #0]
 800242a:	e007      	b.n	800243c <HAL_TIM_Base_Start_IT+0x8c>
 800242c:	687b      	ldr	r3, [r7, #4]
 800242e:	681b      	ldr	r3, [r3, #0]
 8002430:	681a      	ldr	r2, [r3, #0]
 8002432:	687b      	ldr	r3, [r7, #4]
 8002434:	681b      	ldr	r3, [r3, #0]
 8002436:	f042 0201 	orr.w	r2, r2, #1
 800243a:	601a      	str	r2, [r3, #0]
 800243c:	2300      	movs	r3, #0
 800243e:	4618      	mov	r0, r3
 8002440:	3714      	adds	r7, #20
 8002442:	46bd      	mov	sp, r7
 8002444:	bc80      	pop	{r7}
 8002446:	4770      	bx	lr
 8002448:	40012c00 	.word	0x40012c00
 800244c:	40000400 	.word	0x40000400
 8002450:	40000800 	.word	0x40000800

08002454 <HAL_TIM_IRQHandler>:
 8002454:	b580      	push	{r7, lr}
 8002456:	b082      	sub	sp, #8
 8002458:	af00      	add	r7, sp, #0
 800245a:	6078      	str	r0, [r7, #4]
 800245c:	687b      	ldr	r3, [r7, #4]
 800245e:	681b      	ldr	r3, [r3, #0]
 8002460:	691b      	ldr	r3, [r3, #16]
 8002462:	f003 0302 	and.w	r3, r3, #2
 8002466:	2b02      	cmp	r3, #2
 8002468:	d122      	bne.n	80024b0 <HAL_TIM_IRQHandler+0x5c>
 800246a:	687b      	ldr	r3, [r7, #4]
 800246c:	681b      	ldr	r3, [r3, #0]
 800246e:	68db      	ldr	r3, [r3, #12]
 8002470:	f003 0302 	and.w	r3, r3, #2
 8002474:	2b02      	cmp	r3, #2
 8002476:	d11b      	bne.n	80024b0 <HAL_TIM_IRQHandler+0x5c>
 8002478:	687b      	ldr	r3, [r7, #4]
 800247a:	681b      	ldr	r3, [r3, #0]
 800247c:	f06f 0202 	mvn.w	r2, #2
 8002480:	611a      	str	r2, [r3, #16]
 8002482:	687b      	ldr	r3, [r7, #4]
 8002484:	2201      	movs	r2, #1
 8002486:	771a      	strb	r2, [r3, #28]
 8002488:	687b      	ldr	r3, [r7, #4]
 800248a:	681b      	ldr	r3, [r3, #0]
 800248c:	699b      	ldr	r3, [r3, #24]
 800248e:	f003 0303 	and.w	r3, r3, #3
 8002492:	2b00      	cmp	r3, #0
 8002494:	d003      	beq.n	800249e <HAL_TIM_IRQHandler+0x4a>
 8002496:	6878      	ldr	r0, [r7, #4]
 8002498:	f000 f8ed 	bl	8002676 <HAL_TIM_IC_CaptureCallback>
 800249c:	e005      	b.n	80024aa <HAL_TIM_IRQHandler+0x56>
 800249e:	6878      	ldr	r0, [r7, #4]
 80024a0:	f000 f8e0 	bl	8002664 <HAL_TIM_OC_DelayElapsedCallback>
 80024a4:	6878      	ldr	r0, [r7, #4]
 80024a6:	f000 f8ef 	bl	8002688 <HAL_TIM_PWM_PulseFinishedCallback>
 80024aa:	687b      	ldr	r3, [r7, #4]
 80024ac:	2200      	movs	r2, #0
 80024ae:	771a      	strb	r2, [r3, #28]
 80024b0:	687b      	ldr	r3, [r7, #4]
 80024b2:	681b      	ldr	r3, [r3, #0]
 80024b4:	691b      	ldr	r3, [r3, #16]
 80024b6:	f003 0304 	and.w	r3, r3, #4
 80024ba:	2b04      	cmp	r3, #4
 80024bc:	d122      	bne.n	8002504 <HAL_TIM_IRQHandler+0xb0>
 80024be:	687b      	ldr	r3, [r7, #4]
 80024c0:	681b      	ldr	r3, [r3, #0]
 80024c2:	68db      	ldr	r3, [r3, #12]
 80024c4:	f003 0304 	and.w	r3, r3, #4
 80024c8:	2b04      	cmp	r3, #4
 80024ca:	d11b      	bne.n	8002504 <HAL_TIM_IRQHandler+0xb0>
 80024cc:	687b      	ldr	r3, [r7, #4]
 80024ce:	681b      	ldr	r3, [r3, #0]
 80024d0:	f06f 0204 	mvn.w	r2, #4
 80024d4:	611a      	str	r2, [r3, #16]
 80024d6:	687b      	ldr	r3, [r7, #4]
 80024d8:	2202      	movs	r2, #2
 80024da:	771a      	strb	r2, [r3, #28]
 80024dc:	687b      	ldr	r3, [r7, #4]
 80024de:	681b      	ldr	r3, [r3, #0]
 80024e0:	699b      	ldr	r3, [r3, #24]
 80024e2:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80024e6:	2b00      	cmp	r3, #0
 80024e8:	d003      	beq.n	80024f2 <HAL_TIM_IRQHandler+0x9e>
 80024ea:	6878      	ldr	r0, [r7, #4]
 80024ec:	f000 f8c3 	bl	8002676 <HAL_TIM_IC_CaptureCallback>
 80024f0:	e005      	b.n	80024fe <HAL_TIM_IRQHandler+0xaa>
 80024f2:	6878      	ldr	r0, [r7, #4]
 80024f4:	f000 f8b6 	bl	8002664 <HAL_TIM_OC_DelayElapsedCallback>
 80024f8:	6878      	ldr	r0, [r7, #4]
 80024fa:	f000 f8c5 	bl	8002688 <HAL_TIM_PWM_PulseFinishedCallback>
 80024fe:	687b      	ldr	r3, [r7, #4]
 8002500:	2200      	movs	r2, #0
 8002502:	771a      	strb	r2, [r3, #28]
 8002504:	687b      	ldr	r3, [r7, #4]
 8002506:	681b      	ldr	r3, [r3, #0]
 8002508:	691b      	ldr	r3, [r3, #16]
 800250a:	f003 0308 	and.w	r3, r3, #8
 800250e:	2b08      	cmp	r3, #8
 8002510:	d122      	bne.n	8002558 <HAL_TIM_IRQHandler+0x104>
 8002512:	687b      	ldr	r3, [r7, #4]
 8002514:	681b      	ldr	r3, [r3, #0]
 8002516:	68db      	ldr	r3, [r3, #12]
 8002518:	f003 0308 	and.w	r3, r3, #8
 800251c:	2b08      	cmp	r3, #8
 800251e:	d11b      	bne.n	8002558 <HAL_TIM_IRQHandler+0x104>
 8002520:	687b      	ldr	r3, [r7, #4]
 8002522:	681b      	ldr	r3, [r3, #0]
 8002524:	f06f 0208 	mvn.w	r2, #8
 8002528:	611a      	str	r2, [r3, #16]
 800252a:	687b      	ldr	r3, [r7, #4]
 800252c:	2204      	movs	r2, #4
 800252e:	771a      	strb	r2, [r3, #28]
 8002530:	687b      	ldr	r3, [r7, #4]
 8002532:	681b      	ldr	r3, [r3, #0]
 8002534:	69db      	ldr	r3, [r3, #28]
 8002536:	f003 0303 	and.w	r3, r3, #3
 800253a:	2b00      	cmp	r3, #0
 800253c:	d003      	beq.n	8002546 <HAL_TIM_IRQHandler+0xf2>
 800253e:	6878      	ldr	r0, [r7, #4]
 8002540:	f000 f899 	bl	8002676 <HAL_TIM_IC_CaptureCallback>
 8002544:	e005      	b.n	8002552 <HAL_TIM_IRQHandler+0xfe>
 8002546:	6878      	ldr	r0, [r7, #4]
 8002548:	f000 f88c 	bl	8002664 <HAL_TIM_OC_DelayElapsedCallback>
 800254c:	6878      	ldr	r0, [r7, #4]
 800254e:	f000 f89b 	bl	8002688 <HAL_TIM_PWM_PulseFinishedCallback>
 8002552:	687b      	ldr	r3, [r7, #4]
 8002554:	2200      	movs	r2, #0
 8002556:	771a      	strb	r2, [r3, #28]
 8002558:	687b      	ldr	r3, [r7, #4]
 800255a:	681b      	ldr	r3, [r3, #0]
 800255c:	691b      	ldr	r3, [r3, #16]
 800255e:	f003 0310 	and.w	r3, r3, #16
 8002562:	2b10      	cmp	r3, #16
 8002564:	d122      	bne.n	80025ac <HAL_TIM_IRQHandler+0x158>
 8002566:	687b      	ldr	r3, [r7, #4]
 8002568:	681b      	ldr	r3, [r3, #0]
 800256a:	68db      	ldr	r3, [r3, #12]
 800256c:	f003 0310 	and.w	r3, r3, #16
 8002570:	2b10      	cmp	r3, #16
 8002572:	d11b      	bne.n	80025ac <HAL_TIM_IRQHandler+0x158>
 8002574:	687b      	ldr	r3, [r7, #4]
 8002576:	681b      	ldr	r3, [r3, #0]
 8002578:	f06f 0210 	mvn.w	r2, #16
 800257c:	611a      	str	r2, [r3, #16]
 800257e:	687b      	ldr	r3, [r7, #4]
 8002580:	2208      	movs	r2, #8
 8002582:	771a      	strb	r2, [r3, #28]
 8002584:	687b      	ldr	r3, [r7, #4]
 8002586:	681b      	ldr	r3, [r3, #0]
 8002588:	69db      	ldr	r3, [r3, #28]
 800258a:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800258e:	2b00      	cmp	r3, #0
 8002590:	d003      	beq.n	800259a <HAL_TIM_IRQHandler+0x146>
 8002592:	6878      	ldr	r0, [r7, #4]
 8002594:	f000 f86f 	bl	8002676 <HAL_TIM_IC_CaptureCallback>
 8002598:	e005      	b.n	80025a6 <HAL_TIM_IRQHandler+0x152>
 800259a:	6878      	ldr	r0, [r7, #4]
 800259c:	f000 f862 	bl	8002664 <HAL_TIM_OC_DelayElapsedCallback>
 80025a0:	6878      	ldr	r0, [r7, #4]
 80025a2:	f000 f871 	bl	8002688 <HAL_TIM_PWM_PulseFinishedCallback>
 80025a6:	687b      	ldr	r3, [r7, #4]
 80025a8:	2200      	movs	r2, #0
 80025aa:	771a      	strb	r2, [r3, #28]
 80025ac:	687b      	ldr	r3, [r7, #4]
 80025ae:	681b      	ldr	r3, [r3, #0]
 80025b0:	691b      	ldr	r3, [r3, #16]
 80025b2:	f003 0301 	and.w	r3, r3, #1
 80025b6:	2b01      	cmp	r3, #1
 80025b8:	d10e      	bne.n	80025d8 <HAL_TIM_IRQHandler+0x184>
 80025ba:	687b      	ldr	r3, [r7, #4]
 80025bc:	681b      	ldr	r3, [r3, #0]
 80025be:	68db      	ldr	r3, [r3, #12]
 80025c0:	f003 0301 	and.w	r3, r3, #1
 80025c4:	2b01      	cmp	r3, #1
 80025c6:	d107      	bne.n	80025d8 <HAL_TIM_IRQHandler+0x184>
 80025c8:	687b      	ldr	r3, [r7, #4]
 80025ca:	681b      	ldr	r3, [r3, #0]
 80025cc:	f06f 0201 	mvn.w	r2, #1
 80025d0:	611a      	str	r2, [r3, #16]
 80025d2:	6878      	ldr	r0, [r7, #4]
 80025d4:	f7fe fd80 	bl	80010d8 <HAL_TIM_PeriodElapsedCallback>
 80025d8:	687b      	ldr	r3, [r7, #4]
 80025da:	681b      	ldr	r3, [r3, #0]
 80025dc:	691b      	ldr	r3, [r3, #16]
 80025de:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80025e2:	2b80      	cmp	r3, #128	; 0x80
 80025e4:	d10e      	bne.n	8002604 <HAL_TIM_IRQHandler+0x1b0>
 80025e6:	687b      	ldr	r3, [r7, #4]
 80025e8:	681b      	ldr	r3, [r3, #0]
 80025ea:	68db      	ldr	r3, [r3, #12]
 80025ec:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80025f0:	2b80      	cmp	r3, #128	; 0x80
 80025f2:	d107      	bne.n	8002604 <HAL_TIM_IRQHandler+0x1b0>
 80025f4:	687b      	ldr	r3, [r7, #4]
 80025f6:	681b      	ldr	r3, [r3, #0]
 80025f8:	f06f 0280 	mvn.w	r2, #128	; 0x80
 80025fc:	611a      	str	r2, [r3, #16]
 80025fe:	6878      	ldr	r0, [r7, #4]
 8002600:	f000 f8bf 	bl	8002782 <HAL_TIMEx_BreakCallback>
 8002604:	687b      	ldr	r3, [r7, #4]
 8002606:	681b      	ldr	r3, [r3, #0]
 8002608:	691b      	ldr	r3, [r3, #16]
 800260a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800260e:	2b40      	cmp	r3, #64	; 0x40
 8002610:	d10e      	bne.n	8002630 <HAL_TIM_IRQHandler+0x1dc>
 8002612:	687b      	ldr	r3, [r7, #4]
 8002614:	681b      	ldr	r3, [r3, #0]
 8002616:	68db      	ldr	r3, [r3, #12]
 8002618:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800261c:	2b40      	cmp	r3, #64	; 0x40
 800261e:	d107      	bne.n	8002630 <HAL_TIM_IRQHandler+0x1dc>
 8002620:	687b      	ldr	r3, [r7, #4]
 8002622:	681b      	ldr	r3, [r3, #0]
 8002624:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8002628:	611a      	str	r2, [r3, #16]
 800262a:	6878      	ldr	r0, [r7, #4]
 800262c:	f000 f835 	bl	800269a <HAL_TIM_TriggerCallback>
 8002630:	687b      	ldr	r3, [r7, #4]
 8002632:	681b      	ldr	r3, [r3, #0]
 8002634:	691b      	ldr	r3, [r3, #16]
 8002636:	f003 0320 	and.w	r3, r3, #32
 800263a:	2b20      	cmp	r3, #32
 800263c:	d10e      	bne.n	800265c <HAL_TIM_IRQHandler+0x208>
 800263e:	687b      	ldr	r3, [r7, #4]
 8002640:	681b      	ldr	r3, [r3, #0]
 8002642:	68db      	ldr	r3, [r3, #12]
 8002644:	f003 0320 	and.w	r3, r3, #32
 8002648:	2b20      	cmp	r3, #32
 800264a:	d107      	bne.n	800265c <HAL_TIM_IRQHandler+0x208>
 800264c:	687b      	ldr	r3, [r7, #4]
 800264e:	681b      	ldr	r3, [r3, #0]
 8002650:	f06f 0220 	mvn.w	r2, #32
 8002654:	611a      	str	r2, [r3, #16]
 8002656:	6878      	ldr	r0, [r7, #4]
 8002658:	f000 f88a 	bl	8002770 <HAL_TIMEx_CommutCallback>
 800265c:	bf00      	nop
 800265e:	3708      	adds	r7, #8
 8002660:	46bd      	mov	sp, r7
 8002662:	bd80      	pop	{r7, pc}

08002664 <HAL_TIM_OC_DelayElapsedCallback>:
 8002664:	b480      	push	{r7}
 8002666:	b083      	sub	sp, #12
 8002668:	af00      	add	r7, sp, #0
 800266a:	6078      	str	r0, [r7, #4]
 800266c:	bf00      	nop
 800266e:	370c      	adds	r7, #12
 8002670:	46bd      	mov	sp, r7
 8002672:	bc80      	pop	{r7}
 8002674:	4770      	bx	lr

08002676 <HAL_TIM_IC_CaptureCallback>:
 8002676:	b480      	push	{r7}
 8002678:	b083      	sub	sp, #12
 800267a:	af00      	add	r7, sp, #0
 800267c:	6078      	str	r0, [r7, #4]
 800267e:	bf00      	nop
 8002680:	370c      	adds	r7, #12
 8002682:	46bd      	mov	sp, r7
 8002684:	bc80      	pop	{r7}
 8002686:	4770      	bx	lr

08002688 <HAL_TIM_PWM_PulseFinishedCallback>:
 8002688:	b480      	push	{r7}
 800268a:	b083      	sub	sp, #12
 800268c:	af00      	add	r7, sp, #0
 800268e:	6078      	str	r0, [r7, #4]
 8002690:	bf00      	nop
 8002692:	370c      	adds	r7, #12
 8002694:	46bd      	mov	sp, r7
 8002696:	bc80      	pop	{r7}
 8002698:	4770      	bx	lr

0800269a <HAL_TIM_TriggerCallback>:
 800269a:	b480      	push	{r7}
 800269c:	b083      	sub	sp, #12
 800269e:	af00      	add	r7, sp, #0
 80026a0:	6078      	str	r0, [r7, #4]
 80026a2:	bf00      	nop
 80026a4:	370c      	adds	r7, #12
 80026a6:	46bd      	mov	sp, r7
 80026a8:	bc80      	pop	{r7}
 80026aa:	4770      	bx	lr

080026ac <TIM_Base_SetConfig>:
 80026ac:	b480      	push	{r7}
 80026ae:	b085      	sub	sp, #20
 80026b0:	af00      	add	r7, sp, #0
 80026b2:	6078      	str	r0, [r7, #4]
 80026b4:	6039      	str	r1, [r7, #0]
 80026b6:	687b      	ldr	r3, [r7, #4]
 80026b8:	681b      	ldr	r3, [r3, #0]
 80026ba:	60fb      	str	r3, [r7, #12]
 80026bc:	687b      	ldr	r3, [r7, #4]
 80026be:	4a29      	ldr	r2, [pc, #164]	; (8002764 <TIM_Base_SetConfig+0xb8>)
 80026c0:	4293      	cmp	r3, r2
 80026c2:	d00b      	beq.n	80026dc <TIM_Base_SetConfig+0x30>
 80026c4:	687b      	ldr	r3, [r7, #4]
 80026c6:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80026ca:	d007      	beq.n	80026dc <TIM_Base_SetConfig+0x30>
 80026cc:	687b      	ldr	r3, [r7, #4]
 80026ce:	4a26      	ldr	r2, [pc, #152]	; (8002768 <TIM_Base_SetConfig+0xbc>)
 80026d0:	4293      	cmp	r3, r2
 80026d2:	d003      	beq.n	80026dc <TIM_Base_SetConfig+0x30>
 80026d4:	687b      	ldr	r3, [r7, #4]
 80026d6:	4a25      	ldr	r2, [pc, #148]	; (800276c <TIM_Base_SetConfig+0xc0>)
 80026d8:	4293      	cmp	r3, r2
 80026da:	d108      	bne.n	80026ee <TIM_Base_SetConfig+0x42>
 80026dc:	68fb      	ldr	r3, [r7, #12]
 80026de:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80026e2:	60fb      	str	r3, [r7, #12]
 80026e4:	683b      	ldr	r3, [r7, #0]
 80026e6:	685b      	ldr	r3, [r3, #4]
 80026e8:	68fa      	ldr	r2, [r7, #12]
 80026ea:	4313      	orrs	r3, r2
 80026ec:	60fb      	str	r3, [r7, #12]
 80026ee:	687b      	ldr	r3, [r7, #4]
 80026f0:	4a1c      	ldr	r2, [pc, #112]	; (8002764 <TIM_Base_SetConfig+0xb8>)
 80026f2:	4293      	cmp	r3, r2
 80026f4:	d00b      	beq.n	800270e <TIM_Base_SetConfig+0x62>
 80026f6:	687b      	ldr	r3, [r7, #4]
 80026f8:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80026fc:	d007      	beq.n	800270e <TIM_Base_SetConfig+0x62>
 80026fe:	687b      	ldr	r3, [r7, #4]
 8002700:	4a19      	ldr	r2, [pc, #100]	; (8002768 <TIM_Base_SetConfig+0xbc>)
 8002702:	4293      	cmp	r3, r2
 8002704:	d003      	beq.n	800270e <TIM_Base_SetConfig+0x62>
 8002706:	687b      	ldr	r3, [r7, #4]
 8002708:	4a18      	ldr	r2, [pc, #96]	; (800276c <TIM_Base_SetConfig+0xc0>)
 800270a:	4293      	cmp	r3, r2
 800270c:	d108      	bne.n	8002720 <TIM_Base_SetConfig+0x74>
 800270e:	68fb      	ldr	r3, [r7, #12]
 8002710:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8002714:	60fb      	str	r3, [r7, #12]
 8002716:	683b      	ldr	r3, [r7, #0]
 8002718:	68db      	ldr	r3, [r3, #12]
 800271a:	68fa      	ldr	r2, [r7, #12]
 800271c:	4313      	orrs	r3, r2
 800271e:	60fb      	str	r3, [r7, #12]
 8002720:	68fb      	ldr	r3, [r7, #12]
 8002722:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8002726:	683b      	ldr	r3, [r7, #0]
 8002728:	695b      	ldr	r3, [r3, #20]
 800272a:	4313      	orrs	r3, r2
 800272c:	60fb      	str	r3, [r7, #12]
 800272e:	687b      	ldr	r3, [r7, #4]
 8002730:	68fa      	ldr	r2, [r7, #12]
 8002732:	601a      	str	r2, [r3, #0]
 8002734:	683b      	ldr	r3, [r7, #0]
 8002736:	689a      	ldr	r2, [r3, #8]
 8002738:	687b      	ldr	r3, [r7, #4]
 800273a:	62da      	str	r2, [r3, #44]	; 0x2c
 800273c:	683b      	ldr	r3, [r7, #0]
 800273e:	681a      	ldr	r2, [r3, #0]
 8002740:	687b      	ldr	r3, [r7, #4]
 8002742:	629a      	str	r2, [r3, #40]	; 0x28
 8002744:	687b      	ldr	r3, [r7, #4]
 8002746:	4a07      	ldr	r2, [pc, #28]	; (8002764 <TIM_Base_SetConfig+0xb8>)
 8002748:	4293      	cmp	r3, r2
 800274a:	d103      	bne.n	8002754 <TIM_Base_SetConfig+0xa8>
 800274c:	683b      	ldr	r3, [r7, #0]
 800274e:	691a      	ldr	r2, [r3, #16]
 8002750:	687b      	ldr	r3, [r7, #4]
 8002752:	631a      	str	r2, [r3, #48]	; 0x30
 8002754:	687b      	ldr	r3, [r7, #4]
 8002756:	2201      	movs	r2, #1
 8002758:	615a      	str	r2, [r3, #20]
 800275a:	bf00      	nop
 800275c:	3714      	adds	r7, #20
 800275e:	46bd      	mov	sp, r7
 8002760:	bc80      	pop	{r7}
 8002762:	4770      	bx	lr
 8002764:	40012c00 	.word	0x40012c00
 8002768:	40000400 	.word	0x40000400
 800276c:	40000800 	.word	0x40000800

08002770 <HAL_TIMEx_CommutCallback>:
 8002770:	b480      	push	{r7}
 8002772:	b083      	sub	sp, #12
 8002774:	af00      	add	r7, sp, #0
 8002776:	6078      	str	r0, [r7, #4]
 8002778:	bf00      	nop
 800277a:	370c      	adds	r7, #12
 800277c:	46bd      	mov	sp, r7
 800277e:	bc80      	pop	{r7}
 8002780:	4770      	bx	lr

08002782 <HAL_TIMEx_BreakCallback>:
 8002782:	b480      	push	{r7}
 8002784:	b083      	sub	sp, #12
 8002786:	af00      	add	r7, sp, #0
 8002788:	6078      	str	r0, [r7, #4]
 800278a:	bf00      	nop
 800278c:	370c      	adds	r7, #12
 800278e:	46bd      	mov	sp, r7
 8002790:	bc80      	pop	{r7}
 8002792:	4770      	bx	lr

08002794 <HAL_UART_Init>:
 8002794:	b580      	push	{r7, lr}
 8002796:	b082      	sub	sp, #8
 8002798:	af00      	add	r7, sp, #0
 800279a:	6078      	str	r0, [r7, #4]
 800279c:	687b      	ldr	r3, [r7, #4]
 800279e:	2b00      	cmp	r3, #0
 80027a0:	d101      	bne.n	80027a6 <HAL_UART_Init+0x12>
 80027a2:	2301      	movs	r3, #1
 80027a4:	e03f      	b.n	8002826 <HAL_UART_Init+0x92>
 80027a6:	687b      	ldr	r3, [r7, #4]
 80027a8:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 80027ac:	b2db      	uxtb	r3, r3
 80027ae:	2b00      	cmp	r3, #0
 80027b0:	d106      	bne.n	80027c0 <HAL_UART_Init+0x2c>
 80027b2:	687b      	ldr	r3, [r7, #4]
 80027b4:	2200      	movs	r2, #0
 80027b6:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 80027ba:	6878      	ldr	r0, [r7, #4]
 80027bc:	f7fe fcda 	bl	8001174 <HAL_UART_MspInit>
 80027c0:	687b      	ldr	r3, [r7, #4]
 80027c2:	2224      	movs	r2, #36	; 0x24
 80027c4:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 80027c8:	687b      	ldr	r3, [r7, #4]
 80027ca:	681b      	ldr	r3, [r3, #0]
 80027cc:	68da      	ldr	r2, [r3, #12]
 80027ce:	687b      	ldr	r3, [r7, #4]
 80027d0:	681b      	ldr	r3, [r3, #0]
 80027d2:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80027d6:	60da      	str	r2, [r3, #12]
 80027d8:	6878      	ldr	r0, [r7, #4]
 80027da:	f000 fc21 	bl	8003020 <UART_SetConfig>
 80027de:	687b      	ldr	r3, [r7, #4]
 80027e0:	681b      	ldr	r3, [r3, #0]
 80027e2:	691a      	ldr	r2, [r3, #16]
 80027e4:	687b      	ldr	r3, [r7, #4]
 80027e6:	681b      	ldr	r3, [r3, #0]
 80027e8:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 80027ec:	611a      	str	r2, [r3, #16]
 80027ee:	687b      	ldr	r3, [r7, #4]
 80027f0:	681b      	ldr	r3, [r3, #0]
 80027f2:	695a      	ldr	r2, [r3, #20]
 80027f4:	687b      	ldr	r3, [r7, #4]
 80027f6:	681b      	ldr	r3, [r3, #0]
 80027f8:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 80027fc:	615a      	str	r2, [r3, #20]
 80027fe:	687b      	ldr	r3, [r7, #4]
 8002800:	681b      	ldr	r3, [r3, #0]
 8002802:	68da      	ldr	r2, [r3, #12]
 8002804:	687b      	ldr	r3, [r7, #4]
 8002806:	681b      	ldr	r3, [r3, #0]
 8002808:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800280c:	60da      	str	r2, [r3, #12]
 800280e:	687b      	ldr	r3, [r7, #4]
 8002810:	2200      	movs	r2, #0
 8002812:	63da      	str	r2, [r3, #60]	; 0x3c
 8002814:	687b      	ldr	r3, [r7, #4]
 8002816:	2220      	movs	r2, #32
 8002818:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 800281c:	687b      	ldr	r3, [r7, #4]
 800281e:	2220      	movs	r2, #32
 8002820:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 8002824:	2300      	movs	r3, #0
 8002826:	4618      	mov	r0, r3
 8002828:	3708      	adds	r7, #8
 800282a:	46bd      	mov	sp, r7
 800282c:	bd80      	pop	{r7, pc}

0800282e <HAL_UART_Transmit>:
 800282e:	b580      	push	{r7, lr}
 8002830:	b08a      	sub	sp, #40	; 0x28
 8002832:	af02      	add	r7, sp, #8
 8002834:	60f8      	str	r0, [r7, #12]
 8002836:	60b9      	str	r1, [r7, #8]
 8002838:	603b      	str	r3, [r7, #0]
 800283a:	4613      	mov	r3, r2
 800283c:	80fb      	strh	r3, [r7, #6]
 800283e:	2300      	movs	r3, #0
 8002840:	617b      	str	r3, [r7, #20]
 8002842:	68fb      	ldr	r3, [r7, #12]
 8002844:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 8002848:	b2db      	uxtb	r3, r3
 800284a:	2b20      	cmp	r3, #32
 800284c:	d17c      	bne.n	8002948 <HAL_UART_Transmit+0x11a>
 800284e:	68bb      	ldr	r3, [r7, #8]
 8002850:	2b00      	cmp	r3, #0
 8002852:	d002      	beq.n	800285a <HAL_UART_Transmit+0x2c>
 8002854:	88fb      	ldrh	r3, [r7, #6]
 8002856:	2b00      	cmp	r3, #0
 8002858:	d101      	bne.n	800285e <HAL_UART_Transmit+0x30>
 800285a:	2301      	movs	r3, #1
 800285c:	e075      	b.n	800294a <HAL_UART_Transmit+0x11c>
 800285e:	68fb      	ldr	r3, [r7, #12]
 8002860:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8002864:	2b01      	cmp	r3, #1
 8002866:	d101      	bne.n	800286c <HAL_UART_Transmit+0x3e>
 8002868:	2302      	movs	r3, #2
 800286a:	e06e      	b.n	800294a <HAL_UART_Transmit+0x11c>
 800286c:	68fb      	ldr	r3, [r7, #12]
 800286e:	2201      	movs	r2, #1
 8002870:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8002874:	68fb      	ldr	r3, [r7, #12]
 8002876:	2200      	movs	r2, #0
 8002878:	63da      	str	r2, [r3, #60]	; 0x3c
 800287a:	68fb      	ldr	r3, [r7, #12]
 800287c:	2221      	movs	r2, #33	; 0x21
 800287e:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8002882:	f7fe fe15 	bl	80014b0 <HAL_GetTick>
 8002886:	6178      	str	r0, [r7, #20]
 8002888:	68fb      	ldr	r3, [r7, #12]
 800288a:	88fa      	ldrh	r2, [r7, #6]
 800288c:	849a      	strh	r2, [r3, #36]	; 0x24
 800288e:	68fb      	ldr	r3, [r7, #12]
 8002890:	88fa      	ldrh	r2, [r7, #6]
 8002892:	84da      	strh	r2, [r3, #38]	; 0x26
 8002894:	68fb      	ldr	r3, [r7, #12]
 8002896:	689b      	ldr	r3, [r3, #8]
 8002898:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800289c:	d108      	bne.n	80028b0 <HAL_UART_Transmit+0x82>
 800289e:	68fb      	ldr	r3, [r7, #12]
 80028a0:	691b      	ldr	r3, [r3, #16]
 80028a2:	2b00      	cmp	r3, #0
 80028a4:	d104      	bne.n	80028b0 <HAL_UART_Transmit+0x82>
 80028a6:	2300      	movs	r3, #0
 80028a8:	61fb      	str	r3, [r7, #28]
 80028aa:	68bb      	ldr	r3, [r7, #8]
 80028ac:	61bb      	str	r3, [r7, #24]
 80028ae:	e003      	b.n	80028b8 <HAL_UART_Transmit+0x8a>
 80028b0:	68bb      	ldr	r3, [r7, #8]
 80028b2:	61fb      	str	r3, [r7, #28]
 80028b4:	2300      	movs	r3, #0
 80028b6:	61bb      	str	r3, [r7, #24]
 80028b8:	68fb      	ldr	r3, [r7, #12]
 80028ba:	2200      	movs	r2, #0
 80028bc:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 80028c0:	e02a      	b.n	8002918 <HAL_UART_Transmit+0xea>
 80028c2:	683b      	ldr	r3, [r7, #0]
 80028c4:	9300      	str	r3, [sp, #0]
 80028c6:	697b      	ldr	r3, [r7, #20]
 80028c8:	2200      	movs	r2, #0
 80028ca:	2180      	movs	r1, #128	; 0x80
 80028cc:	68f8      	ldr	r0, [r7, #12]
 80028ce:	f000 fa45 	bl	8002d5c <UART_WaitOnFlagUntilTimeout>
 80028d2:	4603      	mov	r3, r0
 80028d4:	2b00      	cmp	r3, #0
 80028d6:	d001      	beq.n	80028dc <HAL_UART_Transmit+0xae>
 80028d8:	2303      	movs	r3, #3
 80028da:	e036      	b.n	800294a <HAL_UART_Transmit+0x11c>
 80028dc:	69fb      	ldr	r3, [r7, #28]
 80028de:	2b00      	cmp	r3, #0
 80028e0:	d10b      	bne.n	80028fa <HAL_UART_Transmit+0xcc>
 80028e2:	69bb      	ldr	r3, [r7, #24]
 80028e4:	881b      	ldrh	r3, [r3, #0]
 80028e6:	461a      	mov	r2, r3
 80028e8:	68fb      	ldr	r3, [r7, #12]
 80028ea:	681b      	ldr	r3, [r3, #0]
 80028ec:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80028f0:	605a      	str	r2, [r3, #4]
 80028f2:	69bb      	ldr	r3, [r7, #24]
 80028f4:	3302      	adds	r3, #2
 80028f6:	61bb      	str	r3, [r7, #24]
 80028f8:	e007      	b.n	800290a <HAL_UART_Transmit+0xdc>
 80028fa:	69fb      	ldr	r3, [r7, #28]
 80028fc:	781a      	ldrb	r2, [r3, #0]
 80028fe:	68fb      	ldr	r3, [r7, #12]
 8002900:	681b      	ldr	r3, [r3, #0]
 8002902:	605a      	str	r2, [r3, #4]
 8002904:	69fb      	ldr	r3, [r7, #28]
 8002906:	3301      	adds	r3, #1
 8002908:	61fb      	str	r3, [r7, #28]
 800290a:	68fb      	ldr	r3, [r7, #12]
 800290c:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800290e:	b29b      	uxth	r3, r3
 8002910:	3b01      	subs	r3, #1
 8002912:	b29a      	uxth	r2, r3
 8002914:	68fb      	ldr	r3, [r7, #12]
 8002916:	84da      	strh	r2, [r3, #38]	; 0x26
 8002918:	68fb      	ldr	r3, [r7, #12]
 800291a:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800291c:	b29b      	uxth	r3, r3
 800291e:	2b00      	cmp	r3, #0
 8002920:	d1cf      	bne.n	80028c2 <HAL_UART_Transmit+0x94>
 8002922:	683b      	ldr	r3, [r7, #0]
 8002924:	9300      	str	r3, [sp, #0]
 8002926:	697b      	ldr	r3, [r7, #20]
 8002928:	2200      	movs	r2, #0
 800292a:	2140      	movs	r1, #64	; 0x40
 800292c:	68f8      	ldr	r0, [r7, #12]
 800292e:	f000 fa15 	bl	8002d5c <UART_WaitOnFlagUntilTimeout>
 8002932:	4603      	mov	r3, r0
 8002934:	2b00      	cmp	r3, #0
 8002936:	d001      	beq.n	800293c <HAL_UART_Transmit+0x10e>
 8002938:	2303      	movs	r3, #3
 800293a:	e006      	b.n	800294a <HAL_UART_Transmit+0x11c>
 800293c:	68fb      	ldr	r3, [r7, #12]
 800293e:	2220      	movs	r2, #32
 8002940:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8002944:	2300      	movs	r3, #0
 8002946:	e000      	b.n	800294a <HAL_UART_Transmit+0x11c>
 8002948:	2302      	movs	r3, #2
 800294a:	4618      	mov	r0, r3
 800294c:	3720      	adds	r7, #32
 800294e:	46bd      	mov	sp, r7
 8002950:	bd80      	pop	{r7, pc}

08002952 <HAL_UART_Receive>:
 8002952:	b580      	push	{r7, lr}
 8002954:	b08a      	sub	sp, #40	; 0x28
 8002956:	af02      	add	r7, sp, #8
 8002958:	60f8      	str	r0, [r7, #12]
 800295a:	60b9      	str	r1, [r7, #8]
 800295c:	603b      	str	r3, [r7, #0]
 800295e:	4613      	mov	r3, r2
 8002960:	80fb      	strh	r3, [r7, #6]
 8002962:	2300      	movs	r3, #0
 8002964:	617b      	str	r3, [r7, #20]
 8002966:	68fb      	ldr	r3, [r7, #12]
 8002968:	f893 303a 	ldrb.w	r3, [r3, #58]	; 0x3a
 800296c:	b2db      	uxtb	r3, r3
 800296e:	2b20      	cmp	r3, #32
 8002970:	f040 8089 	bne.w	8002a86 <HAL_UART_Receive+0x134>
 8002974:	68bb      	ldr	r3, [r7, #8]
 8002976:	2b00      	cmp	r3, #0
 8002978:	d002      	beq.n	8002980 <HAL_UART_Receive+0x2e>
 800297a:	88fb      	ldrh	r3, [r7, #6]
 800297c:	2b00      	cmp	r3, #0
 800297e:	d101      	bne.n	8002984 <HAL_UART_Receive+0x32>
 8002980:	2301      	movs	r3, #1
 8002982:	e081      	b.n	8002a88 <HAL_UART_Receive+0x136>
 8002984:	68fb      	ldr	r3, [r7, #12]
 8002986:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 800298a:	2b01      	cmp	r3, #1
 800298c:	d101      	bne.n	8002992 <HAL_UART_Receive+0x40>
 800298e:	2302      	movs	r3, #2
 8002990:	e07a      	b.n	8002a88 <HAL_UART_Receive+0x136>
 8002992:	68fb      	ldr	r3, [r7, #12]
 8002994:	2201      	movs	r2, #1
 8002996:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 800299a:	68fb      	ldr	r3, [r7, #12]
 800299c:	2200      	movs	r2, #0
 800299e:	63da      	str	r2, [r3, #60]	; 0x3c
 80029a0:	68fb      	ldr	r3, [r7, #12]
 80029a2:	2222      	movs	r2, #34	; 0x22
 80029a4:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 80029a8:	f7fe fd82 	bl	80014b0 <HAL_GetTick>
 80029ac:	6178      	str	r0, [r7, #20]
 80029ae:	68fb      	ldr	r3, [r7, #12]
 80029b0:	88fa      	ldrh	r2, [r7, #6]
 80029b2:	859a      	strh	r2, [r3, #44]	; 0x2c
 80029b4:	68fb      	ldr	r3, [r7, #12]
 80029b6:	88fa      	ldrh	r2, [r7, #6]
 80029b8:	85da      	strh	r2, [r3, #46]	; 0x2e
 80029ba:	68fb      	ldr	r3, [r7, #12]
 80029bc:	689b      	ldr	r3, [r3, #8]
 80029be:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80029c2:	d108      	bne.n	80029d6 <HAL_UART_Receive+0x84>
 80029c4:	68fb      	ldr	r3, [r7, #12]
 80029c6:	691b      	ldr	r3, [r3, #16]
 80029c8:	2b00      	cmp	r3, #0
 80029ca:	d104      	bne.n	80029d6 <HAL_UART_Receive+0x84>
 80029cc:	2300      	movs	r3, #0
 80029ce:	61fb      	str	r3, [r7, #28]
 80029d0:	68bb      	ldr	r3, [r7, #8]
 80029d2:	61bb      	str	r3, [r7, #24]
 80029d4:	e003      	b.n	80029de <HAL_UART_Receive+0x8c>
 80029d6:	68bb      	ldr	r3, [r7, #8]
 80029d8:	61fb      	str	r3, [r7, #28]
 80029da:	2300      	movs	r3, #0
 80029dc:	61bb      	str	r3, [r7, #24]
 80029de:	68fb      	ldr	r3, [r7, #12]
 80029e0:	2200      	movs	r2, #0
 80029e2:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 80029e6:	e043      	b.n	8002a70 <HAL_UART_Receive+0x11e>
 80029e8:	683b      	ldr	r3, [r7, #0]
 80029ea:	9300      	str	r3, [sp, #0]
 80029ec:	697b      	ldr	r3, [r7, #20]
 80029ee:	2200      	movs	r2, #0
 80029f0:	2120      	movs	r1, #32
 80029f2:	68f8      	ldr	r0, [r7, #12]
 80029f4:	f000 f9b2 	bl	8002d5c <UART_WaitOnFlagUntilTimeout>
 80029f8:	4603      	mov	r3, r0
 80029fa:	2b00      	cmp	r3, #0
 80029fc:	d001      	beq.n	8002a02 <HAL_UART_Receive+0xb0>
 80029fe:	2303      	movs	r3, #3
 8002a00:	e042      	b.n	8002a88 <HAL_UART_Receive+0x136>
 8002a02:	69fb      	ldr	r3, [r7, #28]
 8002a04:	2b00      	cmp	r3, #0
 8002a06:	d10c      	bne.n	8002a22 <HAL_UART_Receive+0xd0>
 8002a08:	68fb      	ldr	r3, [r7, #12]
 8002a0a:	681b      	ldr	r3, [r3, #0]
 8002a0c:	685b      	ldr	r3, [r3, #4]
 8002a0e:	b29b      	uxth	r3, r3
 8002a10:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8002a14:	b29a      	uxth	r2, r3
 8002a16:	69bb      	ldr	r3, [r7, #24]
 8002a18:	801a      	strh	r2, [r3, #0]
 8002a1a:	69bb      	ldr	r3, [r7, #24]
 8002a1c:	3302      	adds	r3, #2
 8002a1e:	61bb      	str	r3, [r7, #24]
 8002a20:	e01f      	b.n	8002a62 <HAL_UART_Receive+0x110>
 8002a22:	68fb      	ldr	r3, [r7, #12]
 8002a24:	689b      	ldr	r3, [r3, #8]
 8002a26:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8002a2a:	d007      	beq.n	8002a3c <HAL_UART_Receive+0xea>
 8002a2c:	68fb      	ldr	r3, [r7, #12]
 8002a2e:	689b      	ldr	r3, [r3, #8]
 8002a30:	2b00      	cmp	r3, #0
 8002a32:	d10a      	bne.n	8002a4a <HAL_UART_Receive+0xf8>
 8002a34:	68fb      	ldr	r3, [r7, #12]
 8002a36:	691b      	ldr	r3, [r3, #16]
 8002a38:	2b00      	cmp	r3, #0
 8002a3a:	d106      	bne.n	8002a4a <HAL_UART_Receive+0xf8>
 8002a3c:	68fb      	ldr	r3, [r7, #12]
 8002a3e:	681b      	ldr	r3, [r3, #0]
 8002a40:	685b      	ldr	r3, [r3, #4]
 8002a42:	b2da      	uxtb	r2, r3
 8002a44:	69fb      	ldr	r3, [r7, #28]
 8002a46:	701a      	strb	r2, [r3, #0]
 8002a48:	e008      	b.n	8002a5c <HAL_UART_Receive+0x10a>
 8002a4a:	68fb      	ldr	r3, [r7, #12]
 8002a4c:	681b      	ldr	r3, [r3, #0]
 8002a4e:	685b      	ldr	r3, [r3, #4]
 8002a50:	b2db      	uxtb	r3, r3
 8002a52:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8002a56:	b2da      	uxtb	r2, r3
 8002a58:	69fb      	ldr	r3, [r7, #28]
 8002a5a:	701a      	strb	r2, [r3, #0]
 8002a5c:	69fb      	ldr	r3, [r7, #28]
 8002a5e:	3301      	adds	r3, #1
 8002a60:	61fb      	str	r3, [r7, #28]
 8002a62:	68fb      	ldr	r3, [r7, #12]
 8002a64:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8002a66:	b29b      	uxth	r3, r3
 8002a68:	3b01      	subs	r3, #1
 8002a6a:	b29a      	uxth	r2, r3
 8002a6c:	68fb      	ldr	r3, [r7, #12]
 8002a6e:	85da      	strh	r2, [r3, #46]	; 0x2e
 8002a70:	68fb      	ldr	r3, [r7, #12]
 8002a72:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8002a74:	b29b      	uxth	r3, r3
 8002a76:	2b00      	cmp	r3, #0
 8002a78:	d1b6      	bne.n	80029e8 <HAL_UART_Receive+0x96>
 8002a7a:	68fb      	ldr	r3, [r7, #12]
 8002a7c:	2220      	movs	r2, #32
 8002a7e:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 8002a82:	2300      	movs	r3, #0
 8002a84:	e000      	b.n	8002a88 <HAL_UART_Receive+0x136>
 8002a86:	2302      	movs	r3, #2
 8002a88:	4618      	mov	r0, r3
 8002a8a:	3720      	adds	r7, #32
 8002a8c:	46bd      	mov	sp, r7
 8002a8e:	bd80      	pop	{r7, pc}

08002a90 <HAL_UART_Receive_IT>:
 8002a90:	b480      	push	{r7}
 8002a92:	b085      	sub	sp, #20
 8002a94:	af00      	add	r7, sp, #0
 8002a96:	60f8      	str	r0, [r7, #12]
 8002a98:	60b9      	str	r1, [r7, #8]
 8002a9a:	4613      	mov	r3, r2
 8002a9c:	80fb      	strh	r3, [r7, #6]
 8002a9e:	68fb      	ldr	r3, [r7, #12]
 8002aa0:	f893 303a 	ldrb.w	r3, [r3, #58]	; 0x3a
 8002aa4:	b2db      	uxtb	r3, r3
 8002aa6:	2b20      	cmp	r3, #32
 8002aa8:	d140      	bne.n	8002b2c <HAL_UART_Receive_IT+0x9c>
 8002aaa:	68bb      	ldr	r3, [r7, #8]
 8002aac:	2b00      	cmp	r3, #0
 8002aae:	d002      	beq.n	8002ab6 <HAL_UART_Receive_IT+0x26>
 8002ab0:	88fb      	ldrh	r3, [r7, #6]
 8002ab2:	2b00      	cmp	r3, #0
 8002ab4:	d101      	bne.n	8002aba <HAL_UART_Receive_IT+0x2a>
 8002ab6:	2301      	movs	r3, #1
 8002ab8:	e039      	b.n	8002b2e <HAL_UART_Receive_IT+0x9e>
 8002aba:	68fb      	ldr	r3, [r7, #12]
 8002abc:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8002ac0:	2b01      	cmp	r3, #1
 8002ac2:	d101      	bne.n	8002ac8 <HAL_UART_Receive_IT+0x38>
 8002ac4:	2302      	movs	r3, #2
 8002ac6:	e032      	b.n	8002b2e <HAL_UART_Receive_IT+0x9e>
 8002ac8:	68fb      	ldr	r3, [r7, #12]
 8002aca:	2201      	movs	r2, #1
 8002acc:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8002ad0:	68fb      	ldr	r3, [r7, #12]
 8002ad2:	68ba      	ldr	r2, [r7, #8]
 8002ad4:	629a      	str	r2, [r3, #40]	; 0x28
 8002ad6:	68fb      	ldr	r3, [r7, #12]
 8002ad8:	88fa      	ldrh	r2, [r7, #6]
 8002ada:	859a      	strh	r2, [r3, #44]	; 0x2c
 8002adc:	68fb      	ldr	r3, [r7, #12]
 8002ade:	88fa      	ldrh	r2, [r7, #6]
 8002ae0:	85da      	strh	r2, [r3, #46]	; 0x2e
 8002ae2:	68fb      	ldr	r3, [r7, #12]
 8002ae4:	2200      	movs	r2, #0
 8002ae6:	63da      	str	r2, [r3, #60]	; 0x3c
 8002ae8:	68fb      	ldr	r3, [r7, #12]
 8002aea:	2222      	movs	r2, #34	; 0x22
 8002aec:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 8002af0:	68fb      	ldr	r3, [r7, #12]
 8002af2:	2200      	movs	r2, #0
 8002af4:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8002af8:	68fb      	ldr	r3, [r7, #12]
 8002afa:	681b      	ldr	r3, [r3, #0]
 8002afc:	68da      	ldr	r2, [r3, #12]
 8002afe:	68fb      	ldr	r3, [r7, #12]
 8002b00:	681b      	ldr	r3, [r3, #0]
 8002b02:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8002b06:	60da      	str	r2, [r3, #12]
 8002b08:	68fb      	ldr	r3, [r7, #12]
 8002b0a:	681b      	ldr	r3, [r3, #0]
 8002b0c:	695a      	ldr	r2, [r3, #20]
 8002b0e:	68fb      	ldr	r3, [r7, #12]
 8002b10:	681b      	ldr	r3, [r3, #0]
 8002b12:	f042 0201 	orr.w	r2, r2, #1
 8002b16:	615a      	str	r2, [r3, #20]
 8002b18:	68fb      	ldr	r3, [r7, #12]
 8002b1a:	681b      	ldr	r3, [r3, #0]
 8002b1c:	68da      	ldr	r2, [r3, #12]
 8002b1e:	68fb      	ldr	r3, [r7, #12]
 8002b20:	681b      	ldr	r3, [r3, #0]
 8002b22:	f042 0220 	orr.w	r2, r2, #32
 8002b26:	60da      	str	r2, [r3, #12]
 8002b28:	2300      	movs	r3, #0
 8002b2a:	e000      	b.n	8002b2e <HAL_UART_Receive_IT+0x9e>
 8002b2c:	2302      	movs	r3, #2
 8002b2e:	4618      	mov	r0, r3
 8002b30:	3714      	adds	r7, #20
 8002b32:	46bd      	mov	sp, r7
 8002b34:	bc80      	pop	{r7}
 8002b36:	4770      	bx	lr

08002b38 <HAL_UART_IRQHandler>:
 8002b38:	b580      	push	{r7, lr}
 8002b3a:	b088      	sub	sp, #32
 8002b3c:	af00      	add	r7, sp, #0
 8002b3e:	6078      	str	r0, [r7, #4]
 8002b40:	687b      	ldr	r3, [r7, #4]
 8002b42:	681b      	ldr	r3, [r3, #0]
 8002b44:	681b      	ldr	r3, [r3, #0]
 8002b46:	61fb      	str	r3, [r7, #28]
 8002b48:	687b      	ldr	r3, [r7, #4]
 8002b4a:	681b      	ldr	r3, [r3, #0]
 8002b4c:	68db      	ldr	r3, [r3, #12]
 8002b4e:	61bb      	str	r3, [r7, #24]
 8002b50:	687b      	ldr	r3, [r7, #4]
 8002b52:	681b      	ldr	r3, [r3, #0]
 8002b54:	695b      	ldr	r3, [r3, #20]
 8002b56:	617b      	str	r3, [r7, #20]
 8002b58:	2300      	movs	r3, #0
 8002b5a:	613b      	str	r3, [r7, #16]
 8002b5c:	2300      	movs	r3, #0
 8002b5e:	60fb      	str	r3, [r7, #12]
 8002b60:	69fb      	ldr	r3, [r7, #28]
 8002b62:	f003 030f 	and.w	r3, r3, #15
 8002b66:	613b      	str	r3, [r7, #16]
 8002b68:	693b      	ldr	r3, [r7, #16]
 8002b6a:	2b00      	cmp	r3, #0
 8002b6c:	d10d      	bne.n	8002b8a <HAL_UART_IRQHandler+0x52>
 8002b6e:	69fb      	ldr	r3, [r7, #28]
 8002b70:	f003 0320 	and.w	r3, r3, #32
 8002b74:	2b00      	cmp	r3, #0
 8002b76:	d008      	beq.n	8002b8a <HAL_UART_IRQHandler+0x52>
 8002b78:	69bb      	ldr	r3, [r7, #24]
 8002b7a:	f003 0320 	and.w	r3, r3, #32
 8002b7e:	2b00      	cmp	r3, #0
 8002b80:	d003      	beq.n	8002b8a <HAL_UART_IRQHandler+0x52>
 8002b82:	6878      	ldr	r0, [r7, #4]
 8002b84:	f000 f9cc 	bl	8002f20 <UART_Receive_IT>
 8002b88:	e0d1      	b.n	8002d2e <HAL_UART_IRQHandler+0x1f6>
 8002b8a:	693b      	ldr	r3, [r7, #16]
 8002b8c:	2b00      	cmp	r3, #0
 8002b8e:	f000 80b0 	beq.w	8002cf2 <HAL_UART_IRQHandler+0x1ba>
 8002b92:	697b      	ldr	r3, [r7, #20]
 8002b94:	f003 0301 	and.w	r3, r3, #1
 8002b98:	2b00      	cmp	r3, #0
 8002b9a:	d105      	bne.n	8002ba8 <HAL_UART_IRQHandler+0x70>
 8002b9c:	69bb      	ldr	r3, [r7, #24]
 8002b9e:	f403 7390 	and.w	r3, r3, #288	; 0x120
 8002ba2:	2b00      	cmp	r3, #0
 8002ba4:	f000 80a5 	beq.w	8002cf2 <HAL_UART_IRQHandler+0x1ba>
 8002ba8:	69fb      	ldr	r3, [r7, #28]
 8002baa:	f003 0301 	and.w	r3, r3, #1
 8002bae:	2b00      	cmp	r3, #0
 8002bb0:	d00a      	beq.n	8002bc8 <HAL_UART_IRQHandler+0x90>
 8002bb2:	69bb      	ldr	r3, [r7, #24]
 8002bb4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002bb8:	2b00      	cmp	r3, #0
 8002bba:	d005      	beq.n	8002bc8 <HAL_UART_IRQHandler+0x90>
 8002bbc:	687b      	ldr	r3, [r7, #4]
 8002bbe:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002bc0:	f043 0201 	orr.w	r2, r3, #1
 8002bc4:	687b      	ldr	r3, [r7, #4]
 8002bc6:	63da      	str	r2, [r3, #60]	; 0x3c
 8002bc8:	69fb      	ldr	r3, [r7, #28]
 8002bca:	f003 0304 	and.w	r3, r3, #4
 8002bce:	2b00      	cmp	r3, #0
 8002bd0:	d00a      	beq.n	8002be8 <HAL_UART_IRQHandler+0xb0>
 8002bd2:	697b      	ldr	r3, [r7, #20]
 8002bd4:	f003 0301 	and.w	r3, r3, #1
 8002bd8:	2b00      	cmp	r3, #0
 8002bda:	d005      	beq.n	8002be8 <HAL_UART_IRQHandler+0xb0>
 8002bdc:	687b      	ldr	r3, [r7, #4]
 8002bde:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002be0:	f043 0202 	orr.w	r2, r3, #2
 8002be4:	687b      	ldr	r3, [r7, #4]
 8002be6:	63da      	str	r2, [r3, #60]	; 0x3c
 8002be8:	69fb      	ldr	r3, [r7, #28]
 8002bea:	f003 0302 	and.w	r3, r3, #2
 8002bee:	2b00      	cmp	r3, #0
 8002bf0:	d00a      	beq.n	8002c08 <HAL_UART_IRQHandler+0xd0>
 8002bf2:	697b      	ldr	r3, [r7, #20]
 8002bf4:	f003 0301 	and.w	r3, r3, #1
 8002bf8:	2b00      	cmp	r3, #0
 8002bfa:	d005      	beq.n	8002c08 <HAL_UART_IRQHandler+0xd0>
 8002bfc:	687b      	ldr	r3, [r7, #4]
 8002bfe:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002c00:	f043 0204 	orr.w	r2, r3, #4
 8002c04:	687b      	ldr	r3, [r7, #4]
 8002c06:	63da      	str	r2, [r3, #60]	; 0x3c
 8002c08:	69fb      	ldr	r3, [r7, #28]
 8002c0a:	f003 0308 	and.w	r3, r3, #8
 8002c0e:	2b00      	cmp	r3, #0
 8002c10:	d00f      	beq.n	8002c32 <HAL_UART_IRQHandler+0xfa>
 8002c12:	69bb      	ldr	r3, [r7, #24]
 8002c14:	f003 0320 	and.w	r3, r3, #32
 8002c18:	2b00      	cmp	r3, #0
 8002c1a:	d104      	bne.n	8002c26 <HAL_UART_IRQHandler+0xee>
 8002c1c:	697b      	ldr	r3, [r7, #20]
 8002c1e:	f003 0301 	and.w	r3, r3, #1
 8002c22:	2b00      	cmp	r3, #0
 8002c24:	d005      	beq.n	8002c32 <HAL_UART_IRQHandler+0xfa>
 8002c26:	687b      	ldr	r3, [r7, #4]
 8002c28:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002c2a:	f043 0208 	orr.w	r2, r3, #8
 8002c2e:	687b      	ldr	r3, [r7, #4]
 8002c30:	63da      	str	r2, [r3, #60]	; 0x3c
 8002c32:	687b      	ldr	r3, [r7, #4]
 8002c34:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002c36:	2b00      	cmp	r3, #0
 8002c38:	d078      	beq.n	8002d2c <HAL_UART_IRQHandler+0x1f4>
 8002c3a:	69fb      	ldr	r3, [r7, #28]
 8002c3c:	f003 0320 	and.w	r3, r3, #32
 8002c40:	2b00      	cmp	r3, #0
 8002c42:	d007      	beq.n	8002c54 <HAL_UART_IRQHandler+0x11c>
 8002c44:	69bb      	ldr	r3, [r7, #24]
 8002c46:	f003 0320 	and.w	r3, r3, #32
 8002c4a:	2b00      	cmp	r3, #0
 8002c4c:	d002      	beq.n	8002c54 <HAL_UART_IRQHandler+0x11c>
 8002c4e:	6878      	ldr	r0, [r7, #4]
 8002c50:	f000 f966 	bl	8002f20 <UART_Receive_IT>
 8002c54:	687b      	ldr	r3, [r7, #4]
 8002c56:	681b      	ldr	r3, [r3, #0]
 8002c58:	695b      	ldr	r3, [r3, #20]
 8002c5a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002c5e:	2b00      	cmp	r3, #0
 8002c60:	bf14      	ite	ne
 8002c62:	2301      	movne	r3, #1
 8002c64:	2300      	moveq	r3, #0
 8002c66:	b2db      	uxtb	r3, r3
 8002c68:	60fb      	str	r3, [r7, #12]
 8002c6a:	687b      	ldr	r3, [r7, #4]
 8002c6c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002c6e:	f003 0308 	and.w	r3, r3, #8
 8002c72:	2b00      	cmp	r3, #0
 8002c74:	d102      	bne.n	8002c7c <HAL_UART_IRQHandler+0x144>
 8002c76:	68fb      	ldr	r3, [r7, #12]
 8002c78:	2b00      	cmp	r3, #0
 8002c7a:	d031      	beq.n	8002ce0 <HAL_UART_IRQHandler+0x1a8>
 8002c7c:	6878      	ldr	r0, [r7, #4]
 8002c7e:	f000 f8b7 	bl	8002df0 <UART_EndRxTransfer>
 8002c82:	687b      	ldr	r3, [r7, #4]
 8002c84:	681b      	ldr	r3, [r3, #0]
 8002c86:	695b      	ldr	r3, [r3, #20]
 8002c88:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002c8c:	2b00      	cmp	r3, #0
 8002c8e:	d023      	beq.n	8002cd8 <HAL_UART_IRQHandler+0x1a0>
 8002c90:	687b      	ldr	r3, [r7, #4]
 8002c92:	681b      	ldr	r3, [r3, #0]
 8002c94:	695a      	ldr	r2, [r3, #20]
 8002c96:	687b      	ldr	r3, [r7, #4]
 8002c98:	681b      	ldr	r3, [r3, #0]
 8002c9a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8002c9e:	615a      	str	r2, [r3, #20]
 8002ca0:	687b      	ldr	r3, [r7, #4]
 8002ca2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002ca4:	2b00      	cmp	r3, #0
 8002ca6:	d013      	beq.n	8002cd0 <HAL_UART_IRQHandler+0x198>
 8002ca8:	687b      	ldr	r3, [r7, #4]
 8002caa:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002cac:	4a21      	ldr	r2, [pc, #132]	; (8002d34 <HAL_UART_IRQHandler+0x1fc>)
 8002cae:	635a      	str	r2, [r3, #52]	; 0x34
 8002cb0:	687b      	ldr	r3, [r7, #4]
 8002cb2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002cb4:	4618      	mov	r0, r3
 8002cb6:	f7fe fce5 	bl	8001684 <HAL_DMA_Abort_IT>
 8002cba:	4603      	mov	r3, r0
 8002cbc:	2b00      	cmp	r3, #0
 8002cbe:	d016      	beq.n	8002cee <HAL_UART_IRQHandler+0x1b6>
 8002cc0:	687b      	ldr	r3, [r7, #4]
 8002cc2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002cc4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002cc6:	687a      	ldr	r2, [r7, #4]
 8002cc8:	6b52      	ldr	r2, [r2, #52]	; 0x34
 8002cca:	4610      	mov	r0, r2
 8002ccc:	4798      	blx	r3
 8002cce:	e00e      	b.n	8002cee <HAL_UART_IRQHandler+0x1b6>
 8002cd0:	6878      	ldr	r0, [r7, #4]
 8002cd2:	f000 f83a 	bl	8002d4a <HAL_UART_ErrorCallback>
 8002cd6:	e00a      	b.n	8002cee <HAL_UART_IRQHandler+0x1b6>
 8002cd8:	6878      	ldr	r0, [r7, #4]
 8002cda:	f000 f836 	bl	8002d4a <HAL_UART_ErrorCallback>
 8002cde:	e006      	b.n	8002cee <HAL_UART_IRQHandler+0x1b6>
 8002ce0:	6878      	ldr	r0, [r7, #4]
 8002ce2:	f000 f832 	bl	8002d4a <HAL_UART_ErrorCallback>
 8002ce6:	687b      	ldr	r3, [r7, #4]
 8002ce8:	2200      	movs	r2, #0
 8002cea:	63da      	str	r2, [r3, #60]	; 0x3c
 8002cec:	e01e      	b.n	8002d2c <HAL_UART_IRQHandler+0x1f4>
 8002cee:	bf00      	nop
 8002cf0:	e01c      	b.n	8002d2c <HAL_UART_IRQHandler+0x1f4>
 8002cf2:	69fb      	ldr	r3, [r7, #28]
 8002cf4:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002cf8:	2b00      	cmp	r3, #0
 8002cfa:	d008      	beq.n	8002d0e <HAL_UART_IRQHandler+0x1d6>
 8002cfc:	69bb      	ldr	r3, [r7, #24]
 8002cfe:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002d02:	2b00      	cmp	r3, #0
 8002d04:	d003      	beq.n	8002d0e <HAL_UART_IRQHandler+0x1d6>
 8002d06:	6878      	ldr	r0, [r7, #4]
 8002d08:	f000 f8a3 	bl	8002e52 <UART_Transmit_IT>
 8002d0c:	e00f      	b.n	8002d2e <HAL_UART_IRQHandler+0x1f6>
 8002d0e:	69fb      	ldr	r3, [r7, #28]
 8002d10:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002d14:	2b00      	cmp	r3, #0
 8002d16:	d00a      	beq.n	8002d2e <HAL_UART_IRQHandler+0x1f6>
 8002d18:	69bb      	ldr	r3, [r7, #24]
 8002d1a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002d1e:	2b00      	cmp	r3, #0
 8002d20:	d005      	beq.n	8002d2e <HAL_UART_IRQHandler+0x1f6>
 8002d22:	6878      	ldr	r0, [r7, #4]
 8002d24:	f000 f8e4 	bl	8002ef0 <UART_EndTransmit_IT>
 8002d28:	bf00      	nop
 8002d2a:	e000      	b.n	8002d2e <HAL_UART_IRQHandler+0x1f6>
 8002d2c:	bf00      	nop
 8002d2e:	3720      	adds	r7, #32
 8002d30:	46bd      	mov	sp, r7
 8002d32:	bd80      	pop	{r7, pc}
 8002d34:	08002e2b 	.word	0x08002e2b

08002d38 <HAL_UART_TxCpltCallback>:
 8002d38:	b480      	push	{r7}
 8002d3a:	b083      	sub	sp, #12
 8002d3c:	af00      	add	r7, sp, #0
 8002d3e:	6078      	str	r0, [r7, #4]
 8002d40:	bf00      	nop
 8002d42:	370c      	adds	r7, #12
 8002d44:	46bd      	mov	sp, r7
 8002d46:	bc80      	pop	{r7}
 8002d48:	4770      	bx	lr

08002d4a <HAL_UART_ErrorCallback>:
 8002d4a:	b480      	push	{r7}
 8002d4c:	b083      	sub	sp, #12
 8002d4e:	af00      	add	r7, sp, #0
 8002d50:	6078      	str	r0, [r7, #4]
 8002d52:	bf00      	nop
 8002d54:	370c      	adds	r7, #12
 8002d56:	46bd      	mov	sp, r7
 8002d58:	bc80      	pop	{r7}
 8002d5a:	4770      	bx	lr

08002d5c <UART_WaitOnFlagUntilTimeout>:
 8002d5c:	b580      	push	{r7, lr}
 8002d5e:	b084      	sub	sp, #16
 8002d60:	af00      	add	r7, sp, #0
 8002d62:	60f8      	str	r0, [r7, #12]
 8002d64:	60b9      	str	r1, [r7, #8]
 8002d66:	603b      	str	r3, [r7, #0]
 8002d68:	4613      	mov	r3, r2
 8002d6a:	71fb      	strb	r3, [r7, #7]
 8002d6c:	e02c      	b.n	8002dc8 <UART_WaitOnFlagUntilTimeout+0x6c>
 8002d6e:	69bb      	ldr	r3, [r7, #24]
 8002d70:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8002d74:	d028      	beq.n	8002dc8 <UART_WaitOnFlagUntilTimeout+0x6c>
 8002d76:	69bb      	ldr	r3, [r7, #24]
 8002d78:	2b00      	cmp	r3, #0
 8002d7a:	d007      	beq.n	8002d8c <UART_WaitOnFlagUntilTimeout+0x30>
 8002d7c:	f7fe fb98 	bl	80014b0 <HAL_GetTick>
 8002d80:	4602      	mov	r2, r0
 8002d82:	683b      	ldr	r3, [r7, #0]
 8002d84:	1ad3      	subs	r3, r2, r3
 8002d86:	69ba      	ldr	r2, [r7, #24]
 8002d88:	429a      	cmp	r2, r3
 8002d8a:	d21d      	bcs.n	8002dc8 <UART_WaitOnFlagUntilTimeout+0x6c>
 8002d8c:	68fb      	ldr	r3, [r7, #12]
 8002d8e:	681b      	ldr	r3, [r3, #0]
 8002d90:	68da      	ldr	r2, [r3, #12]
 8002d92:	68fb      	ldr	r3, [r7, #12]
 8002d94:	681b      	ldr	r3, [r3, #0]
 8002d96:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 8002d9a:	60da      	str	r2, [r3, #12]
 8002d9c:	68fb      	ldr	r3, [r7, #12]
 8002d9e:	681b      	ldr	r3, [r3, #0]
 8002da0:	695a      	ldr	r2, [r3, #20]
 8002da2:	68fb      	ldr	r3, [r7, #12]
 8002da4:	681b      	ldr	r3, [r3, #0]
 8002da6:	f022 0201 	bic.w	r2, r2, #1
 8002daa:	615a      	str	r2, [r3, #20]
 8002dac:	68fb      	ldr	r3, [r7, #12]
 8002dae:	2220      	movs	r2, #32
 8002db0:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8002db4:	68fb      	ldr	r3, [r7, #12]
 8002db6:	2220      	movs	r2, #32
 8002db8:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 8002dbc:	68fb      	ldr	r3, [r7, #12]
 8002dbe:	2200      	movs	r2, #0
 8002dc0:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8002dc4:	2303      	movs	r3, #3
 8002dc6:	e00f      	b.n	8002de8 <UART_WaitOnFlagUntilTimeout+0x8c>
 8002dc8:	68fb      	ldr	r3, [r7, #12]
 8002dca:	681b      	ldr	r3, [r3, #0]
 8002dcc:	681a      	ldr	r2, [r3, #0]
 8002dce:	68bb      	ldr	r3, [r7, #8]
 8002dd0:	4013      	ands	r3, r2
 8002dd2:	68ba      	ldr	r2, [r7, #8]
 8002dd4:	429a      	cmp	r2, r3
 8002dd6:	bf0c      	ite	eq
 8002dd8:	2301      	moveq	r3, #1
 8002dda:	2300      	movne	r3, #0
 8002ddc:	b2db      	uxtb	r3, r3
 8002dde:	461a      	mov	r2, r3
 8002de0:	79fb      	ldrb	r3, [r7, #7]
 8002de2:	429a      	cmp	r2, r3
 8002de4:	d0c3      	beq.n	8002d6e <UART_WaitOnFlagUntilTimeout+0x12>
 8002de6:	2300      	movs	r3, #0
 8002de8:	4618      	mov	r0, r3
 8002dea:	3710      	adds	r7, #16
 8002dec:	46bd      	mov	sp, r7
 8002dee:	bd80      	pop	{r7, pc}

08002df0 <UART_EndRxTransfer>:
 8002df0:	b480      	push	{r7}
 8002df2:	b083      	sub	sp, #12
 8002df4:	af00      	add	r7, sp, #0
 8002df6:	6078      	str	r0, [r7, #4]
 8002df8:	687b      	ldr	r3, [r7, #4]
 8002dfa:	681b      	ldr	r3, [r3, #0]
 8002dfc:	68da      	ldr	r2, [r3, #12]
 8002dfe:	687b      	ldr	r3, [r7, #4]
 8002e00:	681b      	ldr	r3, [r3, #0]
 8002e02:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 8002e06:	60da      	str	r2, [r3, #12]
 8002e08:	687b      	ldr	r3, [r7, #4]
 8002e0a:	681b      	ldr	r3, [r3, #0]
 8002e0c:	695a      	ldr	r2, [r3, #20]
 8002e0e:	687b      	ldr	r3, [r7, #4]
 8002e10:	681b      	ldr	r3, [r3, #0]
 8002e12:	f022 0201 	bic.w	r2, r2, #1
 8002e16:	615a      	str	r2, [r3, #20]
 8002e18:	687b      	ldr	r3, [r7, #4]
 8002e1a:	2220      	movs	r2, #32
 8002e1c:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 8002e20:	bf00      	nop
 8002e22:	370c      	adds	r7, #12
 8002e24:	46bd      	mov	sp, r7
 8002e26:	bc80      	pop	{r7}
 8002e28:	4770      	bx	lr

08002e2a <UART_DMAAbortOnError>:
 8002e2a:	b580      	push	{r7, lr}
 8002e2c:	b084      	sub	sp, #16
 8002e2e:	af00      	add	r7, sp, #0
 8002e30:	6078      	str	r0, [r7, #4]
 8002e32:	687b      	ldr	r3, [r7, #4]
 8002e34:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002e36:	60fb      	str	r3, [r7, #12]
 8002e38:	68fb      	ldr	r3, [r7, #12]
 8002e3a:	2200      	movs	r2, #0
 8002e3c:	85da      	strh	r2, [r3, #46]	; 0x2e
 8002e3e:	68fb      	ldr	r3, [r7, #12]
 8002e40:	2200      	movs	r2, #0
 8002e42:	84da      	strh	r2, [r3, #38]	; 0x26
 8002e44:	68f8      	ldr	r0, [r7, #12]
 8002e46:	f7ff ff80 	bl	8002d4a <HAL_UART_ErrorCallback>
 8002e4a:	bf00      	nop
 8002e4c:	3710      	adds	r7, #16
 8002e4e:	46bd      	mov	sp, r7
 8002e50:	bd80      	pop	{r7, pc}

08002e52 <UART_Transmit_IT>:
 8002e52:	b480      	push	{r7}
 8002e54:	b085      	sub	sp, #20
 8002e56:	af00      	add	r7, sp, #0
 8002e58:	6078      	str	r0, [r7, #4]
 8002e5a:	687b      	ldr	r3, [r7, #4]
 8002e5c:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 8002e60:	b2db      	uxtb	r3, r3
 8002e62:	2b21      	cmp	r3, #33	; 0x21
 8002e64:	d13e      	bne.n	8002ee4 <UART_Transmit_IT+0x92>
 8002e66:	687b      	ldr	r3, [r7, #4]
 8002e68:	689b      	ldr	r3, [r3, #8]
 8002e6a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8002e6e:	d114      	bne.n	8002e9a <UART_Transmit_IT+0x48>
 8002e70:	687b      	ldr	r3, [r7, #4]
 8002e72:	691b      	ldr	r3, [r3, #16]
 8002e74:	2b00      	cmp	r3, #0
 8002e76:	d110      	bne.n	8002e9a <UART_Transmit_IT+0x48>
 8002e78:	687b      	ldr	r3, [r7, #4]
 8002e7a:	6a1b      	ldr	r3, [r3, #32]
 8002e7c:	60fb      	str	r3, [r7, #12]
 8002e7e:	68fb      	ldr	r3, [r7, #12]
 8002e80:	881b      	ldrh	r3, [r3, #0]
 8002e82:	461a      	mov	r2, r3
 8002e84:	687b      	ldr	r3, [r7, #4]
 8002e86:	681b      	ldr	r3, [r3, #0]
 8002e88:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8002e8c:	605a      	str	r2, [r3, #4]
 8002e8e:	687b      	ldr	r3, [r7, #4]
 8002e90:	6a1b      	ldr	r3, [r3, #32]
 8002e92:	1c9a      	adds	r2, r3, #2
 8002e94:	687b      	ldr	r3, [r7, #4]
 8002e96:	621a      	str	r2, [r3, #32]
 8002e98:	e008      	b.n	8002eac <UART_Transmit_IT+0x5a>
 8002e9a:	687b      	ldr	r3, [r7, #4]
 8002e9c:	6a1b      	ldr	r3, [r3, #32]
 8002e9e:	1c59      	adds	r1, r3, #1
 8002ea0:	687a      	ldr	r2, [r7, #4]
 8002ea2:	6211      	str	r1, [r2, #32]
 8002ea4:	781a      	ldrb	r2, [r3, #0]
 8002ea6:	687b      	ldr	r3, [r7, #4]
 8002ea8:	681b      	ldr	r3, [r3, #0]
 8002eaa:	605a      	str	r2, [r3, #4]
 8002eac:	687b      	ldr	r3, [r7, #4]
 8002eae:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8002eb0:	b29b      	uxth	r3, r3
 8002eb2:	3b01      	subs	r3, #1
 8002eb4:	b29b      	uxth	r3, r3
 8002eb6:	687a      	ldr	r2, [r7, #4]
 8002eb8:	4619      	mov	r1, r3
 8002eba:	84d1      	strh	r1, [r2, #38]	; 0x26
 8002ebc:	2b00      	cmp	r3, #0
 8002ebe:	d10f      	bne.n	8002ee0 <UART_Transmit_IT+0x8e>
 8002ec0:	687b      	ldr	r3, [r7, #4]
 8002ec2:	681b      	ldr	r3, [r3, #0]
 8002ec4:	68da      	ldr	r2, [r3, #12]
 8002ec6:	687b      	ldr	r3, [r7, #4]
 8002ec8:	681b      	ldr	r3, [r3, #0]
 8002eca:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8002ece:	60da      	str	r2, [r3, #12]
 8002ed0:	687b      	ldr	r3, [r7, #4]
 8002ed2:	681b      	ldr	r3, [r3, #0]
 8002ed4:	68da      	ldr	r2, [r3, #12]
 8002ed6:	687b      	ldr	r3, [r7, #4]
 8002ed8:	681b      	ldr	r3, [r3, #0]
 8002eda:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8002ede:	60da      	str	r2, [r3, #12]
 8002ee0:	2300      	movs	r3, #0
 8002ee2:	e000      	b.n	8002ee6 <UART_Transmit_IT+0x94>
 8002ee4:	2302      	movs	r3, #2
 8002ee6:	4618      	mov	r0, r3
 8002ee8:	3714      	adds	r7, #20
 8002eea:	46bd      	mov	sp, r7
 8002eec:	bc80      	pop	{r7}
 8002eee:	4770      	bx	lr

08002ef0 <UART_EndTransmit_IT>:
 8002ef0:	b580      	push	{r7, lr}
 8002ef2:	b082      	sub	sp, #8
 8002ef4:	af00      	add	r7, sp, #0
 8002ef6:	6078      	str	r0, [r7, #4]
 8002ef8:	687b      	ldr	r3, [r7, #4]
 8002efa:	681b      	ldr	r3, [r3, #0]
 8002efc:	68da      	ldr	r2, [r3, #12]
 8002efe:	687b      	ldr	r3, [r7, #4]
 8002f00:	681b      	ldr	r3, [r3, #0]
 8002f02:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8002f06:	60da      	str	r2, [r3, #12]
 8002f08:	687b      	ldr	r3, [r7, #4]
 8002f0a:	2220      	movs	r2, #32
 8002f0c:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8002f10:	6878      	ldr	r0, [r7, #4]
 8002f12:	f7ff ff11 	bl	8002d38 <HAL_UART_TxCpltCallback>
 8002f16:	2300      	movs	r3, #0
 8002f18:	4618      	mov	r0, r3
 8002f1a:	3708      	adds	r7, #8
 8002f1c:	46bd      	mov	sp, r7
 8002f1e:	bd80      	pop	{r7, pc}

08002f20 <UART_Receive_IT>:
 8002f20:	b580      	push	{r7, lr}
 8002f22:	b084      	sub	sp, #16
 8002f24:	af00      	add	r7, sp, #0
 8002f26:	6078      	str	r0, [r7, #4]
 8002f28:	687b      	ldr	r3, [r7, #4]
 8002f2a:	f893 303a 	ldrb.w	r3, [r3, #58]	; 0x3a
 8002f2e:	b2db      	uxtb	r3, r3
 8002f30:	2b22      	cmp	r3, #34	; 0x22
 8002f32:	d170      	bne.n	8003016 <UART_Receive_IT+0xf6>
 8002f34:	687b      	ldr	r3, [r7, #4]
 8002f36:	689b      	ldr	r3, [r3, #8]
 8002f38:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8002f3c:	d117      	bne.n	8002f6e <UART_Receive_IT+0x4e>
 8002f3e:	687b      	ldr	r3, [r7, #4]
 8002f40:	691b      	ldr	r3, [r3, #16]
 8002f42:	2b00      	cmp	r3, #0
 8002f44:	d113      	bne.n	8002f6e <UART_Receive_IT+0x4e>
 8002f46:	2300      	movs	r3, #0
 8002f48:	60fb      	str	r3, [r7, #12]
 8002f4a:	687b      	ldr	r3, [r7, #4]
 8002f4c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002f4e:	60bb      	str	r3, [r7, #8]
 8002f50:	687b      	ldr	r3, [r7, #4]
 8002f52:	681b      	ldr	r3, [r3, #0]
 8002f54:	685b      	ldr	r3, [r3, #4]
 8002f56:	b29b      	uxth	r3, r3
 8002f58:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8002f5c:	b29a      	uxth	r2, r3
 8002f5e:	68bb      	ldr	r3, [r7, #8]
 8002f60:	801a      	strh	r2, [r3, #0]
 8002f62:	687b      	ldr	r3, [r7, #4]
 8002f64:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002f66:	1c9a      	adds	r2, r3, #2
 8002f68:	687b      	ldr	r3, [r7, #4]
 8002f6a:	629a      	str	r2, [r3, #40]	; 0x28
 8002f6c:	e026      	b.n	8002fbc <UART_Receive_IT+0x9c>
 8002f6e:	687b      	ldr	r3, [r7, #4]
 8002f70:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002f72:	60fb      	str	r3, [r7, #12]
 8002f74:	2300      	movs	r3, #0
 8002f76:	60bb      	str	r3, [r7, #8]
 8002f78:	687b      	ldr	r3, [r7, #4]
 8002f7a:	689b      	ldr	r3, [r3, #8]
 8002f7c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8002f80:	d007      	beq.n	8002f92 <UART_Receive_IT+0x72>
 8002f82:	687b      	ldr	r3, [r7, #4]
 8002f84:	689b      	ldr	r3, [r3, #8]
 8002f86:	2b00      	cmp	r3, #0
 8002f88:	d10a      	bne.n	8002fa0 <UART_Receive_IT+0x80>
 8002f8a:	687b      	ldr	r3, [r7, #4]
 8002f8c:	691b      	ldr	r3, [r3, #16]
 8002f8e:	2b00      	cmp	r3, #0
 8002f90:	d106      	bne.n	8002fa0 <UART_Receive_IT+0x80>
 8002f92:	687b      	ldr	r3, [r7, #4]
 8002f94:	681b      	ldr	r3, [r3, #0]
 8002f96:	685b      	ldr	r3, [r3, #4]
 8002f98:	b2da      	uxtb	r2, r3
 8002f9a:	68fb      	ldr	r3, [r7, #12]
 8002f9c:	701a      	strb	r2, [r3, #0]
 8002f9e:	e008      	b.n	8002fb2 <UART_Receive_IT+0x92>
 8002fa0:	687b      	ldr	r3, [r7, #4]
 8002fa2:	681b      	ldr	r3, [r3, #0]
 8002fa4:	685b      	ldr	r3, [r3, #4]
 8002fa6:	b2db      	uxtb	r3, r3
 8002fa8:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8002fac:	b2da      	uxtb	r2, r3
 8002fae:	68fb      	ldr	r3, [r7, #12]
 8002fb0:	701a      	strb	r2, [r3, #0]
 8002fb2:	687b      	ldr	r3, [r7, #4]
 8002fb4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002fb6:	1c5a      	adds	r2, r3, #1
 8002fb8:	687b      	ldr	r3, [r7, #4]
 8002fba:	629a      	str	r2, [r3, #40]	; 0x28
 8002fbc:	687b      	ldr	r3, [r7, #4]
 8002fbe:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8002fc0:	b29b      	uxth	r3, r3
 8002fc2:	3b01      	subs	r3, #1
 8002fc4:	b29b      	uxth	r3, r3
 8002fc6:	687a      	ldr	r2, [r7, #4]
 8002fc8:	4619      	mov	r1, r3
 8002fca:	85d1      	strh	r1, [r2, #46]	; 0x2e
 8002fcc:	2b00      	cmp	r3, #0
 8002fce:	d120      	bne.n	8003012 <UART_Receive_IT+0xf2>
 8002fd0:	687b      	ldr	r3, [r7, #4]
 8002fd2:	681b      	ldr	r3, [r3, #0]
 8002fd4:	68da      	ldr	r2, [r3, #12]
 8002fd6:	687b      	ldr	r3, [r7, #4]
 8002fd8:	681b      	ldr	r3, [r3, #0]
 8002fda:	f022 0220 	bic.w	r2, r2, #32
 8002fde:	60da      	str	r2, [r3, #12]
 8002fe0:	687b      	ldr	r3, [r7, #4]
 8002fe2:	681b      	ldr	r3, [r3, #0]
 8002fe4:	68da      	ldr	r2, [r3, #12]
 8002fe6:	687b      	ldr	r3, [r7, #4]
 8002fe8:	681b      	ldr	r3, [r3, #0]
 8002fea:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8002fee:	60da      	str	r2, [r3, #12]
 8002ff0:	687b      	ldr	r3, [r7, #4]
 8002ff2:	681b      	ldr	r3, [r3, #0]
 8002ff4:	695a      	ldr	r2, [r3, #20]
 8002ff6:	687b      	ldr	r3, [r7, #4]
 8002ff8:	681b      	ldr	r3, [r3, #0]
 8002ffa:	f022 0201 	bic.w	r2, r2, #1
 8002ffe:	615a      	str	r2, [r3, #20]
 8003000:	687b      	ldr	r3, [r7, #4]
 8003002:	2220      	movs	r2, #32
 8003004:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 8003008:	6878      	ldr	r0, [r7, #4]
 800300a:	f7fd f8cb 	bl	80001a4 <HAL_UART_RxCpltCallback>
 800300e:	2300      	movs	r3, #0
 8003010:	e002      	b.n	8003018 <UART_Receive_IT+0xf8>
 8003012:	2300      	movs	r3, #0
 8003014:	e000      	b.n	8003018 <UART_Receive_IT+0xf8>
 8003016:	2302      	movs	r3, #2
 8003018:	4618      	mov	r0, r3
 800301a:	3710      	adds	r7, #16
 800301c:	46bd      	mov	sp, r7
 800301e:	bd80      	pop	{r7, pc}

08003020 <UART_SetConfig>:
 8003020:	b580      	push	{r7, lr}
 8003022:	b084      	sub	sp, #16
 8003024:	af00      	add	r7, sp, #0
 8003026:	6078      	str	r0, [r7, #4]
 8003028:	687b      	ldr	r3, [r7, #4]
 800302a:	681b      	ldr	r3, [r3, #0]
 800302c:	691b      	ldr	r3, [r3, #16]
 800302e:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 8003032:	687b      	ldr	r3, [r7, #4]
 8003034:	68da      	ldr	r2, [r3, #12]
 8003036:	687b      	ldr	r3, [r7, #4]
 8003038:	681b      	ldr	r3, [r3, #0]
 800303a:	430a      	orrs	r2, r1
 800303c:	611a      	str	r2, [r3, #16]
 800303e:	687b      	ldr	r3, [r7, #4]
 8003040:	689a      	ldr	r2, [r3, #8]
 8003042:	687b      	ldr	r3, [r7, #4]
 8003044:	691b      	ldr	r3, [r3, #16]
 8003046:	431a      	orrs	r2, r3
 8003048:	687b      	ldr	r3, [r7, #4]
 800304a:	695b      	ldr	r3, [r3, #20]
 800304c:	4313      	orrs	r3, r2
 800304e:	60bb      	str	r3, [r7, #8]
 8003050:	687b      	ldr	r3, [r7, #4]
 8003052:	681b      	ldr	r3, [r3, #0]
 8003054:	68db      	ldr	r3, [r3, #12]
 8003056:	f423 53b0 	bic.w	r3, r3, #5632	; 0x1600
 800305a:	f023 030c 	bic.w	r3, r3, #12
 800305e:	687a      	ldr	r2, [r7, #4]
 8003060:	6812      	ldr	r2, [r2, #0]
 8003062:	68b9      	ldr	r1, [r7, #8]
 8003064:	430b      	orrs	r3, r1
 8003066:	60d3      	str	r3, [r2, #12]
 8003068:	687b      	ldr	r3, [r7, #4]
 800306a:	681b      	ldr	r3, [r3, #0]
 800306c:	695b      	ldr	r3, [r3, #20]
 800306e:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 8003072:	687b      	ldr	r3, [r7, #4]
 8003074:	699a      	ldr	r2, [r3, #24]
 8003076:	687b      	ldr	r3, [r7, #4]
 8003078:	681b      	ldr	r3, [r3, #0]
 800307a:	430a      	orrs	r2, r1
 800307c:	615a      	str	r2, [r3, #20]
 800307e:	687b      	ldr	r3, [r7, #4]
 8003080:	681b      	ldr	r3, [r3, #0]
 8003082:	4a2c      	ldr	r2, [pc, #176]	; (8003134 <UART_SetConfig+0x114>)
 8003084:	4293      	cmp	r3, r2
 8003086:	d103      	bne.n	8003090 <UART_SetConfig+0x70>
 8003088:	f7ff f8d8 	bl	800223c <HAL_RCC_GetPCLK2Freq>
 800308c:	60f8      	str	r0, [r7, #12]
 800308e:	e002      	b.n	8003096 <UART_SetConfig+0x76>
 8003090:	f7ff f8c0 	bl	8002214 <HAL_RCC_GetPCLK1Freq>
 8003094:	60f8      	str	r0, [r7, #12]
 8003096:	68fa      	ldr	r2, [r7, #12]
 8003098:	4613      	mov	r3, r2
 800309a:	009b      	lsls	r3, r3, #2
 800309c:	4413      	add	r3, r2
 800309e:	009a      	lsls	r2, r3, #2
 80030a0:	441a      	add	r2, r3
 80030a2:	687b      	ldr	r3, [r7, #4]
 80030a4:	685b      	ldr	r3, [r3, #4]
 80030a6:	009b      	lsls	r3, r3, #2
 80030a8:	fbb2 f3f3 	udiv	r3, r2, r3
 80030ac:	4a22      	ldr	r2, [pc, #136]	; (8003138 <UART_SetConfig+0x118>)
 80030ae:	fba2 2303 	umull	r2, r3, r2, r3
 80030b2:	095b      	lsrs	r3, r3, #5
 80030b4:	0119      	lsls	r1, r3, #4
 80030b6:	68fa      	ldr	r2, [r7, #12]
 80030b8:	4613      	mov	r3, r2
 80030ba:	009b      	lsls	r3, r3, #2
 80030bc:	4413      	add	r3, r2
 80030be:	009a      	lsls	r2, r3, #2
 80030c0:	441a      	add	r2, r3
 80030c2:	687b      	ldr	r3, [r7, #4]
 80030c4:	685b      	ldr	r3, [r3, #4]
 80030c6:	009b      	lsls	r3, r3, #2
 80030c8:	fbb2 f2f3 	udiv	r2, r2, r3
 80030cc:	4b1a      	ldr	r3, [pc, #104]	; (8003138 <UART_SetConfig+0x118>)
 80030ce:	fba3 0302 	umull	r0, r3, r3, r2
 80030d2:	095b      	lsrs	r3, r3, #5
 80030d4:	2064      	movs	r0, #100	; 0x64
 80030d6:	fb00 f303 	mul.w	r3, r0, r3
 80030da:	1ad3      	subs	r3, r2, r3
 80030dc:	011b      	lsls	r3, r3, #4
 80030de:	3332      	adds	r3, #50	; 0x32
 80030e0:	4a15      	ldr	r2, [pc, #84]	; (8003138 <UART_SetConfig+0x118>)
 80030e2:	fba2 2303 	umull	r2, r3, r2, r3
 80030e6:	095b      	lsrs	r3, r3, #5
 80030e8:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 80030ec:	4419      	add	r1, r3
 80030ee:	68fa      	ldr	r2, [r7, #12]
 80030f0:	4613      	mov	r3, r2
 80030f2:	009b      	lsls	r3, r3, #2
 80030f4:	4413      	add	r3, r2
 80030f6:	009a      	lsls	r2, r3, #2
 80030f8:	441a      	add	r2, r3
 80030fa:	687b      	ldr	r3, [r7, #4]
 80030fc:	685b      	ldr	r3, [r3, #4]
 80030fe:	009b      	lsls	r3, r3, #2
 8003100:	fbb2 f2f3 	udiv	r2, r2, r3
 8003104:	4b0c      	ldr	r3, [pc, #48]	; (8003138 <UART_SetConfig+0x118>)
 8003106:	fba3 0302 	umull	r0, r3, r3, r2
 800310a:	095b      	lsrs	r3, r3, #5
 800310c:	2064      	movs	r0, #100	; 0x64
 800310e:	fb00 f303 	mul.w	r3, r0, r3
 8003112:	1ad3      	subs	r3, r2, r3
 8003114:	011b      	lsls	r3, r3, #4
 8003116:	3332      	adds	r3, #50	; 0x32
 8003118:	4a07      	ldr	r2, [pc, #28]	; (8003138 <UART_SetConfig+0x118>)
 800311a:	fba2 2303 	umull	r2, r3, r2, r3
 800311e:	095b      	lsrs	r3, r3, #5
 8003120:	f003 020f 	and.w	r2, r3, #15
 8003124:	687b      	ldr	r3, [r7, #4]
 8003126:	681b      	ldr	r3, [r3, #0]
 8003128:	440a      	add	r2, r1
 800312a:	609a      	str	r2, [r3, #8]
 800312c:	bf00      	nop
 800312e:	3710      	adds	r7, #16
 8003130:	46bd      	mov	sp, r7
 8003132:	bd80      	pop	{r7, pc}
 8003134:	40013800 	.word	0x40013800
 8003138:	51eb851f 	.word	0x51eb851f

0800313c <vListInitialise>:
 800313c:	b480      	push	{r7}
 800313e:	b083      	sub	sp, #12
 8003140:	af00      	add	r7, sp, #0
 8003142:	6078      	str	r0, [r7, #4]
 8003144:	687b      	ldr	r3, [r7, #4]
 8003146:	f103 0208 	add.w	r2, r3, #8
 800314a:	687b      	ldr	r3, [r7, #4]
 800314c:	605a      	str	r2, [r3, #4]
 800314e:	687b      	ldr	r3, [r7, #4]
 8003150:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8003154:	609a      	str	r2, [r3, #8]
 8003156:	687b      	ldr	r3, [r7, #4]
 8003158:	f103 0208 	add.w	r2, r3, #8
 800315c:	687b      	ldr	r3, [r7, #4]
 800315e:	60da      	str	r2, [r3, #12]
 8003160:	687b      	ldr	r3, [r7, #4]
 8003162:	f103 0208 	add.w	r2, r3, #8
 8003166:	687b      	ldr	r3, [r7, #4]
 8003168:	611a      	str	r2, [r3, #16]
 800316a:	687b      	ldr	r3, [r7, #4]
 800316c:	2200      	movs	r2, #0
 800316e:	601a      	str	r2, [r3, #0]
 8003170:	bf00      	nop
 8003172:	370c      	adds	r7, #12
 8003174:	46bd      	mov	sp, r7
 8003176:	bc80      	pop	{r7}
 8003178:	4770      	bx	lr

0800317a <vListInitialiseItem>:
 800317a:	b480      	push	{r7}
 800317c:	b083      	sub	sp, #12
 800317e:	af00      	add	r7, sp, #0
 8003180:	6078      	str	r0, [r7, #4]
 8003182:	687b      	ldr	r3, [r7, #4]
 8003184:	2200      	movs	r2, #0
 8003186:	611a      	str	r2, [r3, #16]
 8003188:	bf00      	nop
 800318a:	370c      	adds	r7, #12
 800318c:	46bd      	mov	sp, r7
 800318e:	bc80      	pop	{r7}
 8003190:	4770      	bx	lr

08003192 <vListInsertEnd>:
 8003192:	b480      	push	{r7}
 8003194:	b085      	sub	sp, #20
 8003196:	af00      	add	r7, sp, #0
 8003198:	6078      	str	r0, [r7, #4]
 800319a:	6039      	str	r1, [r7, #0]
 800319c:	687b      	ldr	r3, [r7, #4]
 800319e:	685b      	ldr	r3, [r3, #4]
 80031a0:	60fb      	str	r3, [r7, #12]
 80031a2:	683b      	ldr	r3, [r7, #0]
 80031a4:	68fa      	ldr	r2, [r7, #12]
 80031a6:	605a      	str	r2, [r3, #4]
 80031a8:	68fb      	ldr	r3, [r7, #12]
 80031aa:	689a      	ldr	r2, [r3, #8]
 80031ac:	683b      	ldr	r3, [r7, #0]
 80031ae:	609a      	str	r2, [r3, #8]
 80031b0:	68fb      	ldr	r3, [r7, #12]
 80031b2:	689b      	ldr	r3, [r3, #8]
 80031b4:	683a      	ldr	r2, [r7, #0]
 80031b6:	605a      	str	r2, [r3, #4]
 80031b8:	68fb      	ldr	r3, [r7, #12]
 80031ba:	683a      	ldr	r2, [r7, #0]
 80031bc:	609a      	str	r2, [r3, #8]
 80031be:	683b      	ldr	r3, [r7, #0]
 80031c0:	687a      	ldr	r2, [r7, #4]
 80031c2:	611a      	str	r2, [r3, #16]
 80031c4:	687b      	ldr	r3, [r7, #4]
 80031c6:	681b      	ldr	r3, [r3, #0]
 80031c8:	1c5a      	adds	r2, r3, #1
 80031ca:	687b      	ldr	r3, [r7, #4]
 80031cc:	601a      	str	r2, [r3, #0]
 80031ce:	bf00      	nop
 80031d0:	3714      	adds	r7, #20
 80031d2:	46bd      	mov	sp, r7
 80031d4:	bc80      	pop	{r7}
 80031d6:	4770      	bx	lr

080031d8 <vListInsert>:
 80031d8:	b480      	push	{r7}
 80031da:	b085      	sub	sp, #20
 80031dc:	af00      	add	r7, sp, #0
 80031de:	6078      	str	r0, [r7, #4]
 80031e0:	6039      	str	r1, [r7, #0]
 80031e2:	683b      	ldr	r3, [r7, #0]
 80031e4:	681b      	ldr	r3, [r3, #0]
 80031e6:	60bb      	str	r3, [r7, #8]
 80031e8:	68bb      	ldr	r3, [r7, #8]
 80031ea:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 80031ee:	d103      	bne.n	80031f8 <vListInsert+0x20>
 80031f0:	687b      	ldr	r3, [r7, #4]
 80031f2:	691b      	ldr	r3, [r3, #16]
 80031f4:	60fb      	str	r3, [r7, #12]
 80031f6:	e00c      	b.n	8003212 <vListInsert+0x3a>
 80031f8:	687b      	ldr	r3, [r7, #4]
 80031fa:	3308      	adds	r3, #8
 80031fc:	60fb      	str	r3, [r7, #12]
 80031fe:	e002      	b.n	8003206 <vListInsert+0x2e>
 8003200:	68fb      	ldr	r3, [r7, #12]
 8003202:	685b      	ldr	r3, [r3, #4]
 8003204:	60fb      	str	r3, [r7, #12]
 8003206:	68fb      	ldr	r3, [r7, #12]
 8003208:	685b      	ldr	r3, [r3, #4]
 800320a:	681b      	ldr	r3, [r3, #0]
 800320c:	68ba      	ldr	r2, [r7, #8]
 800320e:	429a      	cmp	r2, r3
 8003210:	d2f6      	bcs.n	8003200 <vListInsert+0x28>
 8003212:	68fb      	ldr	r3, [r7, #12]
 8003214:	685a      	ldr	r2, [r3, #4]
 8003216:	683b      	ldr	r3, [r7, #0]
 8003218:	605a      	str	r2, [r3, #4]
 800321a:	683b      	ldr	r3, [r7, #0]
 800321c:	685b      	ldr	r3, [r3, #4]
 800321e:	683a      	ldr	r2, [r7, #0]
 8003220:	609a      	str	r2, [r3, #8]
 8003222:	683b      	ldr	r3, [r7, #0]
 8003224:	68fa      	ldr	r2, [r7, #12]
 8003226:	609a      	str	r2, [r3, #8]
 8003228:	68fb      	ldr	r3, [r7, #12]
 800322a:	683a      	ldr	r2, [r7, #0]
 800322c:	605a      	str	r2, [r3, #4]
 800322e:	683b      	ldr	r3, [r7, #0]
 8003230:	687a      	ldr	r2, [r7, #4]
 8003232:	611a      	str	r2, [r3, #16]
 8003234:	687b      	ldr	r3, [r7, #4]
 8003236:	681b      	ldr	r3, [r3, #0]
 8003238:	1c5a      	adds	r2, r3, #1
 800323a:	687b      	ldr	r3, [r7, #4]
 800323c:	601a      	str	r2, [r3, #0]
 800323e:	bf00      	nop
 8003240:	3714      	adds	r7, #20
 8003242:	46bd      	mov	sp, r7
 8003244:	bc80      	pop	{r7}
 8003246:	4770      	bx	lr

08003248 <uxListRemove>:
 8003248:	b480      	push	{r7}
 800324a:	b085      	sub	sp, #20
 800324c:	af00      	add	r7, sp, #0
 800324e:	6078      	str	r0, [r7, #4]
 8003250:	687b      	ldr	r3, [r7, #4]
 8003252:	691b      	ldr	r3, [r3, #16]
 8003254:	60fb      	str	r3, [r7, #12]
 8003256:	687b      	ldr	r3, [r7, #4]
 8003258:	685b      	ldr	r3, [r3, #4]
 800325a:	687a      	ldr	r2, [r7, #4]
 800325c:	6892      	ldr	r2, [r2, #8]
 800325e:	609a      	str	r2, [r3, #8]
 8003260:	687b      	ldr	r3, [r7, #4]
 8003262:	689b      	ldr	r3, [r3, #8]
 8003264:	687a      	ldr	r2, [r7, #4]
 8003266:	6852      	ldr	r2, [r2, #4]
 8003268:	605a      	str	r2, [r3, #4]
 800326a:	68fb      	ldr	r3, [r7, #12]
 800326c:	685b      	ldr	r3, [r3, #4]
 800326e:	687a      	ldr	r2, [r7, #4]
 8003270:	429a      	cmp	r2, r3
 8003272:	d103      	bne.n	800327c <uxListRemove+0x34>
 8003274:	687b      	ldr	r3, [r7, #4]
 8003276:	689a      	ldr	r2, [r3, #8]
 8003278:	68fb      	ldr	r3, [r7, #12]
 800327a:	605a      	str	r2, [r3, #4]
 800327c:	687b      	ldr	r3, [r7, #4]
 800327e:	2200      	movs	r2, #0
 8003280:	611a      	str	r2, [r3, #16]
 8003282:	68fb      	ldr	r3, [r7, #12]
 8003284:	681b      	ldr	r3, [r3, #0]
 8003286:	1e5a      	subs	r2, r3, #1
 8003288:	68fb      	ldr	r3, [r7, #12]
 800328a:	601a      	str	r2, [r3, #0]
 800328c:	68fb      	ldr	r3, [r7, #12]
 800328e:	681b      	ldr	r3, [r3, #0]
 8003290:	4618      	mov	r0, r3
 8003292:	3714      	adds	r7, #20
 8003294:	46bd      	mov	sp, r7
 8003296:	bc80      	pop	{r7}
 8003298:	4770      	bx	lr

0800329a <xTaskCreateStatic>:
 800329a:	b580      	push	{r7, lr}
 800329c:	b08e      	sub	sp, #56	; 0x38
 800329e:	af04      	add	r7, sp, #16
 80032a0:	60f8      	str	r0, [r7, #12]
 80032a2:	60b9      	str	r1, [r7, #8]
 80032a4:	607a      	str	r2, [r7, #4]
 80032a6:	603b      	str	r3, [r7, #0]
 80032a8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80032aa:	2b00      	cmp	r3, #0
 80032ac:	d109      	bne.n	80032c2 <xTaskCreateStatic+0x28>
 80032ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 80032b2:	f383 8811 	msr	BASEPRI, r3
 80032b6:	f3bf 8f6f 	isb	sy
 80032ba:	f3bf 8f4f 	dsb	sy
 80032be:	623b      	str	r3, [r7, #32]
 80032c0:	e7fe      	b.n	80032c0 <xTaskCreateStatic+0x26>
 80032c2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80032c4:	2b00      	cmp	r3, #0
 80032c6:	d109      	bne.n	80032dc <xTaskCreateStatic+0x42>
 80032c8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80032cc:	f383 8811 	msr	BASEPRI, r3
 80032d0:	f3bf 8f6f 	isb	sy
 80032d4:	f3bf 8f4f 	dsb	sy
 80032d8:	61fb      	str	r3, [r7, #28]
 80032da:	e7fe      	b.n	80032da <xTaskCreateStatic+0x40>
 80032dc:	2354      	movs	r3, #84	; 0x54
 80032de:	613b      	str	r3, [r7, #16]
 80032e0:	693b      	ldr	r3, [r7, #16]
 80032e2:	2b54      	cmp	r3, #84	; 0x54
 80032e4:	d009      	beq.n	80032fa <xTaskCreateStatic+0x60>
 80032e6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80032ea:	f383 8811 	msr	BASEPRI, r3
 80032ee:	f3bf 8f6f 	isb	sy
 80032f2:	f3bf 8f4f 	dsb	sy
 80032f6:	61bb      	str	r3, [r7, #24]
 80032f8:	e7fe      	b.n	80032f8 <xTaskCreateStatic+0x5e>
 80032fa:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80032fc:	2b00      	cmp	r3, #0
 80032fe:	d01e      	beq.n	800333e <xTaskCreateStatic+0xa4>
 8003300:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003302:	2b00      	cmp	r3, #0
 8003304:	d01b      	beq.n	800333e <xTaskCreateStatic+0xa4>
 8003306:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003308:	627b      	str	r3, [r7, #36]	; 0x24
 800330a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800330c:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800330e:	631a      	str	r2, [r3, #48]	; 0x30
 8003310:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003312:	2202      	movs	r2, #2
 8003314:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8003318:	2300      	movs	r3, #0
 800331a:	9303      	str	r3, [sp, #12]
 800331c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800331e:	9302      	str	r3, [sp, #8]
 8003320:	f107 0314 	add.w	r3, r7, #20
 8003324:	9301      	str	r3, [sp, #4]
 8003326:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003328:	9300      	str	r3, [sp, #0]
 800332a:	683b      	ldr	r3, [r7, #0]
 800332c:	687a      	ldr	r2, [r7, #4]
 800332e:	68b9      	ldr	r1, [r7, #8]
 8003330:	68f8      	ldr	r0, [r7, #12]
 8003332:	f000 f850 	bl	80033d6 <prvInitialiseNewTask>
 8003336:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8003338:	f000 f8cc 	bl	80034d4 <prvAddNewTaskToReadyList>
 800333c:	e001      	b.n	8003342 <xTaskCreateStatic+0xa8>
 800333e:	2300      	movs	r3, #0
 8003340:	617b      	str	r3, [r7, #20]
 8003342:	697b      	ldr	r3, [r7, #20]
 8003344:	4618      	mov	r0, r3
 8003346:	3728      	adds	r7, #40	; 0x28
 8003348:	46bd      	mov	sp, r7
 800334a:	bd80      	pop	{r7, pc}

0800334c <xTaskCreate>:
 800334c:	b580      	push	{r7, lr}
 800334e:	b08c      	sub	sp, #48	; 0x30
 8003350:	af04      	add	r7, sp, #16
 8003352:	60f8      	str	r0, [r7, #12]
 8003354:	60b9      	str	r1, [r7, #8]
 8003356:	603b      	str	r3, [r7, #0]
 8003358:	4613      	mov	r3, r2
 800335a:	80fb      	strh	r3, [r7, #6]
 800335c:	88fb      	ldrh	r3, [r7, #6]
 800335e:	009b      	lsls	r3, r3, #2
 8003360:	4618      	mov	r0, r3
 8003362:	f000 fe53 	bl	800400c <pvPortMalloc>
 8003366:	6178      	str	r0, [r7, #20]
 8003368:	697b      	ldr	r3, [r7, #20]
 800336a:	2b00      	cmp	r3, #0
 800336c:	d00e      	beq.n	800338c <xTaskCreate+0x40>
 800336e:	2054      	movs	r0, #84	; 0x54
 8003370:	f000 fe4c 	bl	800400c <pvPortMalloc>
 8003374:	61f8      	str	r0, [r7, #28]
 8003376:	69fb      	ldr	r3, [r7, #28]
 8003378:	2b00      	cmp	r3, #0
 800337a:	d003      	beq.n	8003384 <xTaskCreate+0x38>
 800337c:	69fb      	ldr	r3, [r7, #28]
 800337e:	697a      	ldr	r2, [r7, #20]
 8003380:	631a      	str	r2, [r3, #48]	; 0x30
 8003382:	e005      	b.n	8003390 <xTaskCreate+0x44>
 8003384:	6978      	ldr	r0, [r7, #20]
 8003386:	f000 ff03 	bl	8004190 <vPortFree>
 800338a:	e001      	b.n	8003390 <xTaskCreate+0x44>
 800338c:	2300      	movs	r3, #0
 800338e:	61fb      	str	r3, [r7, #28]
 8003390:	69fb      	ldr	r3, [r7, #28]
 8003392:	2b00      	cmp	r3, #0
 8003394:	d017      	beq.n	80033c6 <xTaskCreate+0x7a>
 8003396:	69fb      	ldr	r3, [r7, #28]
 8003398:	2200      	movs	r2, #0
 800339a:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800339e:	88fa      	ldrh	r2, [r7, #6]
 80033a0:	2300      	movs	r3, #0
 80033a2:	9303      	str	r3, [sp, #12]
 80033a4:	69fb      	ldr	r3, [r7, #28]
 80033a6:	9302      	str	r3, [sp, #8]
 80033a8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80033aa:	9301      	str	r3, [sp, #4]
 80033ac:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80033ae:	9300      	str	r3, [sp, #0]
 80033b0:	683b      	ldr	r3, [r7, #0]
 80033b2:	68b9      	ldr	r1, [r7, #8]
 80033b4:	68f8      	ldr	r0, [r7, #12]
 80033b6:	f000 f80e 	bl	80033d6 <prvInitialiseNewTask>
 80033ba:	69f8      	ldr	r0, [r7, #28]
 80033bc:	f000 f88a 	bl	80034d4 <prvAddNewTaskToReadyList>
 80033c0:	2301      	movs	r3, #1
 80033c2:	61bb      	str	r3, [r7, #24]
 80033c4:	e002      	b.n	80033cc <xTaskCreate+0x80>
 80033c6:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80033ca:	61bb      	str	r3, [r7, #24]
 80033cc:	69bb      	ldr	r3, [r7, #24]
 80033ce:	4618      	mov	r0, r3
 80033d0:	3720      	adds	r7, #32
 80033d2:	46bd      	mov	sp, r7
 80033d4:	bd80      	pop	{r7, pc}

080033d6 <prvInitialiseNewTask>:
 80033d6:	b580      	push	{r7, lr}
 80033d8:	b088      	sub	sp, #32
 80033da:	af00      	add	r7, sp, #0
 80033dc:	60f8      	str	r0, [r7, #12]
 80033de:	60b9      	str	r1, [r7, #8]
 80033e0:	607a      	str	r2, [r7, #4]
 80033e2:	603b      	str	r3, [r7, #0]
 80033e4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80033e6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80033e8:	687b      	ldr	r3, [r7, #4]
 80033ea:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80033ee:	3b01      	subs	r3, #1
 80033f0:	009b      	lsls	r3, r3, #2
 80033f2:	4413      	add	r3, r2
 80033f4:	61bb      	str	r3, [r7, #24]
 80033f6:	69bb      	ldr	r3, [r7, #24]
 80033f8:	f023 0307 	bic.w	r3, r3, #7
 80033fc:	61bb      	str	r3, [r7, #24]
 80033fe:	69bb      	ldr	r3, [r7, #24]
 8003400:	f003 0307 	and.w	r3, r3, #7
 8003404:	2b00      	cmp	r3, #0
 8003406:	d009      	beq.n	800341c <prvInitialiseNewTask+0x46>
 8003408:	f04f 0350 	mov.w	r3, #80	; 0x50
 800340c:	f383 8811 	msr	BASEPRI, r3
 8003410:	f3bf 8f6f 	isb	sy
 8003414:	f3bf 8f4f 	dsb	sy
 8003418:	617b      	str	r3, [r7, #20]
 800341a:	e7fe      	b.n	800341a <prvInitialiseNewTask+0x44>
 800341c:	2300      	movs	r3, #0
 800341e:	61fb      	str	r3, [r7, #28]
 8003420:	e012      	b.n	8003448 <prvInitialiseNewTask+0x72>
 8003422:	68ba      	ldr	r2, [r7, #8]
 8003424:	69fb      	ldr	r3, [r7, #28]
 8003426:	4413      	add	r3, r2
 8003428:	7819      	ldrb	r1, [r3, #0]
 800342a:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800342c:	69fb      	ldr	r3, [r7, #28]
 800342e:	4413      	add	r3, r2
 8003430:	3334      	adds	r3, #52	; 0x34
 8003432:	460a      	mov	r2, r1
 8003434:	701a      	strb	r2, [r3, #0]
 8003436:	68ba      	ldr	r2, [r7, #8]
 8003438:	69fb      	ldr	r3, [r7, #28]
 800343a:	4413      	add	r3, r2
 800343c:	781b      	ldrb	r3, [r3, #0]
 800343e:	2b00      	cmp	r3, #0
 8003440:	d006      	beq.n	8003450 <prvInitialiseNewTask+0x7a>
 8003442:	69fb      	ldr	r3, [r7, #28]
 8003444:	3301      	adds	r3, #1
 8003446:	61fb      	str	r3, [r7, #28]
 8003448:	69fb      	ldr	r3, [r7, #28]
 800344a:	2b0f      	cmp	r3, #15
 800344c:	d9e9      	bls.n	8003422 <prvInitialiseNewTask+0x4c>
 800344e:	e000      	b.n	8003452 <prvInitialiseNewTask+0x7c>
 8003450:	bf00      	nop
 8003452:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003454:	2200      	movs	r2, #0
 8003456:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800345a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800345c:	2b06      	cmp	r3, #6
 800345e:	d901      	bls.n	8003464 <prvInitialiseNewTask+0x8e>
 8003460:	2306      	movs	r3, #6
 8003462:	62bb      	str	r3, [r7, #40]	; 0x28
 8003464:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003466:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8003468:	62da      	str	r2, [r3, #44]	; 0x2c
 800346a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800346c:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800346e:	645a      	str	r2, [r3, #68]	; 0x44
 8003470:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003472:	2200      	movs	r2, #0
 8003474:	649a      	str	r2, [r3, #72]	; 0x48
 8003476:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003478:	3304      	adds	r3, #4
 800347a:	4618      	mov	r0, r3
 800347c:	f7ff fe7d 	bl	800317a <vListInitialiseItem>
 8003480:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003482:	3318      	adds	r3, #24
 8003484:	4618      	mov	r0, r3
 8003486:	f7ff fe78 	bl	800317a <vListInitialiseItem>
 800348a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800348c:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800348e:	611a      	str	r2, [r3, #16]
 8003490:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003492:	f1c3 0207 	rsb	r2, r3, #7
 8003496:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003498:	619a      	str	r2, [r3, #24]
 800349a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800349c:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800349e:	625a      	str	r2, [r3, #36]	; 0x24
 80034a0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80034a2:	2200      	movs	r2, #0
 80034a4:	64da      	str	r2, [r3, #76]	; 0x4c
 80034a6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80034a8:	2200      	movs	r2, #0
 80034aa:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80034ae:	683a      	ldr	r2, [r7, #0]
 80034b0:	68f9      	ldr	r1, [r7, #12]
 80034b2:	69b8      	ldr	r0, [r7, #24]
 80034b4:	f000 fc06 	bl	8003cc4 <pxPortInitialiseStack>
 80034b8:	4602      	mov	r2, r0
 80034ba:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80034bc:	601a      	str	r2, [r3, #0]
 80034be:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80034c0:	2b00      	cmp	r3, #0
 80034c2:	d002      	beq.n	80034ca <prvInitialiseNewTask+0xf4>
 80034c4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80034c6:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80034c8:	601a      	str	r2, [r3, #0]
 80034ca:	bf00      	nop
 80034cc:	3720      	adds	r7, #32
 80034ce:	46bd      	mov	sp, r7
 80034d0:	bd80      	pop	{r7, pc}
	...

080034d4 <prvAddNewTaskToReadyList>:
 80034d4:	b580      	push	{r7, lr}
 80034d6:	b082      	sub	sp, #8
 80034d8:	af00      	add	r7, sp, #0
 80034da:	6078      	str	r0, [r7, #4]
 80034dc:	f000 fcdc 	bl	8003e98 <vPortEnterCritical>
 80034e0:	4b2a      	ldr	r3, [pc, #168]	; (800358c <prvAddNewTaskToReadyList+0xb8>)
 80034e2:	681b      	ldr	r3, [r3, #0]
 80034e4:	3301      	adds	r3, #1
 80034e6:	4a29      	ldr	r2, [pc, #164]	; (800358c <prvAddNewTaskToReadyList+0xb8>)
 80034e8:	6013      	str	r3, [r2, #0]
 80034ea:	4b29      	ldr	r3, [pc, #164]	; (8003590 <prvAddNewTaskToReadyList+0xbc>)
 80034ec:	681b      	ldr	r3, [r3, #0]
 80034ee:	2b00      	cmp	r3, #0
 80034f0:	d109      	bne.n	8003506 <prvAddNewTaskToReadyList+0x32>
 80034f2:	4a27      	ldr	r2, [pc, #156]	; (8003590 <prvAddNewTaskToReadyList+0xbc>)
 80034f4:	687b      	ldr	r3, [r7, #4]
 80034f6:	6013      	str	r3, [r2, #0]
 80034f8:	4b24      	ldr	r3, [pc, #144]	; (800358c <prvAddNewTaskToReadyList+0xb8>)
 80034fa:	681b      	ldr	r3, [r3, #0]
 80034fc:	2b01      	cmp	r3, #1
 80034fe:	d110      	bne.n	8003522 <prvAddNewTaskToReadyList+0x4e>
 8003500:	f000 fabc 	bl	8003a7c <prvInitialiseTaskLists>
 8003504:	e00d      	b.n	8003522 <prvAddNewTaskToReadyList+0x4e>
 8003506:	4b23      	ldr	r3, [pc, #140]	; (8003594 <prvAddNewTaskToReadyList+0xc0>)
 8003508:	681b      	ldr	r3, [r3, #0]
 800350a:	2b00      	cmp	r3, #0
 800350c:	d109      	bne.n	8003522 <prvAddNewTaskToReadyList+0x4e>
 800350e:	4b20      	ldr	r3, [pc, #128]	; (8003590 <prvAddNewTaskToReadyList+0xbc>)
 8003510:	681b      	ldr	r3, [r3, #0]
 8003512:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003514:	687b      	ldr	r3, [r7, #4]
 8003516:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003518:	429a      	cmp	r2, r3
 800351a:	d802      	bhi.n	8003522 <prvAddNewTaskToReadyList+0x4e>
 800351c:	4a1c      	ldr	r2, [pc, #112]	; (8003590 <prvAddNewTaskToReadyList+0xbc>)
 800351e:	687b      	ldr	r3, [r7, #4]
 8003520:	6013      	str	r3, [r2, #0]
 8003522:	4b1d      	ldr	r3, [pc, #116]	; (8003598 <prvAddNewTaskToReadyList+0xc4>)
 8003524:	681b      	ldr	r3, [r3, #0]
 8003526:	3301      	adds	r3, #1
 8003528:	4a1b      	ldr	r2, [pc, #108]	; (8003598 <prvAddNewTaskToReadyList+0xc4>)
 800352a:	6013      	str	r3, [r2, #0]
 800352c:	687b      	ldr	r3, [r7, #4]
 800352e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003530:	2201      	movs	r2, #1
 8003532:	409a      	lsls	r2, r3
 8003534:	4b19      	ldr	r3, [pc, #100]	; (800359c <prvAddNewTaskToReadyList+0xc8>)
 8003536:	681b      	ldr	r3, [r3, #0]
 8003538:	4313      	orrs	r3, r2
 800353a:	4a18      	ldr	r2, [pc, #96]	; (800359c <prvAddNewTaskToReadyList+0xc8>)
 800353c:	6013      	str	r3, [r2, #0]
 800353e:	687b      	ldr	r3, [r7, #4]
 8003540:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003542:	4613      	mov	r3, r2
 8003544:	009b      	lsls	r3, r3, #2
 8003546:	4413      	add	r3, r2
 8003548:	009b      	lsls	r3, r3, #2
 800354a:	4a15      	ldr	r2, [pc, #84]	; (80035a0 <prvAddNewTaskToReadyList+0xcc>)
 800354c:	441a      	add	r2, r3
 800354e:	687b      	ldr	r3, [r7, #4]
 8003550:	3304      	adds	r3, #4
 8003552:	4619      	mov	r1, r3
 8003554:	4610      	mov	r0, r2
 8003556:	f7ff fe1c 	bl	8003192 <vListInsertEnd>
 800355a:	f000 fccb 	bl	8003ef4 <vPortExitCritical>
 800355e:	4b0d      	ldr	r3, [pc, #52]	; (8003594 <prvAddNewTaskToReadyList+0xc0>)
 8003560:	681b      	ldr	r3, [r3, #0]
 8003562:	2b00      	cmp	r3, #0
 8003564:	d00e      	beq.n	8003584 <prvAddNewTaskToReadyList+0xb0>
 8003566:	4b0a      	ldr	r3, [pc, #40]	; (8003590 <prvAddNewTaskToReadyList+0xbc>)
 8003568:	681b      	ldr	r3, [r3, #0]
 800356a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800356c:	687b      	ldr	r3, [r7, #4]
 800356e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003570:	429a      	cmp	r2, r3
 8003572:	d207      	bcs.n	8003584 <prvAddNewTaskToReadyList+0xb0>
 8003574:	4b0b      	ldr	r3, [pc, #44]	; (80035a4 <prvAddNewTaskToReadyList+0xd0>)
 8003576:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800357a:	601a      	str	r2, [r3, #0]
 800357c:	f3bf 8f4f 	dsb	sy
 8003580:	f3bf 8f6f 	isb	sy
 8003584:	bf00      	nop
 8003586:	3708      	adds	r7, #8
 8003588:	46bd      	mov	sp, r7
 800358a:	bd80      	pop	{r7, pc}
 800358c:	200007f8 	.word	0x200007f8
 8003590:	200006f8 	.word	0x200006f8
 8003594:	20000804 	.word	0x20000804
 8003598:	20000814 	.word	0x20000814
 800359c:	20000800 	.word	0x20000800
 80035a0:	200006fc 	.word	0x200006fc
 80035a4:	e000ed04 	.word	0xe000ed04

080035a8 <vTaskDelay>:
 80035a8:	b580      	push	{r7, lr}
 80035aa:	b084      	sub	sp, #16
 80035ac:	af00      	add	r7, sp, #0
 80035ae:	6078      	str	r0, [r7, #4]
 80035b0:	2300      	movs	r3, #0
 80035b2:	60fb      	str	r3, [r7, #12]
 80035b4:	687b      	ldr	r3, [r7, #4]
 80035b6:	2b00      	cmp	r3, #0
 80035b8:	d016      	beq.n	80035e8 <vTaskDelay+0x40>
 80035ba:	4b13      	ldr	r3, [pc, #76]	; (8003608 <vTaskDelay+0x60>)
 80035bc:	681b      	ldr	r3, [r3, #0]
 80035be:	2b00      	cmp	r3, #0
 80035c0:	d009      	beq.n	80035d6 <vTaskDelay+0x2e>
 80035c2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80035c6:	f383 8811 	msr	BASEPRI, r3
 80035ca:	f3bf 8f6f 	isb	sy
 80035ce:	f3bf 8f4f 	dsb	sy
 80035d2:	60bb      	str	r3, [r7, #8]
 80035d4:	e7fe      	b.n	80035d4 <vTaskDelay+0x2c>
 80035d6:	f000 f879 	bl	80036cc <vTaskSuspendAll>
 80035da:	2100      	movs	r1, #0
 80035dc:	6878      	ldr	r0, [r7, #4]
 80035de:	f000 fb0b 	bl	8003bf8 <prvAddCurrentTaskToDelayedList>
 80035e2:	f000 f881 	bl	80036e8 <xTaskResumeAll>
 80035e6:	60f8      	str	r0, [r7, #12]
 80035e8:	68fb      	ldr	r3, [r7, #12]
 80035ea:	2b00      	cmp	r3, #0
 80035ec:	d107      	bne.n	80035fe <vTaskDelay+0x56>
 80035ee:	4b07      	ldr	r3, [pc, #28]	; (800360c <vTaskDelay+0x64>)
 80035f0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80035f4:	601a      	str	r2, [r3, #0]
 80035f6:	f3bf 8f4f 	dsb	sy
 80035fa:	f3bf 8f6f 	isb	sy
 80035fe:	bf00      	nop
 8003600:	3710      	adds	r7, #16
 8003602:	46bd      	mov	sp, r7
 8003604:	bd80      	pop	{r7, pc}
 8003606:	bf00      	nop
 8003608:	20000820 	.word	0x20000820
 800360c:	e000ed04 	.word	0xe000ed04

08003610 <vTaskStartScheduler>:
 8003610:	b580      	push	{r7, lr}
 8003612:	b08a      	sub	sp, #40	; 0x28
 8003614:	af04      	add	r7, sp, #16
 8003616:	2300      	movs	r3, #0
 8003618:	60bb      	str	r3, [r7, #8]
 800361a:	2300      	movs	r3, #0
 800361c:	607b      	str	r3, [r7, #4]
 800361e:	463a      	mov	r2, r7
 8003620:	1d39      	adds	r1, r7, #4
 8003622:	f107 0308 	add.w	r3, r7, #8
 8003626:	4618      	mov	r0, r3
 8003628:	f7fc fda4 	bl	8000174 <vApplicationGetIdleTaskMemory>
 800362c:	6839      	ldr	r1, [r7, #0]
 800362e:	687b      	ldr	r3, [r7, #4]
 8003630:	68ba      	ldr	r2, [r7, #8]
 8003632:	9202      	str	r2, [sp, #8]
 8003634:	9301      	str	r3, [sp, #4]
 8003636:	2300      	movs	r3, #0
 8003638:	9300      	str	r3, [sp, #0]
 800363a:	2300      	movs	r3, #0
 800363c:	460a      	mov	r2, r1
 800363e:	491d      	ldr	r1, [pc, #116]	; (80036b4 <vTaskStartScheduler+0xa4>)
 8003640:	481d      	ldr	r0, [pc, #116]	; (80036b8 <vTaskStartScheduler+0xa8>)
 8003642:	f7ff fe2a 	bl	800329a <xTaskCreateStatic>
 8003646:	4602      	mov	r2, r0
 8003648:	4b1c      	ldr	r3, [pc, #112]	; (80036bc <vTaskStartScheduler+0xac>)
 800364a:	601a      	str	r2, [r3, #0]
 800364c:	4b1b      	ldr	r3, [pc, #108]	; (80036bc <vTaskStartScheduler+0xac>)
 800364e:	681b      	ldr	r3, [r3, #0]
 8003650:	2b00      	cmp	r3, #0
 8003652:	d002      	beq.n	800365a <vTaskStartScheduler+0x4a>
 8003654:	2301      	movs	r3, #1
 8003656:	617b      	str	r3, [r7, #20]
 8003658:	e001      	b.n	800365e <vTaskStartScheduler+0x4e>
 800365a:	2300      	movs	r3, #0
 800365c:	617b      	str	r3, [r7, #20]
 800365e:	697b      	ldr	r3, [r7, #20]
 8003660:	2b01      	cmp	r3, #1
 8003662:	d115      	bne.n	8003690 <vTaskStartScheduler+0x80>
 8003664:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003668:	f383 8811 	msr	BASEPRI, r3
 800366c:	f3bf 8f6f 	isb	sy
 8003670:	f3bf 8f4f 	dsb	sy
 8003674:	613b      	str	r3, [r7, #16]
 8003676:	4b12      	ldr	r3, [pc, #72]	; (80036c0 <vTaskStartScheduler+0xb0>)
 8003678:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800367c:	601a      	str	r2, [r3, #0]
 800367e:	4b11      	ldr	r3, [pc, #68]	; (80036c4 <vTaskStartScheduler+0xb4>)
 8003680:	2201      	movs	r2, #1
 8003682:	601a      	str	r2, [r3, #0]
 8003684:	4b10      	ldr	r3, [pc, #64]	; (80036c8 <vTaskStartScheduler+0xb8>)
 8003686:	2200      	movs	r2, #0
 8003688:	601a      	str	r2, [r3, #0]
 800368a:	f000 fb95 	bl	8003db8 <xPortStartScheduler>
 800368e:	e00d      	b.n	80036ac <vTaskStartScheduler+0x9c>
 8003690:	697b      	ldr	r3, [r7, #20]
 8003692:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8003696:	d109      	bne.n	80036ac <vTaskStartScheduler+0x9c>
 8003698:	f04f 0350 	mov.w	r3, #80	; 0x50
 800369c:	f383 8811 	msr	BASEPRI, r3
 80036a0:	f3bf 8f6f 	isb	sy
 80036a4:	f3bf 8f4f 	dsb	sy
 80036a8:	60fb      	str	r3, [r7, #12]
 80036aa:	e7fe      	b.n	80036aa <vTaskStartScheduler+0x9a>
 80036ac:	bf00      	nop
 80036ae:	3718      	adds	r7, #24
 80036b0:	46bd      	mov	sp, r7
 80036b2:	bd80      	pop	{r7, pc}
 80036b4:	08004fb0 	.word	0x08004fb0
 80036b8:	08003a4d 	.word	0x08003a4d
 80036bc:	2000081c 	.word	0x2000081c
 80036c0:	20000818 	.word	0x20000818
 80036c4:	20000804 	.word	0x20000804
 80036c8:	200007fc 	.word	0x200007fc

080036cc <vTaskSuspendAll>:
 80036cc:	b480      	push	{r7}
 80036ce:	af00      	add	r7, sp, #0
 80036d0:	4b04      	ldr	r3, [pc, #16]	; (80036e4 <vTaskSuspendAll+0x18>)
 80036d2:	681b      	ldr	r3, [r3, #0]
 80036d4:	3301      	adds	r3, #1
 80036d6:	4a03      	ldr	r2, [pc, #12]	; (80036e4 <vTaskSuspendAll+0x18>)
 80036d8:	6013      	str	r3, [r2, #0]
 80036da:	bf00      	nop
 80036dc:	46bd      	mov	sp, r7
 80036de:	bc80      	pop	{r7}
 80036e0:	4770      	bx	lr
 80036e2:	bf00      	nop
 80036e4:	20000820 	.word	0x20000820

080036e8 <xTaskResumeAll>:
 80036e8:	b580      	push	{r7, lr}
 80036ea:	b084      	sub	sp, #16
 80036ec:	af00      	add	r7, sp, #0
 80036ee:	2300      	movs	r3, #0
 80036f0:	60fb      	str	r3, [r7, #12]
 80036f2:	2300      	movs	r3, #0
 80036f4:	60bb      	str	r3, [r7, #8]
 80036f6:	4b41      	ldr	r3, [pc, #260]	; (80037fc <xTaskResumeAll+0x114>)
 80036f8:	681b      	ldr	r3, [r3, #0]
 80036fa:	2b00      	cmp	r3, #0
 80036fc:	d109      	bne.n	8003712 <xTaskResumeAll+0x2a>
 80036fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003702:	f383 8811 	msr	BASEPRI, r3
 8003706:	f3bf 8f6f 	isb	sy
 800370a:	f3bf 8f4f 	dsb	sy
 800370e:	603b      	str	r3, [r7, #0]
 8003710:	e7fe      	b.n	8003710 <xTaskResumeAll+0x28>
 8003712:	f000 fbc1 	bl	8003e98 <vPortEnterCritical>
 8003716:	4b39      	ldr	r3, [pc, #228]	; (80037fc <xTaskResumeAll+0x114>)
 8003718:	681b      	ldr	r3, [r3, #0]
 800371a:	3b01      	subs	r3, #1
 800371c:	4a37      	ldr	r2, [pc, #220]	; (80037fc <xTaskResumeAll+0x114>)
 800371e:	6013      	str	r3, [r2, #0]
 8003720:	4b36      	ldr	r3, [pc, #216]	; (80037fc <xTaskResumeAll+0x114>)
 8003722:	681b      	ldr	r3, [r3, #0]
 8003724:	2b00      	cmp	r3, #0
 8003726:	d161      	bne.n	80037ec <xTaskResumeAll+0x104>
 8003728:	4b35      	ldr	r3, [pc, #212]	; (8003800 <xTaskResumeAll+0x118>)
 800372a:	681b      	ldr	r3, [r3, #0]
 800372c:	2b00      	cmp	r3, #0
 800372e:	d05d      	beq.n	80037ec <xTaskResumeAll+0x104>
 8003730:	e02e      	b.n	8003790 <xTaskResumeAll+0xa8>
 8003732:	4b34      	ldr	r3, [pc, #208]	; (8003804 <xTaskResumeAll+0x11c>)
 8003734:	68db      	ldr	r3, [r3, #12]
 8003736:	68db      	ldr	r3, [r3, #12]
 8003738:	60fb      	str	r3, [r7, #12]
 800373a:	68fb      	ldr	r3, [r7, #12]
 800373c:	3318      	adds	r3, #24
 800373e:	4618      	mov	r0, r3
 8003740:	f7ff fd82 	bl	8003248 <uxListRemove>
 8003744:	68fb      	ldr	r3, [r7, #12]
 8003746:	3304      	adds	r3, #4
 8003748:	4618      	mov	r0, r3
 800374a:	f7ff fd7d 	bl	8003248 <uxListRemove>
 800374e:	68fb      	ldr	r3, [r7, #12]
 8003750:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003752:	2201      	movs	r2, #1
 8003754:	409a      	lsls	r2, r3
 8003756:	4b2c      	ldr	r3, [pc, #176]	; (8003808 <xTaskResumeAll+0x120>)
 8003758:	681b      	ldr	r3, [r3, #0]
 800375a:	4313      	orrs	r3, r2
 800375c:	4a2a      	ldr	r2, [pc, #168]	; (8003808 <xTaskResumeAll+0x120>)
 800375e:	6013      	str	r3, [r2, #0]
 8003760:	68fb      	ldr	r3, [r7, #12]
 8003762:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003764:	4613      	mov	r3, r2
 8003766:	009b      	lsls	r3, r3, #2
 8003768:	4413      	add	r3, r2
 800376a:	009b      	lsls	r3, r3, #2
 800376c:	4a27      	ldr	r2, [pc, #156]	; (800380c <xTaskResumeAll+0x124>)
 800376e:	441a      	add	r2, r3
 8003770:	68fb      	ldr	r3, [r7, #12]
 8003772:	3304      	adds	r3, #4
 8003774:	4619      	mov	r1, r3
 8003776:	4610      	mov	r0, r2
 8003778:	f7ff fd0b 	bl	8003192 <vListInsertEnd>
 800377c:	68fb      	ldr	r3, [r7, #12]
 800377e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003780:	4b23      	ldr	r3, [pc, #140]	; (8003810 <xTaskResumeAll+0x128>)
 8003782:	681b      	ldr	r3, [r3, #0]
 8003784:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003786:	429a      	cmp	r2, r3
 8003788:	d302      	bcc.n	8003790 <xTaskResumeAll+0xa8>
 800378a:	4b22      	ldr	r3, [pc, #136]	; (8003814 <xTaskResumeAll+0x12c>)
 800378c:	2201      	movs	r2, #1
 800378e:	601a      	str	r2, [r3, #0]
 8003790:	4b1c      	ldr	r3, [pc, #112]	; (8003804 <xTaskResumeAll+0x11c>)
 8003792:	681b      	ldr	r3, [r3, #0]
 8003794:	2b00      	cmp	r3, #0
 8003796:	d1cc      	bne.n	8003732 <xTaskResumeAll+0x4a>
 8003798:	68fb      	ldr	r3, [r7, #12]
 800379a:	2b00      	cmp	r3, #0
 800379c:	d001      	beq.n	80037a2 <xTaskResumeAll+0xba>
 800379e:	f000 fa07 	bl	8003bb0 <prvResetNextTaskUnblockTime>
 80037a2:	4b1d      	ldr	r3, [pc, #116]	; (8003818 <xTaskResumeAll+0x130>)
 80037a4:	681b      	ldr	r3, [r3, #0]
 80037a6:	607b      	str	r3, [r7, #4]
 80037a8:	687b      	ldr	r3, [r7, #4]
 80037aa:	2b00      	cmp	r3, #0
 80037ac:	d010      	beq.n	80037d0 <xTaskResumeAll+0xe8>
 80037ae:	f000 f837 	bl	8003820 <xTaskIncrementTick>
 80037b2:	4603      	mov	r3, r0
 80037b4:	2b00      	cmp	r3, #0
 80037b6:	d002      	beq.n	80037be <xTaskResumeAll+0xd6>
 80037b8:	4b16      	ldr	r3, [pc, #88]	; (8003814 <xTaskResumeAll+0x12c>)
 80037ba:	2201      	movs	r2, #1
 80037bc:	601a      	str	r2, [r3, #0]
 80037be:	687b      	ldr	r3, [r7, #4]
 80037c0:	3b01      	subs	r3, #1
 80037c2:	607b      	str	r3, [r7, #4]
 80037c4:	687b      	ldr	r3, [r7, #4]
 80037c6:	2b00      	cmp	r3, #0
 80037c8:	d1f1      	bne.n	80037ae <xTaskResumeAll+0xc6>
 80037ca:	4b13      	ldr	r3, [pc, #76]	; (8003818 <xTaskResumeAll+0x130>)
 80037cc:	2200      	movs	r2, #0
 80037ce:	601a      	str	r2, [r3, #0]
 80037d0:	4b10      	ldr	r3, [pc, #64]	; (8003814 <xTaskResumeAll+0x12c>)
 80037d2:	681b      	ldr	r3, [r3, #0]
 80037d4:	2b00      	cmp	r3, #0
 80037d6:	d009      	beq.n	80037ec <xTaskResumeAll+0x104>
 80037d8:	2301      	movs	r3, #1
 80037da:	60bb      	str	r3, [r7, #8]
 80037dc:	4b0f      	ldr	r3, [pc, #60]	; (800381c <xTaskResumeAll+0x134>)
 80037de:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80037e2:	601a      	str	r2, [r3, #0]
 80037e4:	f3bf 8f4f 	dsb	sy
 80037e8:	f3bf 8f6f 	isb	sy
 80037ec:	f000 fb82 	bl	8003ef4 <vPortExitCritical>
 80037f0:	68bb      	ldr	r3, [r7, #8]
 80037f2:	4618      	mov	r0, r3
 80037f4:	3710      	adds	r7, #16
 80037f6:	46bd      	mov	sp, r7
 80037f8:	bd80      	pop	{r7, pc}
 80037fa:	bf00      	nop
 80037fc:	20000820 	.word	0x20000820
 8003800:	200007f8 	.word	0x200007f8
 8003804:	200007b8 	.word	0x200007b8
 8003808:	20000800 	.word	0x20000800
 800380c:	200006fc 	.word	0x200006fc
 8003810:	200006f8 	.word	0x200006f8
 8003814:	2000080c 	.word	0x2000080c
 8003818:	20000808 	.word	0x20000808
 800381c:	e000ed04 	.word	0xe000ed04

08003820 <xTaskIncrementTick>:
 8003820:	b580      	push	{r7, lr}
 8003822:	b086      	sub	sp, #24
 8003824:	af00      	add	r7, sp, #0
 8003826:	2300      	movs	r3, #0
 8003828:	617b      	str	r3, [r7, #20]
 800382a:	4b50      	ldr	r3, [pc, #320]	; (800396c <xTaskIncrementTick+0x14c>)
 800382c:	681b      	ldr	r3, [r3, #0]
 800382e:	2b00      	cmp	r3, #0
 8003830:	f040 808c 	bne.w	800394c <xTaskIncrementTick+0x12c>
 8003834:	4b4e      	ldr	r3, [pc, #312]	; (8003970 <xTaskIncrementTick+0x150>)
 8003836:	681b      	ldr	r3, [r3, #0]
 8003838:	3301      	adds	r3, #1
 800383a:	613b      	str	r3, [r7, #16]
 800383c:	4a4c      	ldr	r2, [pc, #304]	; (8003970 <xTaskIncrementTick+0x150>)
 800383e:	693b      	ldr	r3, [r7, #16]
 8003840:	6013      	str	r3, [r2, #0]
 8003842:	693b      	ldr	r3, [r7, #16]
 8003844:	2b00      	cmp	r3, #0
 8003846:	d11f      	bne.n	8003888 <xTaskIncrementTick+0x68>
 8003848:	4b4a      	ldr	r3, [pc, #296]	; (8003974 <xTaskIncrementTick+0x154>)
 800384a:	681b      	ldr	r3, [r3, #0]
 800384c:	681b      	ldr	r3, [r3, #0]
 800384e:	2b00      	cmp	r3, #0
 8003850:	d009      	beq.n	8003866 <xTaskIncrementTick+0x46>
 8003852:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003856:	f383 8811 	msr	BASEPRI, r3
 800385a:	f3bf 8f6f 	isb	sy
 800385e:	f3bf 8f4f 	dsb	sy
 8003862:	603b      	str	r3, [r7, #0]
 8003864:	e7fe      	b.n	8003864 <xTaskIncrementTick+0x44>
 8003866:	4b43      	ldr	r3, [pc, #268]	; (8003974 <xTaskIncrementTick+0x154>)
 8003868:	681b      	ldr	r3, [r3, #0]
 800386a:	60fb      	str	r3, [r7, #12]
 800386c:	4b42      	ldr	r3, [pc, #264]	; (8003978 <xTaskIncrementTick+0x158>)
 800386e:	681b      	ldr	r3, [r3, #0]
 8003870:	4a40      	ldr	r2, [pc, #256]	; (8003974 <xTaskIncrementTick+0x154>)
 8003872:	6013      	str	r3, [r2, #0]
 8003874:	4a40      	ldr	r2, [pc, #256]	; (8003978 <xTaskIncrementTick+0x158>)
 8003876:	68fb      	ldr	r3, [r7, #12]
 8003878:	6013      	str	r3, [r2, #0]
 800387a:	4b40      	ldr	r3, [pc, #256]	; (800397c <xTaskIncrementTick+0x15c>)
 800387c:	681b      	ldr	r3, [r3, #0]
 800387e:	3301      	adds	r3, #1
 8003880:	4a3e      	ldr	r2, [pc, #248]	; (800397c <xTaskIncrementTick+0x15c>)
 8003882:	6013      	str	r3, [r2, #0]
 8003884:	f000 f994 	bl	8003bb0 <prvResetNextTaskUnblockTime>
 8003888:	4b3d      	ldr	r3, [pc, #244]	; (8003980 <xTaskIncrementTick+0x160>)
 800388a:	681b      	ldr	r3, [r3, #0]
 800388c:	693a      	ldr	r2, [r7, #16]
 800388e:	429a      	cmp	r2, r3
 8003890:	d34d      	bcc.n	800392e <xTaskIncrementTick+0x10e>
 8003892:	4b38      	ldr	r3, [pc, #224]	; (8003974 <xTaskIncrementTick+0x154>)
 8003894:	681b      	ldr	r3, [r3, #0]
 8003896:	681b      	ldr	r3, [r3, #0]
 8003898:	2b00      	cmp	r3, #0
 800389a:	d101      	bne.n	80038a0 <xTaskIncrementTick+0x80>
 800389c:	2301      	movs	r3, #1
 800389e:	e000      	b.n	80038a2 <xTaskIncrementTick+0x82>
 80038a0:	2300      	movs	r3, #0
 80038a2:	2b00      	cmp	r3, #0
 80038a4:	d004      	beq.n	80038b0 <xTaskIncrementTick+0x90>
 80038a6:	4b36      	ldr	r3, [pc, #216]	; (8003980 <xTaskIncrementTick+0x160>)
 80038a8:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80038ac:	601a      	str	r2, [r3, #0]
 80038ae:	e03e      	b.n	800392e <xTaskIncrementTick+0x10e>
 80038b0:	4b30      	ldr	r3, [pc, #192]	; (8003974 <xTaskIncrementTick+0x154>)
 80038b2:	681b      	ldr	r3, [r3, #0]
 80038b4:	68db      	ldr	r3, [r3, #12]
 80038b6:	68db      	ldr	r3, [r3, #12]
 80038b8:	60bb      	str	r3, [r7, #8]
 80038ba:	68bb      	ldr	r3, [r7, #8]
 80038bc:	685b      	ldr	r3, [r3, #4]
 80038be:	607b      	str	r3, [r7, #4]
 80038c0:	693a      	ldr	r2, [r7, #16]
 80038c2:	687b      	ldr	r3, [r7, #4]
 80038c4:	429a      	cmp	r2, r3
 80038c6:	d203      	bcs.n	80038d0 <xTaskIncrementTick+0xb0>
 80038c8:	4a2d      	ldr	r2, [pc, #180]	; (8003980 <xTaskIncrementTick+0x160>)
 80038ca:	687b      	ldr	r3, [r7, #4]
 80038cc:	6013      	str	r3, [r2, #0]
 80038ce:	e02e      	b.n	800392e <xTaskIncrementTick+0x10e>
 80038d0:	68bb      	ldr	r3, [r7, #8]
 80038d2:	3304      	adds	r3, #4
 80038d4:	4618      	mov	r0, r3
 80038d6:	f7ff fcb7 	bl	8003248 <uxListRemove>
 80038da:	68bb      	ldr	r3, [r7, #8]
 80038dc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80038de:	2b00      	cmp	r3, #0
 80038e0:	d004      	beq.n	80038ec <xTaskIncrementTick+0xcc>
 80038e2:	68bb      	ldr	r3, [r7, #8]
 80038e4:	3318      	adds	r3, #24
 80038e6:	4618      	mov	r0, r3
 80038e8:	f7ff fcae 	bl	8003248 <uxListRemove>
 80038ec:	68bb      	ldr	r3, [r7, #8]
 80038ee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80038f0:	2201      	movs	r2, #1
 80038f2:	409a      	lsls	r2, r3
 80038f4:	4b23      	ldr	r3, [pc, #140]	; (8003984 <xTaskIncrementTick+0x164>)
 80038f6:	681b      	ldr	r3, [r3, #0]
 80038f8:	4313      	orrs	r3, r2
 80038fa:	4a22      	ldr	r2, [pc, #136]	; (8003984 <xTaskIncrementTick+0x164>)
 80038fc:	6013      	str	r3, [r2, #0]
 80038fe:	68bb      	ldr	r3, [r7, #8]
 8003900:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003902:	4613      	mov	r3, r2
 8003904:	009b      	lsls	r3, r3, #2
 8003906:	4413      	add	r3, r2
 8003908:	009b      	lsls	r3, r3, #2
 800390a:	4a1f      	ldr	r2, [pc, #124]	; (8003988 <xTaskIncrementTick+0x168>)
 800390c:	441a      	add	r2, r3
 800390e:	68bb      	ldr	r3, [r7, #8]
 8003910:	3304      	adds	r3, #4
 8003912:	4619      	mov	r1, r3
 8003914:	4610      	mov	r0, r2
 8003916:	f7ff fc3c 	bl	8003192 <vListInsertEnd>
 800391a:	68bb      	ldr	r3, [r7, #8]
 800391c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800391e:	4b1b      	ldr	r3, [pc, #108]	; (800398c <xTaskIncrementTick+0x16c>)
 8003920:	681b      	ldr	r3, [r3, #0]
 8003922:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003924:	429a      	cmp	r2, r3
 8003926:	d3b4      	bcc.n	8003892 <xTaskIncrementTick+0x72>
 8003928:	2301      	movs	r3, #1
 800392a:	617b      	str	r3, [r7, #20]
 800392c:	e7b1      	b.n	8003892 <xTaskIncrementTick+0x72>
 800392e:	4b17      	ldr	r3, [pc, #92]	; (800398c <xTaskIncrementTick+0x16c>)
 8003930:	681b      	ldr	r3, [r3, #0]
 8003932:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003934:	4914      	ldr	r1, [pc, #80]	; (8003988 <xTaskIncrementTick+0x168>)
 8003936:	4613      	mov	r3, r2
 8003938:	009b      	lsls	r3, r3, #2
 800393a:	4413      	add	r3, r2
 800393c:	009b      	lsls	r3, r3, #2
 800393e:	440b      	add	r3, r1
 8003940:	681b      	ldr	r3, [r3, #0]
 8003942:	2b01      	cmp	r3, #1
 8003944:	d907      	bls.n	8003956 <xTaskIncrementTick+0x136>
 8003946:	2301      	movs	r3, #1
 8003948:	617b      	str	r3, [r7, #20]
 800394a:	e004      	b.n	8003956 <xTaskIncrementTick+0x136>
 800394c:	4b10      	ldr	r3, [pc, #64]	; (8003990 <xTaskIncrementTick+0x170>)
 800394e:	681b      	ldr	r3, [r3, #0]
 8003950:	3301      	adds	r3, #1
 8003952:	4a0f      	ldr	r2, [pc, #60]	; (8003990 <xTaskIncrementTick+0x170>)
 8003954:	6013      	str	r3, [r2, #0]
 8003956:	4b0f      	ldr	r3, [pc, #60]	; (8003994 <xTaskIncrementTick+0x174>)
 8003958:	681b      	ldr	r3, [r3, #0]
 800395a:	2b00      	cmp	r3, #0
 800395c:	d001      	beq.n	8003962 <xTaskIncrementTick+0x142>
 800395e:	2301      	movs	r3, #1
 8003960:	617b      	str	r3, [r7, #20]
 8003962:	697b      	ldr	r3, [r7, #20]
 8003964:	4618      	mov	r0, r3
 8003966:	3718      	adds	r7, #24
 8003968:	46bd      	mov	sp, r7
 800396a:	bd80      	pop	{r7, pc}
 800396c:	20000820 	.word	0x20000820
 8003970:	200007fc 	.word	0x200007fc
 8003974:	200007b0 	.word	0x200007b0
 8003978:	200007b4 	.word	0x200007b4
 800397c:	20000810 	.word	0x20000810
 8003980:	20000818 	.word	0x20000818
 8003984:	20000800 	.word	0x20000800
 8003988:	200006fc 	.word	0x200006fc
 800398c:	200006f8 	.word	0x200006f8
 8003990:	20000808 	.word	0x20000808
 8003994:	2000080c 	.word	0x2000080c

08003998 <vTaskSwitchContext>:
 8003998:	b480      	push	{r7}
 800399a:	b087      	sub	sp, #28
 800399c:	af00      	add	r7, sp, #0
 800399e:	4b26      	ldr	r3, [pc, #152]	; (8003a38 <vTaskSwitchContext+0xa0>)
 80039a0:	681b      	ldr	r3, [r3, #0]
 80039a2:	2b00      	cmp	r3, #0
 80039a4:	d003      	beq.n	80039ae <vTaskSwitchContext+0x16>
 80039a6:	4b25      	ldr	r3, [pc, #148]	; (8003a3c <vTaskSwitchContext+0xa4>)
 80039a8:	2201      	movs	r2, #1
 80039aa:	601a      	str	r2, [r3, #0]
 80039ac:	e03e      	b.n	8003a2c <vTaskSwitchContext+0x94>
 80039ae:	4b23      	ldr	r3, [pc, #140]	; (8003a3c <vTaskSwitchContext+0xa4>)
 80039b0:	2200      	movs	r2, #0
 80039b2:	601a      	str	r2, [r3, #0]
 80039b4:	4b22      	ldr	r3, [pc, #136]	; (8003a40 <vTaskSwitchContext+0xa8>)
 80039b6:	681b      	ldr	r3, [r3, #0]
 80039b8:	60fb      	str	r3, [r7, #12]
 80039ba:	68fb      	ldr	r3, [r7, #12]
 80039bc:	fab3 f383 	clz	r3, r3
 80039c0:	72fb      	strb	r3, [r7, #11]
 80039c2:	7afb      	ldrb	r3, [r7, #11]
 80039c4:	f1c3 031f 	rsb	r3, r3, #31
 80039c8:	617b      	str	r3, [r7, #20]
 80039ca:	491e      	ldr	r1, [pc, #120]	; (8003a44 <vTaskSwitchContext+0xac>)
 80039cc:	697a      	ldr	r2, [r7, #20]
 80039ce:	4613      	mov	r3, r2
 80039d0:	009b      	lsls	r3, r3, #2
 80039d2:	4413      	add	r3, r2
 80039d4:	009b      	lsls	r3, r3, #2
 80039d6:	440b      	add	r3, r1
 80039d8:	681b      	ldr	r3, [r3, #0]
 80039da:	2b00      	cmp	r3, #0
 80039dc:	d109      	bne.n	80039f2 <vTaskSwitchContext+0x5a>
 80039de:	f04f 0350 	mov.w	r3, #80	; 0x50
 80039e2:	f383 8811 	msr	BASEPRI, r3
 80039e6:	f3bf 8f6f 	isb	sy
 80039ea:	f3bf 8f4f 	dsb	sy
 80039ee:	607b      	str	r3, [r7, #4]
 80039f0:	e7fe      	b.n	80039f0 <vTaskSwitchContext+0x58>
 80039f2:	697a      	ldr	r2, [r7, #20]
 80039f4:	4613      	mov	r3, r2
 80039f6:	009b      	lsls	r3, r3, #2
 80039f8:	4413      	add	r3, r2
 80039fa:	009b      	lsls	r3, r3, #2
 80039fc:	4a11      	ldr	r2, [pc, #68]	; (8003a44 <vTaskSwitchContext+0xac>)
 80039fe:	4413      	add	r3, r2
 8003a00:	613b      	str	r3, [r7, #16]
 8003a02:	693b      	ldr	r3, [r7, #16]
 8003a04:	685b      	ldr	r3, [r3, #4]
 8003a06:	685a      	ldr	r2, [r3, #4]
 8003a08:	693b      	ldr	r3, [r7, #16]
 8003a0a:	605a      	str	r2, [r3, #4]
 8003a0c:	693b      	ldr	r3, [r7, #16]
 8003a0e:	685a      	ldr	r2, [r3, #4]
 8003a10:	693b      	ldr	r3, [r7, #16]
 8003a12:	3308      	adds	r3, #8
 8003a14:	429a      	cmp	r2, r3
 8003a16:	d104      	bne.n	8003a22 <vTaskSwitchContext+0x8a>
 8003a18:	693b      	ldr	r3, [r7, #16]
 8003a1a:	685b      	ldr	r3, [r3, #4]
 8003a1c:	685a      	ldr	r2, [r3, #4]
 8003a1e:	693b      	ldr	r3, [r7, #16]
 8003a20:	605a      	str	r2, [r3, #4]
 8003a22:	693b      	ldr	r3, [r7, #16]
 8003a24:	685b      	ldr	r3, [r3, #4]
 8003a26:	68db      	ldr	r3, [r3, #12]
 8003a28:	4a07      	ldr	r2, [pc, #28]	; (8003a48 <vTaskSwitchContext+0xb0>)
 8003a2a:	6013      	str	r3, [r2, #0]
 8003a2c:	bf00      	nop
 8003a2e:	371c      	adds	r7, #28
 8003a30:	46bd      	mov	sp, r7
 8003a32:	bc80      	pop	{r7}
 8003a34:	4770      	bx	lr
 8003a36:	bf00      	nop
 8003a38:	20000820 	.word	0x20000820
 8003a3c:	2000080c 	.word	0x2000080c
 8003a40:	20000800 	.word	0x20000800
 8003a44:	200006fc 	.word	0x200006fc
 8003a48:	200006f8 	.word	0x200006f8

08003a4c <prvIdleTask>:
 8003a4c:	b580      	push	{r7, lr}
 8003a4e:	b082      	sub	sp, #8
 8003a50:	af00      	add	r7, sp, #0
 8003a52:	6078      	str	r0, [r7, #4]
 8003a54:	f000 f852 	bl	8003afc <prvCheckTasksWaitingTermination>
 8003a58:	4b06      	ldr	r3, [pc, #24]	; (8003a74 <prvIdleTask+0x28>)
 8003a5a:	681b      	ldr	r3, [r3, #0]
 8003a5c:	2b01      	cmp	r3, #1
 8003a5e:	d9f9      	bls.n	8003a54 <prvIdleTask+0x8>
 8003a60:	4b05      	ldr	r3, [pc, #20]	; (8003a78 <prvIdleTask+0x2c>)
 8003a62:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8003a66:	601a      	str	r2, [r3, #0]
 8003a68:	f3bf 8f4f 	dsb	sy
 8003a6c:	f3bf 8f6f 	isb	sy
 8003a70:	e7f0      	b.n	8003a54 <prvIdleTask+0x8>
 8003a72:	bf00      	nop
 8003a74:	200006fc 	.word	0x200006fc
 8003a78:	e000ed04 	.word	0xe000ed04

08003a7c <prvInitialiseTaskLists>:
 8003a7c:	b580      	push	{r7, lr}
 8003a7e:	b082      	sub	sp, #8
 8003a80:	af00      	add	r7, sp, #0
 8003a82:	2300      	movs	r3, #0
 8003a84:	607b      	str	r3, [r7, #4]
 8003a86:	e00c      	b.n	8003aa2 <prvInitialiseTaskLists+0x26>
 8003a88:	687a      	ldr	r2, [r7, #4]
 8003a8a:	4613      	mov	r3, r2
 8003a8c:	009b      	lsls	r3, r3, #2
 8003a8e:	4413      	add	r3, r2
 8003a90:	009b      	lsls	r3, r3, #2
 8003a92:	4a12      	ldr	r2, [pc, #72]	; (8003adc <prvInitialiseTaskLists+0x60>)
 8003a94:	4413      	add	r3, r2
 8003a96:	4618      	mov	r0, r3
 8003a98:	f7ff fb50 	bl	800313c <vListInitialise>
 8003a9c:	687b      	ldr	r3, [r7, #4]
 8003a9e:	3301      	adds	r3, #1
 8003aa0:	607b      	str	r3, [r7, #4]
 8003aa2:	687b      	ldr	r3, [r7, #4]
 8003aa4:	2b06      	cmp	r3, #6
 8003aa6:	d9ef      	bls.n	8003a88 <prvInitialiseTaskLists+0xc>
 8003aa8:	480d      	ldr	r0, [pc, #52]	; (8003ae0 <prvInitialiseTaskLists+0x64>)
 8003aaa:	f7ff fb47 	bl	800313c <vListInitialise>
 8003aae:	480d      	ldr	r0, [pc, #52]	; (8003ae4 <prvInitialiseTaskLists+0x68>)
 8003ab0:	f7ff fb44 	bl	800313c <vListInitialise>
 8003ab4:	480c      	ldr	r0, [pc, #48]	; (8003ae8 <prvInitialiseTaskLists+0x6c>)
 8003ab6:	f7ff fb41 	bl	800313c <vListInitialise>
 8003aba:	480c      	ldr	r0, [pc, #48]	; (8003aec <prvInitialiseTaskLists+0x70>)
 8003abc:	f7ff fb3e 	bl	800313c <vListInitialise>
 8003ac0:	480b      	ldr	r0, [pc, #44]	; (8003af0 <prvInitialiseTaskLists+0x74>)
 8003ac2:	f7ff fb3b 	bl	800313c <vListInitialise>
 8003ac6:	4b0b      	ldr	r3, [pc, #44]	; (8003af4 <prvInitialiseTaskLists+0x78>)
 8003ac8:	4a05      	ldr	r2, [pc, #20]	; (8003ae0 <prvInitialiseTaskLists+0x64>)
 8003aca:	601a      	str	r2, [r3, #0]
 8003acc:	4b0a      	ldr	r3, [pc, #40]	; (8003af8 <prvInitialiseTaskLists+0x7c>)
 8003ace:	4a05      	ldr	r2, [pc, #20]	; (8003ae4 <prvInitialiseTaskLists+0x68>)
 8003ad0:	601a      	str	r2, [r3, #0]
 8003ad2:	bf00      	nop
 8003ad4:	3708      	adds	r7, #8
 8003ad6:	46bd      	mov	sp, r7
 8003ad8:	bd80      	pop	{r7, pc}
 8003ada:	bf00      	nop
 8003adc:	200006fc 	.word	0x200006fc
 8003ae0:	20000788 	.word	0x20000788
 8003ae4:	2000079c 	.word	0x2000079c
 8003ae8:	200007b8 	.word	0x200007b8
 8003aec:	200007cc 	.word	0x200007cc
 8003af0:	200007e4 	.word	0x200007e4
 8003af4:	200007b0 	.word	0x200007b0
 8003af8:	200007b4 	.word	0x200007b4

08003afc <prvCheckTasksWaitingTermination>:
 8003afc:	b580      	push	{r7, lr}
 8003afe:	b082      	sub	sp, #8
 8003b00:	af00      	add	r7, sp, #0
 8003b02:	e019      	b.n	8003b38 <prvCheckTasksWaitingTermination+0x3c>
 8003b04:	f000 f9c8 	bl	8003e98 <vPortEnterCritical>
 8003b08:	4b0f      	ldr	r3, [pc, #60]	; (8003b48 <prvCheckTasksWaitingTermination+0x4c>)
 8003b0a:	68db      	ldr	r3, [r3, #12]
 8003b0c:	68db      	ldr	r3, [r3, #12]
 8003b0e:	607b      	str	r3, [r7, #4]
 8003b10:	687b      	ldr	r3, [r7, #4]
 8003b12:	3304      	adds	r3, #4
 8003b14:	4618      	mov	r0, r3
 8003b16:	f7ff fb97 	bl	8003248 <uxListRemove>
 8003b1a:	4b0c      	ldr	r3, [pc, #48]	; (8003b4c <prvCheckTasksWaitingTermination+0x50>)
 8003b1c:	681b      	ldr	r3, [r3, #0]
 8003b1e:	3b01      	subs	r3, #1
 8003b20:	4a0a      	ldr	r2, [pc, #40]	; (8003b4c <prvCheckTasksWaitingTermination+0x50>)
 8003b22:	6013      	str	r3, [r2, #0]
 8003b24:	4b0a      	ldr	r3, [pc, #40]	; (8003b50 <prvCheckTasksWaitingTermination+0x54>)
 8003b26:	681b      	ldr	r3, [r3, #0]
 8003b28:	3b01      	subs	r3, #1
 8003b2a:	4a09      	ldr	r2, [pc, #36]	; (8003b50 <prvCheckTasksWaitingTermination+0x54>)
 8003b2c:	6013      	str	r3, [r2, #0]
 8003b2e:	f000 f9e1 	bl	8003ef4 <vPortExitCritical>
 8003b32:	6878      	ldr	r0, [r7, #4]
 8003b34:	f000 f80e 	bl	8003b54 <prvDeleteTCB>
 8003b38:	4b05      	ldr	r3, [pc, #20]	; (8003b50 <prvCheckTasksWaitingTermination+0x54>)
 8003b3a:	681b      	ldr	r3, [r3, #0]
 8003b3c:	2b00      	cmp	r3, #0
 8003b3e:	d1e1      	bne.n	8003b04 <prvCheckTasksWaitingTermination+0x8>
 8003b40:	bf00      	nop
 8003b42:	3708      	adds	r7, #8
 8003b44:	46bd      	mov	sp, r7
 8003b46:	bd80      	pop	{r7, pc}
 8003b48:	200007cc 	.word	0x200007cc
 8003b4c:	200007f8 	.word	0x200007f8
 8003b50:	200007e0 	.word	0x200007e0

08003b54 <prvDeleteTCB>:
 8003b54:	b580      	push	{r7, lr}
 8003b56:	b084      	sub	sp, #16
 8003b58:	af00      	add	r7, sp, #0
 8003b5a:	6078      	str	r0, [r7, #4]
 8003b5c:	687b      	ldr	r3, [r7, #4]
 8003b5e:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8003b62:	2b00      	cmp	r3, #0
 8003b64:	d108      	bne.n	8003b78 <prvDeleteTCB+0x24>
 8003b66:	687b      	ldr	r3, [r7, #4]
 8003b68:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003b6a:	4618      	mov	r0, r3
 8003b6c:	f000 fb10 	bl	8004190 <vPortFree>
 8003b70:	6878      	ldr	r0, [r7, #4]
 8003b72:	f000 fb0d 	bl	8004190 <vPortFree>
 8003b76:	e017      	b.n	8003ba8 <prvDeleteTCB+0x54>
 8003b78:	687b      	ldr	r3, [r7, #4]
 8003b7a:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8003b7e:	2b01      	cmp	r3, #1
 8003b80:	d103      	bne.n	8003b8a <prvDeleteTCB+0x36>
 8003b82:	6878      	ldr	r0, [r7, #4]
 8003b84:	f000 fb04 	bl	8004190 <vPortFree>
 8003b88:	e00e      	b.n	8003ba8 <prvDeleteTCB+0x54>
 8003b8a:	687b      	ldr	r3, [r7, #4]
 8003b8c:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8003b90:	2b02      	cmp	r3, #2
 8003b92:	d009      	beq.n	8003ba8 <prvDeleteTCB+0x54>
 8003b94:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003b98:	f383 8811 	msr	BASEPRI, r3
 8003b9c:	f3bf 8f6f 	isb	sy
 8003ba0:	f3bf 8f4f 	dsb	sy
 8003ba4:	60fb      	str	r3, [r7, #12]
 8003ba6:	e7fe      	b.n	8003ba6 <prvDeleteTCB+0x52>
 8003ba8:	bf00      	nop
 8003baa:	3710      	adds	r7, #16
 8003bac:	46bd      	mov	sp, r7
 8003bae:	bd80      	pop	{r7, pc}

08003bb0 <prvResetNextTaskUnblockTime>:
 8003bb0:	b480      	push	{r7}
 8003bb2:	b083      	sub	sp, #12
 8003bb4:	af00      	add	r7, sp, #0
 8003bb6:	4b0e      	ldr	r3, [pc, #56]	; (8003bf0 <prvResetNextTaskUnblockTime+0x40>)
 8003bb8:	681b      	ldr	r3, [r3, #0]
 8003bba:	681b      	ldr	r3, [r3, #0]
 8003bbc:	2b00      	cmp	r3, #0
 8003bbe:	d101      	bne.n	8003bc4 <prvResetNextTaskUnblockTime+0x14>
 8003bc0:	2301      	movs	r3, #1
 8003bc2:	e000      	b.n	8003bc6 <prvResetNextTaskUnblockTime+0x16>
 8003bc4:	2300      	movs	r3, #0
 8003bc6:	2b00      	cmp	r3, #0
 8003bc8:	d004      	beq.n	8003bd4 <prvResetNextTaskUnblockTime+0x24>
 8003bca:	4b0a      	ldr	r3, [pc, #40]	; (8003bf4 <prvResetNextTaskUnblockTime+0x44>)
 8003bcc:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8003bd0:	601a      	str	r2, [r3, #0]
 8003bd2:	e008      	b.n	8003be6 <prvResetNextTaskUnblockTime+0x36>
 8003bd4:	4b06      	ldr	r3, [pc, #24]	; (8003bf0 <prvResetNextTaskUnblockTime+0x40>)
 8003bd6:	681b      	ldr	r3, [r3, #0]
 8003bd8:	68db      	ldr	r3, [r3, #12]
 8003bda:	68db      	ldr	r3, [r3, #12]
 8003bdc:	607b      	str	r3, [r7, #4]
 8003bde:	687b      	ldr	r3, [r7, #4]
 8003be0:	685b      	ldr	r3, [r3, #4]
 8003be2:	4a04      	ldr	r2, [pc, #16]	; (8003bf4 <prvResetNextTaskUnblockTime+0x44>)
 8003be4:	6013      	str	r3, [r2, #0]
 8003be6:	bf00      	nop
 8003be8:	370c      	adds	r7, #12
 8003bea:	46bd      	mov	sp, r7
 8003bec:	bc80      	pop	{r7}
 8003bee:	4770      	bx	lr
 8003bf0:	200007b0 	.word	0x200007b0
 8003bf4:	20000818 	.word	0x20000818

08003bf8 <prvAddCurrentTaskToDelayedList>:
 8003bf8:	b580      	push	{r7, lr}
 8003bfa:	b084      	sub	sp, #16
 8003bfc:	af00      	add	r7, sp, #0
 8003bfe:	6078      	str	r0, [r7, #4]
 8003c00:	6039      	str	r1, [r7, #0]
 8003c02:	4b29      	ldr	r3, [pc, #164]	; (8003ca8 <prvAddCurrentTaskToDelayedList+0xb0>)
 8003c04:	681b      	ldr	r3, [r3, #0]
 8003c06:	60fb      	str	r3, [r7, #12]
 8003c08:	4b28      	ldr	r3, [pc, #160]	; (8003cac <prvAddCurrentTaskToDelayedList+0xb4>)
 8003c0a:	681b      	ldr	r3, [r3, #0]
 8003c0c:	3304      	adds	r3, #4
 8003c0e:	4618      	mov	r0, r3
 8003c10:	f7ff fb1a 	bl	8003248 <uxListRemove>
 8003c14:	4603      	mov	r3, r0
 8003c16:	2b00      	cmp	r3, #0
 8003c18:	d10b      	bne.n	8003c32 <prvAddCurrentTaskToDelayedList+0x3a>
 8003c1a:	4b24      	ldr	r3, [pc, #144]	; (8003cac <prvAddCurrentTaskToDelayedList+0xb4>)
 8003c1c:	681b      	ldr	r3, [r3, #0]
 8003c1e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003c20:	2201      	movs	r2, #1
 8003c22:	fa02 f303 	lsl.w	r3, r2, r3
 8003c26:	43da      	mvns	r2, r3
 8003c28:	4b21      	ldr	r3, [pc, #132]	; (8003cb0 <prvAddCurrentTaskToDelayedList+0xb8>)
 8003c2a:	681b      	ldr	r3, [r3, #0]
 8003c2c:	4013      	ands	r3, r2
 8003c2e:	4a20      	ldr	r2, [pc, #128]	; (8003cb0 <prvAddCurrentTaskToDelayedList+0xb8>)
 8003c30:	6013      	str	r3, [r2, #0]
 8003c32:	687b      	ldr	r3, [r7, #4]
 8003c34:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8003c38:	d10a      	bne.n	8003c50 <prvAddCurrentTaskToDelayedList+0x58>
 8003c3a:	683b      	ldr	r3, [r7, #0]
 8003c3c:	2b00      	cmp	r3, #0
 8003c3e:	d007      	beq.n	8003c50 <prvAddCurrentTaskToDelayedList+0x58>
 8003c40:	4b1a      	ldr	r3, [pc, #104]	; (8003cac <prvAddCurrentTaskToDelayedList+0xb4>)
 8003c42:	681b      	ldr	r3, [r3, #0]
 8003c44:	3304      	adds	r3, #4
 8003c46:	4619      	mov	r1, r3
 8003c48:	481a      	ldr	r0, [pc, #104]	; (8003cb4 <prvAddCurrentTaskToDelayedList+0xbc>)
 8003c4a:	f7ff faa2 	bl	8003192 <vListInsertEnd>
 8003c4e:	e026      	b.n	8003c9e <prvAddCurrentTaskToDelayedList+0xa6>
 8003c50:	68fa      	ldr	r2, [r7, #12]
 8003c52:	687b      	ldr	r3, [r7, #4]
 8003c54:	4413      	add	r3, r2
 8003c56:	60bb      	str	r3, [r7, #8]
 8003c58:	4b14      	ldr	r3, [pc, #80]	; (8003cac <prvAddCurrentTaskToDelayedList+0xb4>)
 8003c5a:	681b      	ldr	r3, [r3, #0]
 8003c5c:	68ba      	ldr	r2, [r7, #8]
 8003c5e:	605a      	str	r2, [r3, #4]
 8003c60:	68ba      	ldr	r2, [r7, #8]
 8003c62:	68fb      	ldr	r3, [r7, #12]
 8003c64:	429a      	cmp	r2, r3
 8003c66:	d209      	bcs.n	8003c7c <prvAddCurrentTaskToDelayedList+0x84>
 8003c68:	4b13      	ldr	r3, [pc, #76]	; (8003cb8 <prvAddCurrentTaskToDelayedList+0xc0>)
 8003c6a:	681a      	ldr	r2, [r3, #0]
 8003c6c:	4b0f      	ldr	r3, [pc, #60]	; (8003cac <prvAddCurrentTaskToDelayedList+0xb4>)
 8003c6e:	681b      	ldr	r3, [r3, #0]
 8003c70:	3304      	adds	r3, #4
 8003c72:	4619      	mov	r1, r3
 8003c74:	4610      	mov	r0, r2
 8003c76:	f7ff faaf 	bl	80031d8 <vListInsert>
 8003c7a:	e010      	b.n	8003c9e <prvAddCurrentTaskToDelayedList+0xa6>
 8003c7c:	4b0f      	ldr	r3, [pc, #60]	; (8003cbc <prvAddCurrentTaskToDelayedList+0xc4>)
 8003c7e:	681a      	ldr	r2, [r3, #0]
 8003c80:	4b0a      	ldr	r3, [pc, #40]	; (8003cac <prvAddCurrentTaskToDelayedList+0xb4>)
 8003c82:	681b      	ldr	r3, [r3, #0]
 8003c84:	3304      	adds	r3, #4
 8003c86:	4619      	mov	r1, r3
 8003c88:	4610      	mov	r0, r2
 8003c8a:	f7ff faa5 	bl	80031d8 <vListInsert>
 8003c8e:	4b0c      	ldr	r3, [pc, #48]	; (8003cc0 <prvAddCurrentTaskToDelayedList+0xc8>)
 8003c90:	681b      	ldr	r3, [r3, #0]
 8003c92:	68ba      	ldr	r2, [r7, #8]
 8003c94:	429a      	cmp	r2, r3
 8003c96:	d202      	bcs.n	8003c9e <prvAddCurrentTaskToDelayedList+0xa6>
 8003c98:	4a09      	ldr	r2, [pc, #36]	; (8003cc0 <prvAddCurrentTaskToDelayedList+0xc8>)
 8003c9a:	68bb      	ldr	r3, [r7, #8]
 8003c9c:	6013      	str	r3, [r2, #0]
 8003c9e:	bf00      	nop
 8003ca0:	3710      	adds	r7, #16
 8003ca2:	46bd      	mov	sp, r7
 8003ca4:	bd80      	pop	{r7, pc}
 8003ca6:	bf00      	nop
 8003ca8:	200007fc 	.word	0x200007fc
 8003cac:	200006f8 	.word	0x200006f8
 8003cb0:	20000800 	.word	0x20000800
 8003cb4:	200007e4 	.word	0x200007e4
 8003cb8:	200007b4 	.word	0x200007b4
 8003cbc:	200007b0 	.word	0x200007b0
 8003cc0:	20000818 	.word	0x20000818

08003cc4 <pxPortInitialiseStack>:
 8003cc4:	b480      	push	{r7}
 8003cc6:	b085      	sub	sp, #20
 8003cc8:	af00      	add	r7, sp, #0
 8003cca:	60f8      	str	r0, [r7, #12]
 8003ccc:	60b9      	str	r1, [r7, #8]
 8003cce:	607a      	str	r2, [r7, #4]
 8003cd0:	68fb      	ldr	r3, [r7, #12]
 8003cd2:	3b04      	subs	r3, #4
 8003cd4:	60fb      	str	r3, [r7, #12]
 8003cd6:	68fb      	ldr	r3, [r7, #12]
 8003cd8:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8003cdc:	601a      	str	r2, [r3, #0]
 8003cde:	68fb      	ldr	r3, [r7, #12]
 8003ce0:	3b04      	subs	r3, #4
 8003ce2:	60fb      	str	r3, [r7, #12]
 8003ce4:	68bb      	ldr	r3, [r7, #8]
 8003ce6:	f023 0201 	bic.w	r2, r3, #1
 8003cea:	68fb      	ldr	r3, [r7, #12]
 8003cec:	601a      	str	r2, [r3, #0]
 8003cee:	68fb      	ldr	r3, [r7, #12]
 8003cf0:	3b04      	subs	r3, #4
 8003cf2:	60fb      	str	r3, [r7, #12]
 8003cf4:	4a08      	ldr	r2, [pc, #32]	; (8003d18 <pxPortInitialiseStack+0x54>)
 8003cf6:	68fb      	ldr	r3, [r7, #12]
 8003cf8:	601a      	str	r2, [r3, #0]
 8003cfa:	68fb      	ldr	r3, [r7, #12]
 8003cfc:	3b14      	subs	r3, #20
 8003cfe:	60fb      	str	r3, [r7, #12]
 8003d00:	687a      	ldr	r2, [r7, #4]
 8003d02:	68fb      	ldr	r3, [r7, #12]
 8003d04:	601a      	str	r2, [r3, #0]
 8003d06:	68fb      	ldr	r3, [r7, #12]
 8003d08:	3b20      	subs	r3, #32
 8003d0a:	60fb      	str	r3, [r7, #12]
 8003d0c:	68fb      	ldr	r3, [r7, #12]
 8003d0e:	4618      	mov	r0, r3
 8003d10:	3714      	adds	r7, #20
 8003d12:	46bd      	mov	sp, r7
 8003d14:	bc80      	pop	{r7}
 8003d16:	4770      	bx	lr
 8003d18:	08003d1d 	.word	0x08003d1d

08003d1c <prvTaskExitError>:
 8003d1c:	b480      	push	{r7}
 8003d1e:	b085      	sub	sp, #20
 8003d20:	af00      	add	r7, sp, #0
 8003d22:	2300      	movs	r3, #0
 8003d24:	607b      	str	r3, [r7, #4]
 8003d26:	4b10      	ldr	r3, [pc, #64]	; (8003d68 <prvTaskExitError+0x4c>)
 8003d28:	681b      	ldr	r3, [r3, #0]
 8003d2a:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8003d2e:	d009      	beq.n	8003d44 <prvTaskExitError+0x28>
 8003d30:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003d34:	f383 8811 	msr	BASEPRI, r3
 8003d38:	f3bf 8f6f 	isb	sy
 8003d3c:	f3bf 8f4f 	dsb	sy
 8003d40:	60fb      	str	r3, [r7, #12]
 8003d42:	e7fe      	b.n	8003d42 <prvTaskExitError+0x26>
 8003d44:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003d48:	f383 8811 	msr	BASEPRI, r3
 8003d4c:	f3bf 8f6f 	isb	sy
 8003d50:	f3bf 8f4f 	dsb	sy
 8003d54:	60bb      	str	r3, [r7, #8]
 8003d56:	bf00      	nop
 8003d58:	687b      	ldr	r3, [r7, #4]
 8003d5a:	2b00      	cmp	r3, #0
 8003d5c:	d0fc      	beq.n	8003d58 <prvTaskExitError+0x3c>
 8003d5e:	bf00      	nop
 8003d60:	3714      	adds	r7, #20
 8003d62:	46bd      	mov	sp, r7
 8003d64:	bc80      	pop	{r7}
 8003d66:	4770      	bx	lr
 8003d68:	20000010 	.word	0x20000010
 8003d6c:	00000000 	.word	0x00000000

08003d70 <SVC_Handler>:
 8003d70:	4b07      	ldr	r3, [pc, #28]	; (8003d90 <pxCurrentTCBConst2>)
 8003d72:	6819      	ldr	r1, [r3, #0]
 8003d74:	6808      	ldr	r0, [r1, #0]
 8003d76:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
 8003d7a:	f380 8809 	msr	PSP, r0
 8003d7e:	f3bf 8f6f 	isb	sy
 8003d82:	f04f 0000 	mov.w	r0, #0
 8003d86:	f380 8811 	msr	BASEPRI, r0
 8003d8a:	f04e 0e0d 	orr.w	lr, lr, #13
 8003d8e:	4770      	bx	lr

08003d90 <pxCurrentTCBConst2>:
 8003d90:	200006f8 	.word	0x200006f8
 8003d94:	bf00      	nop
 8003d96:	bf00      	nop

08003d98 <prvPortStartFirstTask>:
 8003d98:	4806      	ldr	r0, [pc, #24]	; (8003db4 <prvPortStartFirstTask+0x1c>)
 8003d9a:	6800      	ldr	r0, [r0, #0]
 8003d9c:	6800      	ldr	r0, [r0, #0]
 8003d9e:	f380 8808 	msr	MSP, r0
 8003da2:	b662      	cpsie	i
 8003da4:	b661      	cpsie	f
 8003da6:	f3bf 8f4f 	dsb	sy
 8003daa:	f3bf 8f6f 	isb	sy
 8003dae:	df00      	svc	0
 8003db0:	bf00      	nop
 8003db2:	bf00      	nop
 8003db4:	e000ed08 	.word	0xe000ed08

08003db8 <xPortStartScheduler>:
 8003db8:	b580      	push	{r7, lr}
 8003dba:	b084      	sub	sp, #16
 8003dbc:	af00      	add	r7, sp, #0
 8003dbe:	4b31      	ldr	r3, [pc, #196]	; (8003e84 <xPortStartScheduler+0xcc>)
 8003dc0:	60fb      	str	r3, [r7, #12]
 8003dc2:	68fb      	ldr	r3, [r7, #12]
 8003dc4:	781b      	ldrb	r3, [r3, #0]
 8003dc6:	b2db      	uxtb	r3, r3
 8003dc8:	607b      	str	r3, [r7, #4]
 8003dca:	68fb      	ldr	r3, [r7, #12]
 8003dcc:	22ff      	movs	r2, #255	; 0xff
 8003dce:	701a      	strb	r2, [r3, #0]
 8003dd0:	68fb      	ldr	r3, [r7, #12]
 8003dd2:	781b      	ldrb	r3, [r3, #0]
 8003dd4:	b2db      	uxtb	r3, r3
 8003dd6:	70fb      	strb	r3, [r7, #3]
 8003dd8:	78fb      	ldrb	r3, [r7, #3]
 8003dda:	b2db      	uxtb	r3, r3
 8003ddc:	f003 0350 	and.w	r3, r3, #80	; 0x50
 8003de0:	b2da      	uxtb	r2, r3
 8003de2:	4b29      	ldr	r3, [pc, #164]	; (8003e88 <xPortStartScheduler+0xd0>)
 8003de4:	701a      	strb	r2, [r3, #0]
 8003de6:	4b29      	ldr	r3, [pc, #164]	; (8003e8c <xPortStartScheduler+0xd4>)
 8003de8:	2207      	movs	r2, #7
 8003dea:	601a      	str	r2, [r3, #0]
 8003dec:	e009      	b.n	8003e02 <xPortStartScheduler+0x4a>
 8003dee:	4b27      	ldr	r3, [pc, #156]	; (8003e8c <xPortStartScheduler+0xd4>)
 8003df0:	681b      	ldr	r3, [r3, #0]
 8003df2:	3b01      	subs	r3, #1
 8003df4:	4a25      	ldr	r2, [pc, #148]	; (8003e8c <xPortStartScheduler+0xd4>)
 8003df6:	6013      	str	r3, [r2, #0]
 8003df8:	78fb      	ldrb	r3, [r7, #3]
 8003dfa:	b2db      	uxtb	r3, r3
 8003dfc:	005b      	lsls	r3, r3, #1
 8003dfe:	b2db      	uxtb	r3, r3
 8003e00:	70fb      	strb	r3, [r7, #3]
 8003e02:	78fb      	ldrb	r3, [r7, #3]
 8003e04:	b2db      	uxtb	r3, r3
 8003e06:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003e0a:	2b80      	cmp	r3, #128	; 0x80
 8003e0c:	d0ef      	beq.n	8003dee <xPortStartScheduler+0x36>
 8003e0e:	4b1f      	ldr	r3, [pc, #124]	; (8003e8c <xPortStartScheduler+0xd4>)
 8003e10:	681b      	ldr	r3, [r3, #0]
 8003e12:	f1c3 0307 	rsb	r3, r3, #7
 8003e16:	2b04      	cmp	r3, #4
 8003e18:	d009      	beq.n	8003e2e <xPortStartScheduler+0x76>
 8003e1a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003e1e:	f383 8811 	msr	BASEPRI, r3
 8003e22:	f3bf 8f6f 	isb	sy
 8003e26:	f3bf 8f4f 	dsb	sy
 8003e2a:	60bb      	str	r3, [r7, #8]
 8003e2c:	e7fe      	b.n	8003e2c <xPortStartScheduler+0x74>
 8003e2e:	4b17      	ldr	r3, [pc, #92]	; (8003e8c <xPortStartScheduler+0xd4>)
 8003e30:	681b      	ldr	r3, [r3, #0]
 8003e32:	021b      	lsls	r3, r3, #8
 8003e34:	4a15      	ldr	r2, [pc, #84]	; (8003e8c <xPortStartScheduler+0xd4>)
 8003e36:	6013      	str	r3, [r2, #0]
 8003e38:	4b14      	ldr	r3, [pc, #80]	; (8003e8c <xPortStartScheduler+0xd4>)
 8003e3a:	681b      	ldr	r3, [r3, #0]
 8003e3c:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8003e40:	4a12      	ldr	r2, [pc, #72]	; (8003e8c <xPortStartScheduler+0xd4>)
 8003e42:	6013      	str	r3, [r2, #0]
 8003e44:	687b      	ldr	r3, [r7, #4]
 8003e46:	b2da      	uxtb	r2, r3
 8003e48:	68fb      	ldr	r3, [r7, #12]
 8003e4a:	701a      	strb	r2, [r3, #0]
 8003e4c:	4b10      	ldr	r3, [pc, #64]	; (8003e90 <xPortStartScheduler+0xd8>)
 8003e4e:	681b      	ldr	r3, [r3, #0]
 8003e50:	4a0f      	ldr	r2, [pc, #60]	; (8003e90 <xPortStartScheduler+0xd8>)
 8003e52:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8003e56:	6013      	str	r3, [r2, #0]
 8003e58:	4b0d      	ldr	r3, [pc, #52]	; (8003e90 <xPortStartScheduler+0xd8>)
 8003e5a:	681b      	ldr	r3, [r3, #0]
 8003e5c:	4a0c      	ldr	r2, [pc, #48]	; (8003e90 <xPortStartScheduler+0xd8>)
 8003e5e:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 8003e62:	6013      	str	r3, [r2, #0]
 8003e64:	f000 f8b0 	bl	8003fc8 <vPortSetupTimerInterrupt>
 8003e68:	4b0a      	ldr	r3, [pc, #40]	; (8003e94 <xPortStartScheduler+0xdc>)
 8003e6a:	2200      	movs	r2, #0
 8003e6c:	601a      	str	r2, [r3, #0]
 8003e6e:	f7ff ff93 	bl	8003d98 <prvPortStartFirstTask>
 8003e72:	f7ff fd91 	bl	8003998 <vTaskSwitchContext>
 8003e76:	f7ff ff51 	bl	8003d1c <prvTaskExitError>
 8003e7a:	2300      	movs	r3, #0
 8003e7c:	4618      	mov	r0, r3
 8003e7e:	3710      	adds	r7, #16
 8003e80:	46bd      	mov	sp, r7
 8003e82:	bd80      	pop	{r7, pc}
 8003e84:	e000e400 	.word	0xe000e400
 8003e88:	20000824 	.word	0x20000824
 8003e8c:	20000828 	.word	0x20000828
 8003e90:	e000ed20 	.word	0xe000ed20
 8003e94:	20000010 	.word	0x20000010

08003e98 <vPortEnterCritical>:
 8003e98:	b480      	push	{r7}
 8003e9a:	b083      	sub	sp, #12
 8003e9c:	af00      	add	r7, sp, #0
 8003e9e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003ea2:	f383 8811 	msr	BASEPRI, r3
 8003ea6:	f3bf 8f6f 	isb	sy
 8003eaa:	f3bf 8f4f 	dsb	sy
 8003eae:	607b      	str	r3, [r7, #4]
 8003eb0:	4b0e      	ldr	r3, [pc, #56]	; (8003eec <vPortEnterCritical+0x54>)
 8003eb2:	681b      	ldr	r3, [r3, #0]
 8003eb4:	3301      	adds	r3, #1
 8003eb6:	4a0d      	ldr	r2, [pc, #52]	; (8003eec <vPortEnterCritical+0x54>)
 8003eb8:	6013      	str	r3, [r2, #0]
 8003eba:	4b0c      	ldr	r3, [pc, #48]	; (8003eec <vPortEnterCritical+0x54>)
 8003ebc:	681b      	ldr	r3, [r3, #0]
 8003ebe:	2b01      	cmp	r3, #1
 8003ec0:	d10e      	bne.n	8003ee0 <vPortEnterCritical+0x48>
 8003ec2:	4b0b      	ldr	r3, [pc, #44]	; (8003ef0 <vPortEnterCritical+0x58>)
 8003ec4:	681b      	ldr	r3, [r3, #0]
 8003ec6:	b2db      	uxtb	r3, r3
 8003ec8:	2b00      	cmp	r3, #0
 8003eca:	d009      	beq.n	8003ee0 <vPortEnterCritical+0x48>
 8003ecc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003ed0:	f383 8811 	msr	BASEPRI, r3
 8003ed4:	f3bf 8f6f 	isb	sy
 8003ed8:	f3bf 8f4f 	dsb	sy
 8003edc:	603b      	str	r3, [r7, #0]
 8003ede:	e7fe      	b.n	8003ede <vPortEnterCritical+0x46>
 8003ee0:	bf00      	nop
 8003ee2:	370c      	adds	r7, #12
 8003ee4:	46bd      	mov	sp, r7
 8003ee6:	bc80      	pop	{r7}
 8003ee8:	4770      	bx	lr
 8003eea:	bf00      	nop
 8003eec:	20000010 	.word	0x20000010
 8003ef0:	e000ed04 	.word	0xe000ed04

08003ef4 <vPortExitCritical>:
 8003ef4:	b480      	push	{r7}
 8003ef6:	b083      	sub	sp, #12
 8003ef8:	af00      	add	r7, sp, #0
 8003efa:	4b10      	ldr	r3, [pc, #64]	; (8003f3c <vPortExitCritical+0x48>)
 8003efc:	681b      	ldr	r3, [r3, #0]
 8003efe:	2b00      	cmp	r3, #0
 8003f00:	d109      	bne.n	8003f16 <vPortExitCritical+0x22>
 8003f02:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003f06:	f383 8811 	msr	BASEPRI, r3
 8003f0a:	f3bf 8f6f 	isb	sy
 8003f0e:	f3bf 8f4f 	dsb	sy
 8003f12:	607b      	str	r3, [r7, #4]
 8003f14:	e7fe      	b.n	8003f14 <vPortExitCritical+0x20>
 8003f16:	4b09      	ldr	r3, [pc, #36]	; (8003f3c <vPortExitCritical+0x48>)
 8003f18:	681b      	ldr	r3, [r3, #0]
 8003f1a:	3b01      	subs	r3, #1
 8003f1c:	4a07      	ldr	r2, [pc, #28]	; (8003f3c <vPortExitCritical+0x48>)
 8003f1e:	6013      	str	r3, [r2, #0]
 8003f20:	4b06      	ldr	r3, [pc, #24]	; (8003f3c <vPortExitCritical+0x48>)
 8003f22:	681b      	ldr	r3, [r3, #0]
 8003f24:	2b00      	cmp	r3, #0
 8003f26:	d104      	bne.n	8003f32 <vPortExitCritical+0x3e>
 8003f28:	2300      	movs	r3, #0
 8003f2a:	603b      	str	r3, [r7, #0]
 8003f2c:	683b      	ldr	r3, [r7, #0]
 8003f2e:	f383 8811 	msr	BASEPRI, r3
 8003f32:	bf00      	nop
 8003f34:	370c      	adds	r7, #12
 8003f36:	46bd      	mov	sp, r7
 8003f38:	bc80      	pop	{r7}
 8003f3a:	4770      	bx	lr
 8003f3c:	20000010 	.word	0x20000010

08003f40 <PendSV_Handler>:
 8003f40:	f3ef 8009 	mrs	r0, PSP
 8003f44:	f3bf 8f6f 	isb	sy
 8003f48:	4b0d      	ldr	r3, [pc, #52]	; (8003f80 <pxCurrentTCBConst>)
 8003f4a:	681a      	ldr	r2, [r3, #0]
 8003f4c:	e920 0ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
 8003f50:	6010      	str	r0, [r2, #0]
 8003f52:	e92d 4008 	stmdb	sp!, {r3, lr}
 8003f56:	f04f 0050 	mov.w	r0, #80	; 0x50
 8003f5a:	f380 8811 	msr	BASEPRI, r0
 8003f5e:	f7ff fd1b 	bl	8003998 <vTaskSwitchContext>
 8003f62:	f04f 0000 	mov.w	r0, #0
 8003f66:	f380 8811 	msr	BASEPRI, r0
 8003f6a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8003f6e:	6819      	ldr	r1, [r3, #0]
 8003f70:	6808      	ldr	r0, [r1, #0]
 8003f72:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
 8003f76:	f380 8809 	msr	PSP, r0
 8003f7a:	f3bf 8f6f 	isb	sy
 8003f7e:	4770      	bx	lr

08003f80 <pxCurrentTCBConst>:
 8003f80:	200006f8 	.word	0x200006f8
 8003f84:	bf00      	nop
 8003f86:	bf00      	nop

08003f88 <SysTick_Handler>:
 8003f88:	b580      	push	{r7, lr}
 8003f8a:	b082      	sub	sp, #8
 8003f8c:	af00      	add	r7, sp, #0
 8003f8e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003f92:	f383 8811 	msr	BASEPRI, r3
 8003f96:	f3bf 8f6f 	isb	sy
 8003f9a:	f3bf 8f4f 	dsb	sy
 8003f9e:	607b      	str	r3, [r7, #4]
 8003fa0:	f7ff fc3e 	bl	8003820 <xTaskIncrementTick>
 8003fa4:	4603      	mov	r3, r0
 8003fa6:	2b00      	cmp	r3, #0
 8003fa8:	d003      	beq.n	8003fb2 <SysTick_Handler+0x2a>
 8003faa:	4b06      	ldr	r3, [pc, #24]	; (8003fc4 <SysTick_Handler+0x3c>)
 8003fac:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8003fb0:	601a      	str	r2, [r3, #0]
 8003fb2:	2300      	movs	r3, #0
 8003fb4:	603b      	str	r3, [r7, #0]
 8003fb6:	683b      	ldr	r3, [r7, #0]
 8003fb8:	f383 8811 	msr	BASEPRI, r3
 8003fbc:	bf00      	nop
 8003fbe:	3708      	adds	r7, #8
 8003fc0:	46bd      	mov	sp, r7
 8003fc2:	bd80      	pop	{r7, pc}
 8003fc4:	e000ed04 	.word	0xe000ed04

08003fc8 <vPortSetupTimerInterrupt>:
 8003fc8:	b480      	push	{r7}
 8003fca:	af00      	add	r7, sp, #0
 8003fcc:	4b0a      	ldr	r3, [pc, #40]	; (8003ff8 <vPortSetupTimerInterrupt+0x30>)
 8003fce:	2200      	movs	r2, #0
 8003fd0:	601a      	str	r2, [r3, #0]
 8003fd2:	4b0a      	ldr	r3, [pc, #40]	; (8003ffc <vPortSetupTimerInterrupt+0x34>)
 8003fd4:	2200      	movs	r2, #0
 8003fd6:	601a      	str	r2, [r3, #0]
 8003fd8:	4b09      	ldr	r3, [pc, #36]	; (8004000 <vPortSetupTimerInterrupt+0x38>)
 8003fda:	681b      	ldr	r3, [r3, #0]
 8003fdc:	4a09      	ldr	r2, [pc, #36]	; (8004004 <vPortSetupTimerInterrupt+0x3c>)
 8003fde:	fba2 2303 	umull	r2, r3, r2, r3
 8003fe2:	099b      	lsrs	r3, r3, #6
 8003fe4:	4a08      	ldr	r2, [pc, #32]	; (8004008 <vPortSetupTimerInterrupt+0x40>)
 8003fe6:	3b01      	subs	r3, #1
 8003fe8:	6013      	str	r3, [r2, #0]
 8003fea:	4b03      	ldr	r3, [pc, #12]	; (8003ff8 <vPortSetupTimerInterrupt+0x30>)
 8003fec:	2207      	movs	r2, #7
 8003fee:	601a      	str	r2, [r3, #0]
 8003ff0:	bf00      	nop
 8003ff2:	46bd      	mov	sp, r7
 8003ff4:	bc80      	pop	{r7}
 8003ff6:	4770      	bx	lr
 8003ff8:	e000e010 	.word	0xe000e010
 8003ffc:	e000e018 	.word	0xe000e018
 8004000:	20000004 	.word	0x20000004
 8004004:	10624dd3 	.word	0x10624dd3
 8004008:	e000e014 	.word	0xe000e014

0800400c <pvPortMalloc>:
 800400c:	b580      	push	{r7, lr}
 800400e:	b08a      	sub	sp, #40	; 0x28
 8004010:	af00      	add	r7, sp, #0
 8004012:	6078      	str	r0, [r7, #4]
 8004014:	2300      	movs	r3, #0
 8004016:	61fb      	str	r3, [r7, #28]
 8004018:	f7ff fb58 	bl	80036cc <vTaskSuspendAll>
 800401c:	4b57      	ldr	r3, [pc, #348]	; (800417c <pvPortMalloc+0x170>)
 800401e:	681b      	ldr	r3, [r3, #0]
 8004020:	2b00      	cmp	r3, #0
 8004022:	d101      	bne.n	8004028 <pvPortMalloc+0x1c>
 8004024:	f000 f90c 	bl	8004240 <prvHeapInit>
 8004028:	4b55      	ldr	r3, [pc, #340]	; (8004180 <pvPortMalloc+0x174>)
 800402a:	681a      	ldr	r2, [r3, #0]
 800402c:	687b      	ldr	r3, [r7, #4]
 800402e:	4013      	ands	r3, r2
 8004030:	2b00      	cmp	r3, #0
 8004032:	f040 808c 	bne.w	800414e <pvPortMalloc+0x142>
 8004036:	687b      	ldr	r3, [r7, #4]
 8004038:	2b00      	cmp	r3, #0
 800403a:	d01c      	beq.n	8004076 <pvPortMalloc+0x6a>
 800403c:	2208      	movs	r2, #8
 800403e:	687b      	ldr	r3, [r7, #4]
 8004040:	4413      	add	r3, r2
 8004042:	607b      	str	r3, [r7, #4]
 8004044:	687b      	ldr	r3, [r7, #4]
 8004046:	f003 0307 	and.w	r3, r3, #7
 800404a:	2b00      	cmp	r3, #0
 800404c:	d013      	beq.n	8004076 <pvPortMalloc+0x6a>
 800404e:	687b      	ldr	r3, [r7, #4]
 8004050:	f023 0307 	bic.w	r3, r3, #7
 8004054:	3308      	adds	r3, #8
 8004056:	607b      	str	r3, [r7, #4]
 8004058:	687b      	ldr	r3, [r7, #4]
 800405a:	f003 0307 	and.w	r3, r3, #7
 800405e:	2b00      	cmp	r3, #0
 8004060:	d009      	beq.n	8004076 <pvPortMalloc+0x6a>
 8004062:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004066:	f383 8811 	msr	BASEPRI, r3
 800406a:	f3bf 8f6f 	isb	sy
 800406e:	f3bf 8f4f 	dsb	sy
 8004072:	617b      	str	r3, [r7, #20]
 8004074:	e7fe      	b.n	8004074 <pvPortMalloc+0x68>
 8004076:	687b      	ldr	r3, [r7, #4]
 8004078:	2b00      	cmp	r3, #0
 800407a:	d068      	beq.n	800414e <pvPortMalloc+0x142>
 800407c:	4b41      	ldr	r3, [pc, #260]	; (8004184 <pvPortMalloc+0x178>)
 800407e:	681b      	ldr	r3, [r3, #0]
 8004080:	687a      	ldr	r2, [r7, #4]
 8004082:	429a      	cmp	r2, r3
 8004084:	d863      	bhi.n	800414e <pvPortMalloc+0x142>
 8004086:	4b40      	ldr	r3, [pc, #256]	; (8004188 <pvPortMalloc+0x17c>)
 8004088:	623b      	str	r3, [r7, #32]
 800408a:	4b3f      	ldr	r3, [pc, #252]	; (8004188 <pvPortMalloc+0x17c>)
 800408c:	681b      	ldr	r3, [r3, #0]
 800408e:	627b      	str	r3, [r7, #36]	; 0x24
 8004090:	e004      	b.n	800409c <pvPortMalloc+0x90>
 8004092:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004094:	623b      	str	r3, [r7, #32]
 8004096:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004098:	681b      	ldr	r3, [r3, #0]
 800409a:	627b      	str	r3, [r7, #36]	; 0x24
 800409c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800409e:	685b      	ldr	r3, [r3, #4]
 80040a0:	687a      	ldr	r2, [r7, #4]
 80040a2:	429a      	cmp	r2, r3
 80040a4:	d903      	bls.n	80040ae <pvPortMalloc+0xa2>
 80040a6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80040a8:	681b      	ldr	r3, [r3, #0]
 80040aa:	2b00      	cmp	r3, #0
 80040ac:	d1f1      	bne.n	8004092 <pvPortMalloc+0x86>
 80040ae:	4b33      	ldr	r3, [pc, #204]	; (800417c <pvPortMalloc+0x170>)
 80040b0:	681b      	ldr	r3, [r3, #0]
 80040b2:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80040b4:	429a      	cmp	r2, r3
 80040b6:	d04a      	beq.n	800414e <pvPortMalloc+0x142>
 80040b8:	6a3b      	ldr	r3, [r7, #32]
 80040ba:	681b      	ldr	r3, [r3, #0]
 80040bc:	2208      	movs	r2, #8
 80040be:	4413      	add	r3, r2
 80040c0:	61fb      	str	r3, [r7, #28]
 80040c2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80040c4:	681a      	ldr	r2, [r3, #0]
 80040c6:	6a3b      	ldr	r3, [r7, #32]
 80040c8:	601a      	str	r2, [r3, #0]
 80040ca:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80040cc:	685a      	ldr	r2, [r3, #4]
 80040ce:	687b      	ldr	r3, [r7, #4]
 80040d0:	1ad2      	subs	r2, r2, r3
 80040d2:	2308      	movs	r3, #8
 80040d4:	005b      	lsls	r3, r3, #1
 80040d6:	429a      	cmp	r2, r3
 80040d8:	d91e      	bls.n	8004118 <pvPortMalloc+0x10c>
 80040da:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80040dc:	687b      	ldr	r3, [r7, #4]
 80040de:	4413      	add	r3, r2
 80040e0:	61bb      	str	r3, [r7, #24]
 80040e2:	69bb      	ldr	r3, [r7, #24]
 80040e4:	f003 0307 	and.w	r3, r3, #7
 80040e8:	2b00      	cmp	r3, #0
 80040ea:	d009      	beq.n	8004100 <pvPortMalloc+0xf4>
 80040ec:	f04f 0350 	mov.w	r3, #80	; 0x50
 80040f0:	f383 8811 	msr	BASEPRI, r3
 80040f4:	f3bf 8f6f 	isb	sy
 80040f8:	f3bf 8f4f 	dsb	sy
 80040fc:	613b      	str	r3, [r7, #16]
 80040fe:	e7fe      	b.n	80040fe <pvPortMalloc+0xf2>
 8004100:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004102:	685a      	ldr	r2, [r3, #4]
 8004104:	687b      	ldr	r3, [r7, #4]
 8004106:	1ad2      	subs	r2, r2, r3
 8004108:	69bb      	ldr	r3, [r7, #24]
 800410a:	605a      	str	r2, [r3, #4]
 800410c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800410e:	687a      	ldr	r2, [r7, #4]
 8004110:	605a      	str	r2, [r3, #4]
 8004112:	69b8      	ldr	r0, [r7, #24]
 8004114:	f000 f8f6 	bl	8004304 <prvInsertBlockIntoFreeList>
 8004118:	4b1a      	ldr	r3, [pc, #104]	; (8004184 <pvPortMalloc+0x178>)
 800411a:	681a      	ldr	r2, [r3, #0]
 800411c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800411e:	685b      	ldr	r3, [r3, #4]
 8004120:	1ad3      	subs	r3, r2, r3
 8004122:	4a18      	ldr	r2, [pc, #96]	; (8004184 <pvPortMalloc+0x178>)
 8004124:	6013      	str	r3, [r2, #0]
 8004126:	4b17      	ldr	r3, [pc, #92]	; (8004184 <pvPortMalloc+0x178>)
 8004128:	681a      	ldr	r2, [r3, #0]
 800412a:	4b18      	ldr	r3, [pc, #96]	; (800418c <pvPortMalloc+0x180>)
 800412c:	681b      	ldr	r3, [r3, #0]
 800412e:	429a      	cmp	r2, r3
 8004130:	d203      	bcs.n	800413a <pvPortMalloc+0x12e>
 8004132:	4b14      	ldr	r3, [pc, #80]	; (8004184 <pvPortMalloc+0x178>)
 8004134:	681b      	ldr	r3, [r3, #0]
 8004136:	4a15      	ldr	r2, [pc, #84]	; (800418c <pvPortMalloc+0x180>)
 8004138:	6013      	str	r3, [r2, #0]
 800413a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800413c:	685a      	ldr	r2, [r3, #4]
 800413e:	4b10      	ldr	r3, [pc, #64]	; (8004180 <pvPortMalloc+0x174>)
 8004140:	681b      	ldr	r3, [r3, #0]
 8004142:	431a      	orrs	r2, r3
 8004144:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004146:	605a      	str	r2, [r3, #4]
 8004148:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800414a:	2200      	movs	r2, #0
 800414c:	601a      	str	r2, [r3, #0]
 800414e:	f7ff facb 	bl	80036e8 <xTaskResumeAll>
 8004152:	69fb      	ldr	r3, [r7, #28]
 8004154:	f003 0307 	and.w	r3, r3, #7
 8004158:	2b00      	cmp	r3, #0
 800415a:	d009      	beq.n	8004170 <pvPortMalloc+0x164>
 800415c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004160:	f383 8811 	msr	BASEPRI, r3
 8004164:	f3bf 8f6f 	isb	sy
 8004168:	f3bf 8f4f 	dsb	sy
 800416c:	60fb      	str	r3, [r7, #12]
 800416e:	e7fe      	b.n	800416e <pvPortMalloc+0x162>
 8004170:	69fb      	ldr	r3, [r7, #28]
 8004172:	4618      	mov	r0, r3
 8004174:	3728      	adds	r7, #40	; 0x28
 8004176:	46bd      	mov	sp, r7
 8004178:	bd80      	pop	{r7, pc}
 800417a:	bf00      	nop
 800417c:	20002834 	.word	0x20002834
 8004180:	20002840 	.word	0x20002840
 8004184:	20002838 	.word	0x20002838
 8004188:	2000282c 	.word	0x2000282c
 800418c:	2000283c 	.word	0x2000283c

08004190 <vPortFree>:
 8004190:	b580      	push	{r7, lr}
 8004192:	b086      	sub	sp, #24
 8004194:	af00      	add	r7, sp, #0
 8004196:	6078      	str	r0, [r7, #4]
 8004198:	687b      	ldr	r3, [r7, #4]
 800419a:	617b      	str	r3, [r7, #20]
 800419c:	687b      	ldr	r3, [r7, #4]
 800419e:	2b00      	cmp	r3, #0
 80041a0:	d046      	beq.n	8004230 <vPortFree+0xa0>
 80041a2:	2308      	movs	r3, #8
 80041a4:	425b      	negs	r3, r3
 80041a6:	697a      	ldr	r2, [r7, #20]
 80041a8:	4413      	add	r3, r2
 80041aa:	617b      	str	r3, [r7, #20]
 80041ac:	697b      	ldr	r3, [r7, #20]
 80041ae:	613b      	str	r3, [r7, #16]
 80041b0:	693b      	ldr	r3, [r7, #16]
 80041b2:	685a      	ldr	r2, [r3, #4]
 80041b4:	4b20      	ldr	r3, [pc, #128]	; (8004238 <vPortFree+0xa8>)
 80041b6:	681b      	ldr	r3, [r3, #0]
 80041b8:	4013      	ands	r3, r2
 80041ba:	2b00      	cmp	r3, #0
 80041bc:	d109      	bne.n	80041d2 <vPortFree+0x42>
 80041be:	f04f 0350 	mov.w	r3, #80	; 0x50
 80041c2:	f383 8811 	msr	BASEPRI, r3
 80041c6:	f3bf 8f6f 	isb	sy
 80041ca:	f3bf 8f4f 	dsb	sy
 80041ce:	60fb      	str	r3, [r7, #12]
 80041d0:	e7fe      	b.n	80041d0 <vPortFree+0x40>
 80041d2:	693b      	ldr	r3, [r7, #16]
 80041d4:	681b      	ldr	r3, [r3, #0]
 80041d6:	2b00      	cmp	r3, #0
 80041d8:	d009      	beq.n	80041ee <vPortFree+0x5e>
 80041da:	f04f 0350 	mov.w	r3, #80	; 0x50
 80041de:	f383 8811 	msr	BASEPRI, r3
 80041e2:	f3bf 8f6f 	isb	sy
 80041e6:	f3bf 8f4f 	dsb	sy
 80041ea:	60bb      	str	r3, [r7, #8]
 80041ec:	e7fe      	b.n	80041ec <vPortFree+0x5c>
 80041ee:	693b      	ldr	r3, [r7, #16]
 80041f0:	685a      	ldr	r2, [r3, #4]
 80041f2:	4b11      	ldr	r3, [pc, #68]	; (8004238 <vPortFree+0xa8>)
 80041f4:	681b      	ldr	r3, [r3, #0]
 80041f6:	4013      	ands	r3, r2
 80041f8:	2b00      	cmp	r3, #0
 80041fa:	d019      	beq.n	8004230 <vPortFree+0xa0>
 80041fc:	693b      	ldr	r3, [r7, #16]
 80041fe:	681b      	ldr	r3, [r3, #0]
 8004200:	2b00      	cmp	r3, #0
 8004202:	d115      	bne.n	8004230 <vPortFree+0xa0>
 8004204:	693b      	ldr	r3, [r7, #16]
 8004206:	685a      	ldr	r2, [r3, #4]
 8004208:	4b0b      	ldr	r3, [pc, #44]	; (8004238 <vPortFree+0xa8>)
 800420a:	681b      	ldr	r3, [r3, #0]
 800420c:	43db      	mvns	r3, r3
 800420e:	401a      	ands	r2, r3
 8004210:	693b      	ldr	r3, [r7, #16]
 8004212:	605a      	str	r2, [r3, #4]
 8004214:	f7ff fa5a 	bl	80036cc <vTaskSuspendAll>
 8004218:	693b      	ldr	r3, [r7, #16]
 800421a:	685a      	ldr	r2, [r3, #4]
 800421c:	4b07      	ldr	r3, [pc, #28]	; (800423c <vPortFree+0xac>)
 800421e:	681b      	ldr	r3, [r3, #0]
 8004220:	4413      	add	r3, r2
 8004222:	4a06      	ldr	r2, [pc, #24]	; (800423c <vPortFree+0xac>)
 8004224:	6013      	str	r3, [r2, #0]
 8004226:	6938      	ldr	r0, [r7, #16]
 8004228:	f000 f86c 	bl	8004304 <prvInsertBlockIntoFreeList>
 800422c:	f7ff fa5c 	bl	80036e8 <xTaskResumeAll>
 8004230:	bf00      	nop
 8004232:	3718      	adds	r7, #24
 8004234:	46bd      	mov	sp, r7
 8004236:	bd80      	pop	{r7, pc}
 8004238:	20002840 	.word	0x20002840
 800423c:	20002838 	.word	0x20002838

08004240 <prvHeapInit>:
 8004240:	b480      	push	{r7}
 8004242:	b085      	sub	sp, #20
 8004244:	af00      	add	r7, sp, #0
 8004246:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800424a:	60bb      	str	r3, [r7, #8]
 800424c:	4b27      	ldr	r3, [pc, #156]	; (80042ec <prvHeapInit+0xac>)
 800424e:	60fb      	str	r3, [r7, #12]
 8004250:	68fb      	ldr	r3, [r7, #12]
 8004252:	f003 0307 	and.w	r3, r3, #7
 8004256:	2b00      	cmp	r3, #0
 8004258:	d00c      	beq.n	8004274 <prvHeapInit+0x34>
 800425a:	68fb      	ldr	r3, [r7, #12]
 800425c:	3307      	adds	r3, #7
 800425e:	60fb      	str	r3, [r7, #12]
 8004260:	68fb      	ldr	r3, [r7, #12]
 8004262:	f023 0307 	bic.w	r3, r3, #7
 8004266:	60fb      	str	r3, [r7, #12]
 8004268:	68ba      	ldr	r2, [r7, #8]
 800426a:	68fb      	ldr	r3, [r7, #12]
 800426c:	1ad3      	subs	r3, r2, r3
 800426e:	4a1f      	ldr	r2, [pc, #124]	; (80042ec <prvHeapInit+0xac>)
 8004270:	4413      	add	r3, r2
 8004272:	60bb      	str	r3, [r7, #8]
 8004274:	68fb      	ldr	r3, [r7, #12]
 8004276:	607b      	str	r3, [r7, #4]
 8004278:	4a1d      	ldr	r2, [pc, #116]	; (80042f0 <prvHeapInit+0xb0>)
 800427a:	687b      	ldr	r3, [r7, #4]
 800427c:	6013      	str	r3, [r2, #0]
 800427e:	4b1c      	ldr	r3, [pc, #112]	; (80042f0 <prvHeapInit+0xb0>)
 8004280:	2200      	movs	r2, #0
 8004282:	605a      	str	r2, [r3, #4]
 8004284:	687b      	ldr	r3, [r7, #4]
 8004286:	68ba      	ldr	r2, [r7, #8]
 8004288:	4413      	add	r3, r2
 800428a:	60fb      	str	r3, [r7, #12]
 800428c:	2208      	movs	r2, #8
 800428e:	68fb      	ldr	r3, [r7, #12]
 8004290:	1a9b      	subs	r3, r3, r2
 8004292:	60fb      	str	r3, [r7, #12]
 8004294:	68fb      	ldr	r3, [r7, #12]
 8004296:	f023 0307 	bic.w	r3, r3, #7
 800429a:	60fb      	str	r3, [r7, #12]
 800429c:	68fb      	ldr	r3, [r7, #12]
 800429e:	4a15      	ldr	r2, [pc, #84]	; (80042f4 <prvHeapInit+0xb4>)
 80042a0:	6013      	str	r3, [r2, #0]
 80042a2:	4b14      	ldr	r3, [pc, #80]	; (80042f4 <prvHeapInit+0xb4>)
 80042a4:	681b      	ldr	r3, [r3, #0]
 80042a6:	2200      	movs	r2, #0
 80042a8:	605a      	str	r2, [r3, #4]
 80042aa:	4b12      	ldr	r3, [pc, #72]	; (80042f4 <prvHeapInit+0xb4>)
 80042ac:	681b      	ldr	r3, [r3, #0]
 80042ae:	2200      	movs	r2, #0
 80042b0:	601a      	str	r2, [r3, #0]
 80042b2:	687b      	ldr	r3, [r7, #4]
 80042b4:	603b      	str	r3, [r7, #0]
 80042b6:	683b      	ldr	r3, [r7, #0]
 80042b8:	68fa      	ldr	r2, [r7, #12]
 80042ba:	1ad2      	subs	r2, r2, r3
 80042bc:	683b      	ldr	r3, [r7, #0]
 80042be:	605a      	str	r2, [r3, #4]
 80042c0:	4b0c      	ldr	r3, [pc, #48]	; (80042f4 <prvHeapInit+0xb4>)
 80042c2:	681a      	ldr	r2, [r3, #0]
 80042c4:	683b      	ldr	r3, [r7, #0]
 80042c6:	601a      	str	r2, [r3, #0]
 80042c8:	683b      	ldr	r3, [r7, #0]
 80042ca:	685b      	ldr	r3, [r3, #4]
 80042cc:	4a0a      	ldr	r2, [pc, #40]	; (80042f8 <prvHeapInit+0xb8>)
 80042ce:	6013      	str	r3, [r2, #0]
 80042d0:	683b      	ldr	r3, [r7, #0]
 80042d2:	685b      	ldr	r3, [r3, #4]
 80042d4:	4a09      	ldr	r2, [pc, #36]	; (80042fc <prvHeapInit+0xbc>)
 80042d6:	6013      	str	r3, [r2, #0]
 80042d8:	4b09      	ldr	r3, [pc, #36]	; (8004300 <prvHeapInit+0xc0>)
 80042da:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 80042de:	601a      	str	r2, [r3, #0]
 80042e0:	bf00      	nop
 80042e2:	3714      	adds	r7, #20
 80042e4:	46bd      	mov	sp, r7
 80042e6:	bc80      	pop	{r7}
 80042e8:	4770      	bx	lr
 80042ea:	bf00      	nop
 80042ec:	2000082c 	.word	0x2000082c
 80042f0:	2000282c 	.word	0x2000282c
 80042f4:	20002834 	.word	0x20002834
 80042f8:	2000283c 	.word	0x2000283c
 80042fc:	20002838 	.word	0x20002838
 8004300:	20002840 	.word	0x20002840

08004304 <prvInsertBlockIntoFreeList>:
 8004304:	b480      	push	{r7}
 8004306:	b085      	sub	sp, #20
 8004308:	af00      	add	r7, sp, #0
 800430a:	6078      	str	r0, [r7, #4]
 800430c:	4b27      	ldr	r3, [pc, #156]	; (80043ac <prvInsertBlockIntoFreeList+0xa8>)
 800430e:	60fb      	str	r3, [r7, #12]
 8004310:	e002      	b.n	8004318 <prvInsertBlockIntoFreeList+0x14>
 8004312:	68fb      	ldr	r3, [r7, #12]
 8004314:	681b      	ldr	r3, [r3, #0]
 8004316:	60fb      	str	r3, [r7, #12]
 8004318:	68fb      	ldr	r3, [r7, #12]
 800431a:	681b      	ldr	r3, [r3, #0]
 800431c:	687a      	ldr	r2, [r7, #4]
 800431e:	429a      	cmp	r2, r3
 8004320:	d8f7      	bhi.n	8004312 <prvInsertBlockIntoFreeList+0xe>
 8004322:	68fb      	ldr	r3, [r7, #12]
 8004324:	60bb      	str	r3, [r7, #8]
 8004326:	68fb      	ldr	r3, [r7, #12]
 8004328:	685b      	ldr	r3, [r3, #4]
 800432a:	68ba      	ldr	r2, [r7, #8]
 800432c:	4413      	add	r3, r2
 800432e:	687a      	ldr	r2, [r7, #4]
 8004330:	429a      	cmp	r2, r3
 8004332:	d108      	bne.n	8004346 <prvInsertBlockIntoFreeList+0x42>
 8004334:	68fb      	ldr	r3, [r7, #12]
 8004336:	685a      	ldr	r2, [r3, #4]
 8004338:	687b      	ldr	r3, [r7, #4]
 800433a:	685b      	ldr	r3, [r3, #4]
 800433c:	441a      	add	r2, r3
 800433e:	68fb      	ldr	r3, [r7, #12]
 8004340:	605a      	str	r2, [r3, #4]
 8004342:	68fb      	ldr	r3, [r7, #12]
 8004344:	607b      	str	r3, [r7, #4]
 8004346:	687b      	ldr	r3, [r7, #4]
 8004348:	60bb      	str	r3, [r7, #8]
 800434a:	687b      	ldr	r3, [r7, #4]
 800434c:	685b      	ldr	r3, [r3, #4]
 800434e:	68ba      	ldr	r2, [r7, #8]
 8004350:	441a      	add	r2, r3
 8004352:	68fb      	ldr	r3, [r7, #12]
 8004354:	681b      	ldr	r3, [r3, #0]
 8004356:	429a      	cmp	r2, r3
 8004358:	d118      	bne.n	800438c <prvInsertBlockIntoFreeList+0x88>
 800435a:	68fb      	ldr	r3, [r7, #12]
 800435c:	681a      	ldr	r2, [r3, #0]
 800435e:	4b14      	ldr	r3, [pc, #80]	; (80043b0 <prvInsertBlockIntoFreeList+0xac>)
 8004360:	681b      	ldr	r3, [r3, #0]
 8004362:	429a      	cmp	r2, r3
 8004364:	d00d      	beq.n	8004382 <prvInsertBlockIntoFreeList+0x7e>
 8004366:	687b      	ldr	r3, [r7, #4]
 8004368:	685a      	ldr	r2, [r3, #4]
 800436a:	68fb      	ldr	r3, [r7, #12]
 800436c:	681b      	ldr	r3, [r3, #0]
 800436e:	685b      	ldr	r3, [r3, #4]
 8004370:	441a      	add	r2, r3
 8004372:	687b      	ldr	r3, [r7, #4]
 8004374:	605a      	str	r2, [r3, #4]
 8004376:	68fb      	ldr	r3, [r7, #12]
 8004378:	681b      	ldr	r3, [r3, #0]
 800437a:	681a      	ldr	r2, [r3, #0]
 800437c:	687b      	ldr	r3, [r7, #4]
 800437e:	601a      	str	r2, [r3, #0]
 8004380:	e008      	b.n	8004394 <prvInsertBlockIntoFreeList+0x90>
 8004382:	4b0b      	ldr	r3, [pc, #44]	; (80043b0 <prvInsertBlockIntoFreeList+0xac>)
 8004384:	681a      	ldr	r2, [r3, #0]
 8004386:	687b      	ldr	r3, [r7, #4]
 8004388:	601a      	str	r2, [r3, #0]
 800438a:	e003      	b.n	8004394 <prvInsertBlockIntoFreeList+0x90>
 800438c:	68fb      	ldr	r3, [r7, #12]
 800438e:	681a      	ldr	r2, [r3, #0]
 8004390:	687b      	ldr	r3, [r7, #4]
 8004392:	601a      	str	r2, [r3, #0]
 8004394:	68fa      	ldr	r2, [r7, #12]
 8004396:	687b      	ldr	r3, [r7, #4]
 8004398:	429a      	cmp	r2, r3
 800439a:	d002      	beq.n	80043a2 <prvInsertBlockIntoFreeList+0x9e>
 800439c:	68fb      	ldr	r3, [r7, #12]
 800439e:	687a      	ldr	r2, [r7, #4]
 80043a0:	601a      	str	r2, [r3, #0]
 80043a2:	bf00      	nop
 80043a4:	3714      	adds	r7, #20
 80043a6:	46bd      	mov	sp, r7
 80043a8:	bc80      	pop	{r7}
 80043aa:	4770      	bx	lr
 80043ac:	2000282c 	.word	0x2000282c
 80043b0:	20002834 	.word	0x20002834

080043b4 <__errno>:
 80043b4:	4b01      	ldr	r3, [pc, #4]	; (80043bc <__errno+0x8>)
 80043b6:	6818      	ldr	r0, [r3, #0]
 80043b8:	4770      	bx	lr
 80043ba:	bf00      	nop
 80043bc:	20000014 	.word	0x20000014

080043c0 <__libc_init_array>:
 80043c0:	b570      	push	{r4, r5, r6, lr}
 80043c2:	2500      	movs	r5, #0
 80043c4:	4e0c      	ldr	r6, [pc, #48]	; (80043f8 <__libc_init_array+0x38>)
 80043c6:	4c0d      	ldr	r4, [pc, #52]	; (80043fc <__libc_init_array+0x3c>)
 80043c8:	1ba4      	subs	r4, r4, r6
 80043ca:	10a4      	asrs	r4, r4, #2
 80043cc:	42a5      	cmp	r5, r4
 80043ce:	d109      	bne.n	80043e4 <__libc_init_array+0x24>
 80043d0:	f000 fcc2 	bl	8004d58 <_init>
 80043d4:	2500      	movs	r5, #0
 80043d6:	4e0a      	ldr	r6, [pc, #40]	; (8004400 <__libc_init_array+0x40>)
 80043d8:	4c0a      	ldr	r4, [pc, #40]	; (8004404 <__libc_init_array+0x44>)
 80043da:	1ba4      	subs	r4, r4, r6
 80043dc:	10a4      	asrs	r4, r4, #2
 80043de:	42a5      	cmp	r5, r4
 80043e0:	d105      	bne.n	80043ee <__libc_init_array+0x2e>
 80043e2:	bd70      	pop	{r4, r5, r6, pc}
 80043e4:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80043e8:	4798      	blx	r3
 80043ea:	3501      	adds	r5, #1
 80043ec:	e7ee      	b.n	80043cc <__libc_init_array+0xc>
 80043ee:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80043f2:	4798      	blx	r3
 80043f4:	3501      	adds	r5, #1
 80043f6:	e7f2      	b.n	80043de <__libc_init_array+0x1e>
 80043f8:	08005004 	.word	0x08005004
 80043fc:	08005004 	.word	0x08005004
 8004400:	08005004 	.word	0x08005004
 8004404:	08005008 	.word	0x08005008

08004408 <memcpy>:
 8004408:	b510      	push	{r4, lr}
 800440a:	1e43      	subs	r3, r0, #1
 800440c:	440a      	add	r2, r1
 800440e:	4291      	cmp	r1, r2
 8004410:	d100      	bne.n	8004414 <memcpy+0xc>
 8004412:	bd10      	pop	{r4, pc}
 8004414:	f811 4b01 	ldrb.w	r4, [r1], #1
 8004418:	f803 4f01 	strb.w	r4, [r3, #1]!
 800441c:	e7f7      	b.n	800440e <memcpy+0x6>

0800441e <memset>:
 800441e:	4603      	mov	r3, r0
 8004420:	4402      	add	r2, r0
 8004422:	4293      	cmp	r3, r2
 8004424:	d100      	bne.n	8004428 <memset+0xa>
 8004426:	4770      	bx	lr
 8004428:	f803 1b01 	strb.w	r1, [r3], #1
 800442c:	e7f9      	b.n	8004422 <memset+0x4>
	...

08004430 <siprintf>:
 8004430:	b40e      	push	{r1, r2, r3}
 8004432:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8004436:	b500      	push	{lr}
 8004438:	b09c      	sub	sp, #112	; 0x70
 800443a:	ab1d      	add	r3, sp, #116	; 0x74
 800443c:	9002      	str	r0, [sp, #8]
 800443e:	9006      	str	r0, [sp, #24]
 8004440:	9107      	str	r1, [sp, #28]
 8004442:	9104      	str	r1, [sp, #16]
 8004444:	4808      	ldr	r0, [pc, #32]	; (8004468 <siprintf+0x38>)
 8004446:	4909      	ldr	r1, [pc, #36]	; (800446c <siprintf+0x3c>)
 8004448:	f853 2b04 	ldr.w	r2, [r3], #4
 800444c:	9105      	str	r1, [sp, #20]
 800444e:	6800      	ldr	r0, [r0, #0]
 8004450:	a902      	add	r1, sp, #8
 8004452:	9301      	str	r3, [sp, #4]
 8004454:	f000 f998 	bl	8004788 <_svfiprintf_r>
 8004458:	2200      	movs	r2, #0
 800445a:	9b02      	ldr	r3, [sp, #8]
 800445c:	701a      	strb	r2, [r3, #0]
 800445e:	b01c      	add	sp, #112	; 0x70
 8004460:	f85d eb04 	ldr.w	lr, [sp], #4
 8004464:	b003      	add	sp, #12
 8004466:	4770      	bx	lr
 8004468:	20000014 	.word	0x20000014
 800446c:	ffff0208 	.word	0xffff0208

08004470 <strchr>:
 8004470:	b2c9      	uxtb	r1, r1
 8004472:	4603      	mov	r3, r0
 8004474:	f810 2b01 	ldrb.w	r2, [r0], #1
 8004478:	b11a      	cbz	r2, 8004482 <strchr+0x12>
 800447a:	428a      	cmp	r2, r1
 800447c:	d1f9      	bne.n	8004472 <strchr+0x2>
 800447e:	4618      	mov	r0, r3
 8004480:	4770      	bx	lr
 8004482:	2900      	cmp	r1, #0
 8004484:	bf18      	it	ne
 8004486:	2300      	movne	r3, #0
 8004488:	e7f9      	b.n	800447e <strchr+0xe>

0800448a <strcpy>:
 800448a:	4603      	mov	r3, r0
 800448c:	f811 2b01 	ldrb.w	r2, [r1], #1
 8004490:	f803 2b01 	strb.w	r2, [r3], #1
 8004494:	2a00      	cmp	r2, #0
 8004496:	d1f9      	bne.n	800448c <strcpy+0x2>
 8004498:	4770      	bx	lr

0800449a <strstr>:
 800449a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800449c:	7803      	ldrb	r3, [r0, #0]
 800449e:	b17b      	cbz	r3, 80044c0 <strstr+0x26>
 80044a0:	4604      	mov	r4, r0
 80044a2:	7823      	ldrb	r3, [r4, #0]
 80044a4:	4620      	mov	r0, r4
 80044a6:	1c66      	adds	r6, r4, #1
 80044a8:	b17b      	cbz	r3, 80044ca <strstr+0x30>
 80044aa:	1e4a      	subs	r2, r1, #1
 80044ac:	1e63      	subs	r3, r4, #1
 80044ae:	f812 5f01 	ldrb.w	r5, [r2, #1]!
 80044b2:	b14d      	cbz	r5, 80044c8 <strstr+0x2e>
 80044b4:	f813 7f01 	ldrb.w	r7, [r3, #1]!
 80044b8:	4634      	mov	r4, r6
 80044ba:	42af      	cmp	r7, r5
 80044bc:	d0f7      	beq.n	80044ae <strstr+0x14>
 80044be:	e7f0      	b.n	80044a2 <strstr+0x8>
 80044c0:	780b      	ldrb	r3, [r1, #0]
 80044c2:	2b00      	cmp	r3, #0
 80044c4:	bf18      	it	ne
 80044c6:	2000      	movne	r0, #0
 80044c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80044ca:	4618      	mov	r0, r3
 80044cc:	e7fc      	b.n	80044c8 <strstr+0x2e>
	...

080044d0 <strtok>:
 80044d0:	4b13      	ldr	r3, [pc, #76]	; (8004520 <strtok+0x50>)
 80044d2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80044d6:	681d      	ldr	r5, [r3, #0]
 80044d8:	4606      	mov	r6, r0
 80044da:	6dac      	ldr	r4, [r5, #88]	; 0x58
 80044dc:	460f      	mov	r7, r1
 80044de:	b9b4      	cbnz	r4, 800450e <strtok+0x3e>
 80044e0:	2050      	movs	r0, #80	; 0x50
 80044e2:	f000 f849 	bl	8004578 <malloc>
 80044e6:	65a8      	str	r0, [r5, #88]	; 0x58
 80044e8:	e9c0 4400 	strd	r4, r4, [r0]
 80044ec:	e9c0 4402 	strd	r4, r4, [r0, #8]
 80044f0:	e9c0 4404 	strd	r4, r4, [r0, #16]
 80044f4:	e9c0 440a 	strd	r4, r4, [r0, #40]	; 0x28
 80044f8:	e9c0 440c 	strd	r4, r4, [r0, #48]	; 0x30
 80044fc:	e9c0 440e 	strd	r4, r4, [r0, #56]	; 0x38
 8004500:	e9c0 4410 	strd	r4, r4, [r0, #64]	; 0x40
 8004504:	e9c0 4412 	strd	r4, r4, [r0, #72]	; 0x48
 8004508:	6184      	str	r4, [r0, #24]
 800450a:	7704      	strb	r4, [r0, #28]
 800450c:	6244      	str	r4, [r0, #36]	; 0x24
 800450e:	6daa      	ldr	r2, [r5, #88]	; 0x58
 8004510:	4639      	mov	r1, r7
 8004512:	4630      	mov	r0, r6
 8004514:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8004518:	2301      	movs	r3, #1
 800451a:	f000 b803 	b.w	8004524 <__strtok_r>
 800451e:	bf00      	nop
 8004520:	20000014 	.word	0x20000014

08004524 <__strtok_r>:
 8004524:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004526:	b918      	cbnz	r0, 8004530 <__strtok_r+0xc>
 8004528:	6810      	ldr	r0, [r2, #0]
 800452a:	b908      	cbnz	r0, 8004530 <__strtok_r+0xc>
 800452c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800452e:	4620      	mov	r0, r4
 8004530:	4604      	mov	r4, r0
 8004532:	460f      	mov	r7, r1
 8004534:	f814 5b01 	ldrb.w	r5, [r4], #1
 8004538:	f817 6b01 	ldrb.w	r6, [r7], #1
 800453c:	b91e      	cbnz	r6, 8004546 <__strtok_r+0x22>
 800453e:	b96d      	cbnz	r5, 800455c <__strtok_r+0x38>
 8004540:	6015      	str	r5, [r2, #0]
 8004542:	4628      	mov	r0, r5
 8004544:	e7f2      	b.n	800452c <__strtok_r+0x8>
 8004546:	42b5      	cmp	r5, r6
 8004548:	d1f6      	bne.n	8004538 <__strtok_r+0x14>
 800454a:	2b00      	cmp	r3, #0
 800454c:	d1ef      	bne.n	800452e <__strtok_r+0xa>
 800454e:	6014      	str	r4, [r2, #0]
 8004550:	7003      	strb	r3, [r0, #0]
 8004552:	e7eb      	b.n	800452c <__strtok_r+0x8>
 8004554:	462b      	mov	r3, r5
 8004556:	e00d      	b.n	8004574 <__strtok_r+0x50>
 8004558:	b926      	cbnz	r6, 8004564 <__strtok_r+0x40>
 800455a:	461c      	mov	r4, r3
 800455c:	4623      	mov	r3, r4
 800455e:	460f      	mov	r7, r1
 8004560:	f813 5b01 	ldrb.w	r5, [r3], #1
 8004564:	f817 6b01 	ldrb.w	r6, [r7], #1
 8004568:	42b5      	cmp	r5, r6
 800456a:	d1f5      	bne.n	8004558 <__strtok_r+0x34>
 800456c:	2d00      	cmp	r5, #0
 800456e:	d0f1      	beq.n	8004554 <__strtok_r+0x30>
 8004570:	2100      	movs	r1, #0
 8004572:	7021      	strb	r1, [r4, #0]
 8004574:	6013      	str	r3, [r2, #0]
 8004576:	e7d9      	b.n	800452c <__strtok_r+0x8>

08004578 <malloc>:
 8004578:	4b02      	ldr	r3, [pc, #8]	; (8004584 <malloc+0xc>)
 800457a:	4601      	mov	r1, r0
 800457c:	6818      	ldr	r0, [r3, #0]
 800457e:	f000 b84f 	b.w	8004620 <_malloc_r>
 8004582:	bf00      	nop
 8004584:	20000014 	.word	0x20000014

08004588 <_free_r>:
 8004588:	b538      	push	{r3, r4, r5, lr}
 800458a:	4605      	mov	r5, r0
 800458c:	2900      	cmp	r1, #0
 800458e:	d043      	beq.n	8004618 <_free_r+0x90>
 8004590:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004594:	1f0c      	subs	r4, r1, #4
 8004596:	2b00      	cmp	r3, #0
 8004598:	bfb8      	it	lt
 800459a:	18e4      	addlt	r4, r4, r3
 800459c:	f000 fbab 	bl	8004cf6 <__malloc_lock>
 80045a0:	4a1e      	ldr	r2, [pc, #120]	; (800461c <_free_r+0x94>)
 80045a2:	6813      	ldr	r3, [r2, #0]
 80045a4:	4610      	mov	r0, r2
 80045a6:	b933      	cbnz	r3, 80045b6 <_free_r+0x2e>
 80045a8:	6063      	str	r3, [r4, #4]
 80045aa:	6014      	str	r4, [r2, #0]
 80045ac:	4628      	mov	r0, r5
 80045ae:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80045b2:	f000 bba1 	b.w	8004cf8 <__malloc_unlock>
 80045b6:	42a3      	cmp	r3, r4
 80045b8:	d90b      	bls.n	80045d2 <_free_r+0x4a>
 80045ba:	6821      	ldr	r1, [r4, #0]
 80045bc:	1862      	adds	r2, r4, r1
 80045be:	4293      	cmp	r3, r2
 80045c0:	bf01      	itttt	eq
 80045c2:	681a      	ldreq	r2, [r3, #0]
 80045c4:	685b      	ldreq	r3, [r3, #4]
 80045c6:	1852      	addeq	r2, r2, r1
 80045c8:	6022      	streq	r2, [r4, #0]
 80045ca:	6063      	str	r3, [r4, #4]
 80045cc:	6004      	str	r4, [r0, #0]
 80045ce:	e7ed      	b.n	80045ac <_free_r+0x24>
 80045d0:	4613      	mov	r3, r2
 80045d2:	685a      	ldr	r2, [r3, #4]
 80045d4:	b10a      	cbz	r2, 80045da <_free_r+0x52>
 80045d6:	42a2      	cmp	r2, r4
 80045d8:	d9fa      	bls.n	80045d0 <_free_r+0x48>
 80045da:	6819      	ldr	r1, [r3, #0]
 80045dc:	1858      	adds	r0, r3, r1
 80045de:	42a0      	cmp	r0, r4
 80045e0:	d10b      	bne.n	80045fa <_free_r+0x72>
 80045e2:	6820      	ldr	r0, [r4, #0]
 80045e4:	4401      	add	r1, r0
 80045e6:	1858      	adds	r0, r3, r1
 80045e8:	4282      	cmp	r2, r0
 80045ea:	6019      	str	r1, [r3, #0]
 80045ec:	d1de      	bne.n	80045ac <_free_r+0x24>
 80045ee:	6810      	ldr	r0, [r2, #0]
 80045f0:	6852      	ldr	r2, [r2, #4]
 80045f2:	4401      	add	r1, r0
 80045f4:	6019      	str	r1, [r3, #0]
 80045f6:	605a      	str	r2, [r3, #4]
 80045f8:	e7d8      	b.n	80045ac <_free_r+0x24>
 80045fa:	d902      	bls.n	8004602 <_free_r+0x7a>
 80045fc:	230c      	movs	r3, #12
 80045fe:	602b      	str	r3, [r5, #0]
 8004600:	e7d4      	b.n	80045ac <_free_r+0x24>
 8004602:	6820      	ldr	r0, [r4, #0]
 8004604:	1821      	adds	r1, r4, r0
 8004606:	428a      	cmp	r2, r1
 8004608:	bf01      	itttt	eq
 800460a:	6811      	ldreq	r1, [r2, #0]
 800460c:	6852      	ldreq	r2, [r2, #4]
 800460e:	1809      	addeq	r1, r1, r0
 8004610:	6021      	streq	r1, [r4, #0]
 8004612:	6062      	str	r2, [r4, #4]
 8004614:	605c      	str	r4, [r3, #4]
 8004616:	e7c9      	b.n	80045ac <_free_r+0x24>
 8004618:	bd38      	pop	{r3, r4, r5, pc}
 800461a:	bf00      	nop
 800461c:	20002844 	.word	0x20002844

08004620 <_malloc_r>:
 8004620:	b570      	push	{r4, r5, r6, lr}
 8004622:	1ccd      	adds	r5, r1, #3
 8004624:	f025 0503 	bic.w	r5, r5, #3
 8004628:	3508      	adds	r5, #8
 800462a:	2d0c      	cmp	r5, #12
 800462c:	bf38      	it	cc
 800462e:	250c      	movcc	r5, #12
 8004630:	2d00      	cmp	r5, #0
 8004632:	4606      	mov	r6, r0
 8004634:	db01      	blt.n	800463a <_malloc_r+0x1a>
 8004636:	42a9      	cmp	r1, r5
 8004638:	d903      	bls.n	8004642 <_malloc_r+0x22>
 800463a:	230c      	movs	r3, #12
 800463c:	6033      	str	r3, [r6, #0]
 800463e:	2000      	movs	r0, #0
 8004640:	bd70      	pop	{r4, r5, r6, pc}
 8004642:	f000 fb58 	bl	8004cf6 <__malloc_lock>
 8004646:	4a21      	ldr	r2, [pc, #132]	; (80046cc <_malloc_r+0xac>)
 8004648:	6814      	ldr	r4, [r2, #0]
 800464a:	4621      	mov	r1, r4
 800464c:	b991      	cbnz	r1, 8004674 <_malloc_r+0x54>
 800464e:	4c20      	ldr	r4, [pc, #128]	; (80046d0 <_malloc_r+0xb0>)
 8004650:	6823      	ldr	r3, [r4, #0]
 8004652:	b91b      	cbnz	r3, 800465c <_malloc_r+0x3c>
 8004654:	4630      	mov	r0, r6
 8004656:	f000 fb17 	bl	8004c88 <_sbrk_r>
 800465a:	6020      	str	r0, [r4, #0]
 800465c:	4629      	mov	r1, r5
 800465e:	4630      	mov	r0, r6
 8004660:	f000 fb12 	bl	8004c88 <_sbrk_r>
 8004664:	1c43      	adds	r3, r0, #1
 8004666:	d124      	bne.n	80046b2 <_malloc_r+0x92>
 8004668:	230c      	movs	r3, #12
 800466a:	4630      	mov	r0, r6
 800466c:	6033      	str	r3, [r6, #0]
 800466e:	f000 fb43 	bl	8004cf8 <__malloc_unlock>
 8004672:	e7e4      	b.n	800463e <_malloc_r+0x1e>
 8004674:	680b      	ldr	r3, [r1, #0]
 8004676:	1b5b      	subs	r3, r3, r5
 8004678:	d418      	bmi.n	80046ac <_malloc_r+0x8c>
 800467a:	2b0b      	cmp	r3, #11
 800467c:	d90f      	bls.n	800469e <_malloc_r+0x7e>
 800467e:	600b      	str	r3, [r1, #0]
 8004680:	18cc      	adds	r4, r1, r3
 8004682:	50cd      	str	r5, [r1, r3]
 8004684:	4630      	mov	r0, r6
 8004686:	f000 fb37 	bl	8004cf8 <__malloc_unlock>
 800468a:	f104 000b 	add.w	r0, r4, #11
 800468e:	1d23      	adds	r3, r4, #4
 8004690:	f020 0007 	bic.w	r0, r0, #7
 8004694:	1ac3      	subs	r3, r0, r3
 8004696:	d0d3      	beq.n	8004640 <_malloc_r+0x20>
 8004698:	425a      	negs	r2, r3
 800469a:	50e2      	str	r2, [r4, r3]
 800469c:	e7d0      	b.n	8004640 <_malloc_r+0x20>
 800469e:	684b      	ldr	r3, [r1, #4]
 80046a0:	428c      	cmp	r4, r1
 80046a2:	bf16      	itet	ne
 80046a4:	6063      	strne	r3, [r4, #4]
 80046a6:	6013      	streq	r3, [r2, #0]
 80046a8:	460c      	movne	r4, r1
 80046aa:	e7eb      	b.n	8004684 <_malloc_r+0x64>
 80046ac:	460c      	mov	r4, r1
 80046ae:	6849      	ldr	r1, [r1, #4]
 80046b0:	e7cc      	b.n	800464c <_malloc_r+0x2c>
 80046b2:	1cc4      	adds	r4, r0, #3
 80046b4:	f024 0403 	bic.w	r4, r4, #3
 80046b8:	42a0      	cmp	r0, r4
 80046ba:	d005      	beq.n	80046c8 <_malloc_r+0xa8>
 80046bc:	1a21      	subs	r1, r4, r0
 80046be:	4630      	mov	r0, r6
 80046c0:	f000 fae2 	bl	8004c88 <_sbrk_r>
 80046c4:	3001      	adds	r0, #1
 80046c6:	d0cf      	beq.n	8004668 <_malloc_r+0x48>
 80046c8:	6025      	str	r5, [r4, #0]
 80046ca:	e7db      	b.n	8004684 <_malloc_r+0x64>
 80046cc:	20002844 	.word	0x20002844
 80046d0:	20002848 	.word	0x20002848

080046d4 <__ssputs_r>:
 80046d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80046d8:	688e      	ldr	r6, [r1, #8]
 80046da:	4682      	mov	sl, r0
 80046dc:	429e      	cmp	r6, r3
 80046de:	460c      	mov	r4, r1
 80046e0:	4690      	mov	r8, r2
 80046e2:	4699      	mov	r9, r3
 80046e4:	d837      	bhi.n	8004756 <__ssputs_r+0x82>
 80046e6:	898a      	ldrh	r2, [r1, #12]
 80046e8:	f412 6f90 	tst.w	r2, #1152	; 0x480
 80046ec:	d031      	beq.n	8004752 <__ssputs_r+0x7e>
 80046ee:	2302      	movs	r3, #2
 80046f0:	6825      	ldr	r5, [r4, #0]
 80046f2:	6909      	ldr	r1, [r1, #16]
 80046f4:	1a6f      	subs	r7, r5, r1
 80046f6:	6965      	ldr	r5, [r4, #20]
 80046f8:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80046fc:	fb95 f5f3 	sdiv	r5, r5, r3
 8004700:	f109 0301 	add.w	r3, r9, #1
 8004704:	443b      	add	r3, r7
 8004706:	429d      	cmp	r5, r3
 8004708:	bf38      	it	cc
 800470a:	461d      	movcc	r5, r3
 800470c:	0553      	lsls	r3, r2, #21
 800470e:	d530      	bpl.n	8004772 <__ssputs_r+0x9e>
 8004710:	4629      	mov	r1, r5
 8004712:	f7ff ff85 	bl	8004620 <_malloc_r>
 8004716:	4606      	mov	r6, r0
 8004718:	b950      	cbnz	r0, 8004730 <__ssputs_r+0x5c>
 800471a:	230c      	movs	r3, #12
 800471c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004720:	f8ca 3000 	str.w	r3, [sl]
 8004724:	89a3      	ldrh	r3, [r4, #12]
 8004726:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800472a:	81a3      	strh	r3, [r4, #12]
 800472c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004730:	463a      	mov	r2, r7
 8004732:	6921      	ldr	r1, [r4, #16]
 8004734:	f7ff fe68 	bl	8004408 <memcpy>
 8004738:	89a3      	ldrh	r3, [r4, #12]
 800473a:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800473e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8004742:	81a3      	strh	r3, [r4, #12]
 8004744:	6126      	str	r6, [r4, #16]
 8004746:	443e      	add	r6, r7
 8004748:	6026      	str	r6, [r4, #0]
 800474a:	464e      	mov	r6, r9
 800474c:	6165      	str	r5, [r4, #20]
 800474e:	1bed      	subs	r5, r5, r7
 8004750:	60a5      	str	r5, [r4, #8]
 8004752:	454e      	cmp	r6, r9
 8004754:	d900      	bls.n	8004758 <__ssputs_r+0x84>
 8004756:	464e      	mov	r6, r9
 8004758:	4632      	mov	r2, r6
 800475a:	4641      	mov	r1, r8
 800475c:	6820      	ldr	r0, [r4, #0]
 800475e:	f000 fab1 	bl	8004cc4 <memmove>
 8004762:	68a3      	ldr	r3, [r4, #8]
 8004764:	2000      	movs	r0, #0
 8004766:	1b9b      	subs	r3, r3, r6
 8004768:	60a3      	str	r3, [r4, #8]
 800476a:	6823      	ldr	r3, [r4, #0]
 800476c:	441e      	add	r6, r3
 800476e:	6026      	str	r6, [r4, #0]
 8004770:	e7dc      	b.n	800472c <__ssputs_r+0x58>
 8004772:	462a      	mov	r2, r5
 8004774:	f000 fac1 	bl	8004cfa <_realloc_r>
 8004778:	4606      	mov	r6, r0
 800477a:	2800      	cmp	r0, #0
 800477c:	d1e2      	bne.n	8004744 <__ssputs_r+0x70>
 800477e:	6921      	ldr	r1, [r4, #16]
 8004780:	4650      	mov	r0, sl
 8004782:	f7ff ff01 	bl	8004588 <_free_r>
 8004786:	e7c8      	b.n	800471a <__ssputs_r+0x46>

08004788 <_svfiprintf_r>:
 8004788:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800478c:	461d      	mov	r5, r3
 800478e:	898b      	ldrh	r3, [r1, #12]
 8004790:	b09d      	sub	sp, #116	; 0x74
 8004792:	061f      	lsls	r7, r3, #24
 8004794:	4680      	mov	r8, r0
 8004796:	460c      	mov	r4, r1
 8004798:	4616      	mov	r6, r2
 800479a:	d50f      	bpl.n	80047bc <_svfiprintf_r+0x34>
 800479c:	690b      	ldr	r3, [r1, #16]
 800479e:	b96b      	cbnz	r3, 80047bc <_svfiprintf_r+0x34>
 80047a0:	2140      	movs	r1, #64	; 0x40
 80047a2:	f7ff ff3d 	bl	8004620 <_malloc_r>
 80047a6:	6020      	str	r0, [r4, #0]
 80047a8:	6120      	str	r0, [r4, #16]
 80047aa:	b928      	cbnz	r0, 80047b8 <_svfiprintf_r+0x30>
 80047ac:	230c      	movs	r3, #12
 80047ae:	f8c8 3000 	str.w	r3, [r8]
 80047b2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80047b6:	e0c8      	b.n	800494a <_svfiprintf_r+0x1c2>
 80047b8:	2340      	movs	r3, #64	; 0x40
 80047ba:	6163      	str	r3, [r4, #20]
 80047bc:	2300      	movs	r3, #0
 80047be:	9309      	str	r3, [sp, #36]	; 0x24
 80047c0:	2320      	movs	r3, #32
 80047c2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80047c6:	2330      	movs	r3, #48	; 0x30
 80047c8:	f04f 0b01 	mov.w	fp, #1
 80047cc:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80047d0:	9503      	str	r5, [sp, #12]
 80047d2:	4637      	mov	r7, r6
 80047d4:	463d      	mov	r5, r7
 80047d6:	f815 3b01 	ldrb.w	r3, [r5], #1
 80047da:	b10b      	cbz	r3, 80047e0 <_svfiprintf_r+0x58>
 80047dc:	2b25      	cmp	r3, #37	; 0x25
 80047de:	d13e      	bne.n	800485e <_svfiprintf_r+0xd6>
 80047e0:	ebb7 0a06 	subs.w	sl, r7, r6
 80047e4:	d00b      	beq.n	80047fe <_svfiprintf_r+0x76>
 80047e6:	4653      	mov	r3, sl
 80047e8:	4632      	mov	r2, r6
 80047ea:	4621      	mov	r1, r4
 80047ec:	4640      	mov	r0, r8
 80047ee:	f7ff ff71 	bl	80046d4 <__ssputs_r>
 80047f2:	3001      	adds	r0, #1
 80047f4:	f000 80a4 	beq.w	8004940 <_svfiprintf_r+0x1b8>
 80047f8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80047fa:	4453      	add	r3, sl
 80047fc:	9309      	str	r3, [sp, #36]	; 0x24
 80047fe:	783b      	ldrb	r3, [r7, #0]
 8004800:	2b00      	cmp	r3, #0
 8004802:	f000 809d 	beq.w	8004940 <_svfiprintf_r+0x1b8>
 8004806:	2300      	movs	r3, #0
 8004808:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800480c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8004810:	9304      	str	r3, [sp, #16]
 8004812:	9307      	str	r3, [sp, #28]
 8004814:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8004818:	931a      	str	r3, [sp, #104]	; 0x68
 800481a:	462f      	mov	r7, r5
 800481c:	2205      	movs	r2, #5
 800481e:	f817 1b01 	ldrb.w	r1, [r7], #1
 8004822:	4850      	ldr	r0, [pc, #320]	; (8004964 <_svfiprintf_r+0x1dc>)
 8004824:	f000 fa40 	bl	8004ca8 <memchr>
 8004828:	9b04      	ldr	r3, [sp, #16]
 800482a:	b9d0      	cbnz	r0, 8004862 <_svfiprintf_r+0xda>
 800482c:	06d9      	lsls	r1, r3, #27
 800482e:	bf44      	itt	mi
 8004830:	2220      	movmi	r2, #32
 8004832:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8004836:	071a      	lsls	r2, r3, #28
 8004838:	bf44      	itt	mi
 800483a:	222b      	movmi	r2, #43	; 0x2b
 800483c:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8004840:	782a      	ldrb	r2, [r5, #0]
 8004842:	2a2a      	cmp	r2, #42	; 0x2a
 8004844:	d015      	beq.n	8004872 <_svfiprintf_r+0xea>
 8004846:	462f      	mov	r7, r5
 8004848:	2000      	movs	r0, #0
 800484a:	250a      	movs	r5, #10
 800484c:	9a07      	ldr	r2, [sp, #28]
 800484e:	4639      	mov	r1, r7
 8004850:	f811 3b01 	ldrb.w	r3, [r1], #1
 8004854:	3b30      	subs	r3, #48	; 0x30
 8004856:	2b09      	cmp	r3, #9
 8004858:	d94d      	bls.n	80048f6 <_svfiprintf_r+0x16e>
 800485a:	b1b8      	cbz	r0, 800488c <_svfiprintf_r+0x104>
 800485c:	e00f      	b.n	800487e <_svfiprintf_r+0xf6>
 800485e:	462f      	mov	r7, r5
 8004860:	e7b8      	b.n	80047d4 <_svfiprintf_r+0x4c>
 8004862:	4a40      	ldr	r2, [pc, #256]	; (8004964 <_svfiprintf_r+0x1dc>)
 8004864:	463d      	mov	r5, r7
 8004866:	1a80      	subs	r0, r0, r2
 8004868:	fa0b f000 	lsl.w	r0, fp, r0
 800486c:	4318      	orrs	r0, r3
 800486e:	9004      	str	r0, [sp, #16]
 8004870:	e7d3      	b.n	800481a <_svfiprintf_r+0x92>
 8004872:	9a03      	ldr	r2, [sp, #12]
 8004874:	1d11      	adds	r1, r2, #4
 8004876:	6812      	ldr	r2, [r2, #0]
 8004878:	9103      	str	r1, [sp, #12]
 800487a:	2a00      	cmp	r2, #0
 800487c:	db01      	blt.n	8004882 <_svfiprintf_r+0xfa>
 800487e:	9207      	str	r2, [sp, #28]
 8004880:	e004      	b.n	800488c <_svfiprintf_r+0x104>
 8004882:	4252      	negs	r2, r2
 8004884:	f043 0302 	orr.w	r3, r3, #2
 8004888:	9207      	str	r2, [sp, #28]
 800488a:	9304      	str	r3, [sp, #16]
 800488c:	783b      	ldrb	r3, [r7, #0]
 800488e:	2b2e      	cmp	r3, #46	; 0x2e
 8004890:	d10c      	bne.n	80048ac <_svfiprintf_r+0x124>
 8004892:	787b      	ldrb	r3, [r7, #1]
 8004894:	2b2a      	cmp	r3, #42	; 0x2a
 8004896:	d133      	bne.n	8004900 <_svfiprintf_r+0x178>
 8004898:	9b03      	ldr	r3, [sp, #12]
 800489a:	3702      	adds	r7, #2
 800489c:	1d1a      	adds	r2, r3, #4
 800489e:	681b      	ldr	r3, [r3, #0]
 80048a0:	9203      	str	r2, [sp, #12]
 80048a2:	2b00      	cmp	r3, #0
 80048a4:	bfb8      	it	lt
 80048a6:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 80048aa:	9305      	str	r3, [sp, #20]
 80048ac:	4d2e      	ldr	r5, [pc, #184]	; (8004968 <_svfiprintf_r+0x1e0>)
 80048ae:	2203      	movs	r2, #3
 80048b0:	7839      	ldrb	r1, [r7, #0]
 80048b2:	4628      	mov	r0, r5
 80048b4:	f000 f9f8 	bl	8004ca8 <memchr>
 80048b8:	b138      	cbz	r0, 80048ca <_svfiprintf_r+0x142>
 80048ba:	2340      	movs	r3, #64	; 0x40
 80048bc:	1b40      	subs	r0, r0, r5
 80048be:	fa03 f000 	lsl.w	r0, r3, r0
 80048c2:	9b04      	ldr	r3, [sp, #16]
 80048c4:	3701      	adds	r7, #1
 80048c6:	4303      	orrs	r3, r0
 80048c8:	9304      	str	r3, [sp, #16]
 80048ca:	7839      	ldrb	r1, [r7, #0]
 80048cc:	2206      	movs	r2, #6
 80048ce:	4827      	ldr	r0, [pc, #156]	; (800496c <_svfiprintf_r+0x1e4>)
 80048d0:	1c7e      	adds	r6, r7, #1
 80048d2:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80048d6:	f000 f9e7 	bl	8004ca8 <memchr>
 80048da:	2800      	cmp	r0, #0
 80048dc:	d038      	beq.n	8004950 <_svfiprintf_r+0x1c8>
 80048de:	4b24      	ldr	r3, [pc, #144]	; (8004970 <_svfiprintf_r+0x1e8>)
 80048e0:	bb13      	cbnz	r3, 8004928 <_svfiprintf_r+0x1a0>
 80048e2:	9b03      	ldr	r3, [sp, #12]
 80048e4:	3307      	adds	r3, #7
 80048e6:	f023 0307 	bic.w	r3, r3, #7
 80048ea:	3308      	adds	r3, #8
 80048ec:	9303      	str	r3, [sp, #12]
 80048ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80048f0:	444b      	add	r3, r9
 80048f2:	9309      	str	r3, [sp, #36]	; 0x24
 80048f4:	e76d      	b.n	80047d2 <_svfiprintf_r+0x4a>
 80048f6:	fb05 3202 	mla	r2, r5, r2, r3
 80048fa:	2001      	movs	r0, #1
 80048fc:	460f      	mov	r7, r1
 80048fe:	e7a6      	b.n	800484e <_svfiprintf_r+0xc6>
 8004900:	2300      	movs	r3, #0
 8004902:	250a      	movs	r5, #10
 8004904:	4619      	mov	r1, r3
 8004906:	3701      	adds	r7, #1
 8004908:	9305      	str	r3, [sp, #20]
 800490a:	4638      	mov	r0, r7
 800490c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8004910:	3a30      	subs	r2, #48	; 0x30
 8004912:	2a09      	cmp	r2, #9
 8004914:	d903      	bls.n	800491e <_svfiprintf_r+0x196>
 8004916:	2b00      	cmp	r3, #0
 8004918:	d0c8      	beq.n	80048ac <_svfiprintf_r+0x124>
 800491a:	9105      	str	r1, [sp, #20]
 800491c:	e7c6      	b.n	80048ac <_svfiprintf_r+0x124>
 800491e:	fb05 2101 	mla	r1, r5, r1, r2
 8004922:	2301      	movs	r3, #1
 8004924:	4607      	mov	r7, r0
 8004926:	e7f0      	b.n	800490a <_svfiprintf_r+0x182>
 8004928:	ab03      	add	r3, sp, #12
 800492a:	9300      	str	r3, [sp, #0]
 800492c:	4622      	mov	r2, r4
 800492e:	4b11      	ldr	r3, [pc, #68]	; (8004974 <_svfiprintf_r+0x1ec>)
 8004930:	a904      	add	r1, sp, #16
 8004932:	4640      	mov	r0, r8
 8004934:	f3af 8000 	nop.w
 8004938:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
 800493c:	4681      	mov	r9, r0
 800493e:	d1d6      	bne.n	80048ee <_svfiprintf_r+0x166>
 8004940:	89a3      	ldrh	r3, [r4, #12]
 8004942:	065b      	lsls	r3, r3, #25
 8004944:	f53f af35 	bmi.w	80047b2 <_svfiprintf_r+0x2a>
 8004948:	9809      	ldr	r0, [sp, #36]	; 0x24
 800494a:	b01d      	add	sp, #116	; 0x74
 800494c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004950:	ab03      	add	r3, sp, #12
 8004952:	9300      	str	r3, [sp, #0]
 8004954:	4622      	mov	r2, r4
 8004956:	4b07      	ldr	r3, [pc, #28]	; (8004974 <_svfiprintf_r+0x1ec>)
 8004958:	a904      	add	r1, sp, #16
 800495a:	4640      	mov	r0, r8
 800495c:	f000 f882 	bl	8004a64 <_printf_i>
 8004960:	e7ea      	b.n	8004938 <_svfiprintf_r+0x1b0>
 8004962:	bf00      	nop
 8004964:	08004fd0 	.word	0x08004fd0
 8004968:	08004fd6 	.word	0x08004fd6
 800496c:	08004fda 	.word	0x08004fda
 8004970:	00000000 	.word	0x00000000
 8004974:	080046d5 	.word	0x080046d5

08004978 <_printf_common>:
 8004978:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800497c:	4691      	mov	r9, r2
 800497e:	461f      	mov	r7, r3
 8004980:	688a      	ldr	r2, [r1, #8]
 8004982:	690b      	ldr	r3, [r1, #16]
 8004984:	4606      	mov	r6, r0
 8004986:	4293      	cmp	r3, r2
 8004988:	bfb8      	it	lt
 800498a:	4613      	movlt	r3, r2
 800498c:	f8c9 3000 	str.w	r3, [r9]
 8004990:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8004994:	460c      	mov	r4, r1
 8004996:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800499a:	b112      	cbz	r2, 80049a2 <_printf_common+0x2a>
 800499c:	3301      	adds	r3, #1
 800499e:	f8c9 3000 	str.w	r3, [r9]
 80049a2:	6823      	ldr	r3, [r4, #0]
 80049a4:	0699      	lsls	r1, r3, #26
 80049a6:	bf42      	ittt	mi
 80049a8:	f8d9 3000 	ldrmi.w	r3, [r9]
 80049ac:	3302      	addmi	r3, #2
 80049ae:	f8c9 3000 	strmi.w	r3, [r9]
 80049b2:	6825      	ldr	r5, [r4, #0]
 80049b4:	f015 0506 	ands.w	r5, r5, #6
 80049b8:	d107      	bne.n	80049ca <_printf_common+0x52>
 80049ba:	f104 0a19 	add.w	sl, r4, #25
 80049be:	68e3      	ldr	r3, [r4, #12]
 80049c0:	f8d9 2000 	ldr.w	r2, [r9]
 80049c4:	1a9b      	subs	r3, r3, r2
 80049c6:	42ab      	cmp	r3, r5
 80049c8:	dc29      	bgt.n	8004a1e <_printf_common+0xa6>
 80049ca:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 80049ce:	6822      	ldr	r2, [r4, #0]
 80049d0:	3300      	adds	r3, #0
 80049d2:	bf18      	it	ne
 80049d4:	2301      	movne	r3, #1
 80049d6:	0692      	lsls	r2, r2, #26
 80049d8:	d42e      	bmi.n	8004a38 <_printf_common+0xc0>
 80049da:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80049de:	4639      	mov	r1, r7
 80049e0:	4630      	mov	r0, r6
 80049e2:	47c0      	blx	r8
 80049e4:	3001      	adds	r0, #1
 80049e6:	d021      	beq.n	8004a2c <_printf_common+0xb4>
 80049e8:	6823      	ldr	r3, [r4, #0]
 80049ea:	68e5      	ldr	r5, [r4, #12]
 80049ec:	f003 0306 	and.w	r3, r3, #6
 80049f0:	2b04      	cmp	r3, #4
 80049f2:	bf18      	it	ne
 80049f4:	2500      	movne	r5, #0
 80049f6:	f8d9 2000 	ldr.w	r2, [r9]
 80049fa:	f04f 0900 	mov.w	r9, #0
 80049fe:	bf08      	it	eq
 8004a00:	1aad      	subeq	r5, r5, r2
 8004a02:	68a3      	ldr	r3, [r4, #8]
 8004a04:	6922      	ldr	r2, [r4, #16]
 8004a06:	bf08      	it	eq
 8004a08:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8004a0c:	4293      	cmp	r3, r2
 8004a0e:	bfc4      	itt	gt
 8004a10:	1a9b      	subgt	r3, r3, r2
 8004a12:	18ed      	addgt	r5, r5, r3
 8004a14:	341a      	adds	r4, #26
 8004a16:	454d      	cmp	r5, r9
 8004a18:	d11a      	bne.n	8004a50 <_printf_common+0xd8>
 8004a1a:	2000      	movs	r0, #0
 8004a1c:	e008      	b.n	8004a30 <_printf_common+0xb8>
 8004a1e:	2301      	movs	r3, #1
 8004a20:	4652      	mov	r2, sl
 8004a22:	4639      	mov	r1, r7
 8004a24:	4630      	mov	r0, r6
 8004a26:	47c0      	blx	r8
 8004a28:	3001      	adds	r0, #1
 8004a2a:	d103      	bne.n	8004a34 <_printf_common+0xbc>
 8004a2c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004a30:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004a34:	3501      	adds	r5, #1
 8004a36:	e7c2      	b.n	80049be <_printf_common+0x46>
 8004a38:	2030      	movs	r0, #48	; 0x30
 8004a3a:	18e1      	adds	r1, r4, r3
 8004a3c:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8004a40:	1c5a      	adds	r2, r3, #1
 8004a42:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8004a46:	4422      	add	r2, r4
 8004a48:	3302      	adds	r3, #2
 8004a4a:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8004a4e:	e7c4      	b.n	80049da <_printf_common+0x62>
 8004a50:	2301      	movs	r3, #1
 8004a52:	4622      	mov	r2, r4
 8004a54:	4639      	mov	r1, r7
 8004a56:	4630      	mov	r0, r6
 8004a58:	47c0      	blx	r8
 8004a5a:	3001      	adds	r0, #1
 8004a5c:	d0e6      	beq.n	8004a2c <_printf_common+0xb4>
 8004a5e:	f109 0901 	add.w	r9, r9, #1
 8004a62:	e7d8      	b.n	8004a16 <_printf_common+0x9e>

08004a64 <_printf_i>:
 8004a64:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004a68:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 8004a6c:	460c      	mov	r4, r1
 8004a6e:	7e09      	ldrb	r1, [r1, #24]
 8004a70:	b085      	sub	sp, #20
 8004a72:	296e      	cmp	r1, #110	; 0x6e
 8004a74:	4617      	mov	r7, r2
 8004a76:	4606      	mov	r6, r0
 8004a78:	4698      	mov	r8, r3
 8004a7a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8004a7c:	f000 80b3 	beq.w	8004be6 <_printf_i+0x182>
 8004a80:	d822      	bhi.n	8004ac8 <_printf_i+0x64>
 8004a82:	2963      	cmp	r1, #99	; 0x63
 8004a84:	d036      	beq.n	8004af4 <_printf_i+0x90>
 8004a86:	d80a      	bhi.n	8004a9e <_printf_i+0x3a>
 8004a88:	2900      	cmp	r1, #0
 8004a8a:	f000 80b9 	beq.w	8004c00 <_printf_i+0x19c>
 8004a8e:	2958      	cmp	r1, #88	; 0x58
 8004a90:	f000 8083 	beq.w	8004b9a <_printf_i+0x136>
 8004a94:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8004a98:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 8004a9c:	e032      	b.n	8004b04 <_printf_i+0xa0>
 8004a9e:	2964      	cmp	r1, #100	; 0x64
 8004aa0:	d001      	beq.n	8004aa6 <_printf_i+0x42>
 8004aa2:	2969      	cmp	r1, #105	; 0x69
 8004aa4:	d1f6      	bne.n	8004a94 <_printf_i+0x30>
 8004aa6:	6820      	ldr	r0, [r4, #0]
 8004aa8:	6813      	ldr	r3, [r2, #0]
 8004aaa:	0605      	lsls	r5, r0, #24
 8004aac:	f103 0104 	add.w	r1, r3, #4
 8004ab0:	d52a      	bpl.n	8004b08 <_printf_i+0xa4>
 8004ab2:	681b      	ldr	r3, [r3, #0]
 8004ab4:	6011      	str	r1, [r2, #0]
 8004ab6:	2b00      	cmp	r3, #0
 8004ab8:	da03      	bge.n	8004ac2 <_printf_i+0x5e>
 8004aba:	222d      	movs	r2, #45	; 0x2d
 8004abc:	425b      	negs	r3, r3
 8004abe:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 8004ac2:	486f      	ldr	r0, [pc, #444]	; (8004c80 <_printf_i+0x21c>)
 8004ac4:	220a      	movs	r2, #10
 8004ac6:	e039      	b.n	8004b3c <_printf_i+0xd8>
 8004ac8:	2973      	cmp	r1, #115	; 0x73
 8004aca:	f000 809d 	beq.w	8004c08 <_printf_i+0x1a4>
 8004ace:	d808      	bhi.n	8004ae2 <_printf_i+0x7e>
 8004ad0:	296f      	cmp	r1, #111	; 0x6f
 8004ad2:	d020      	beq.n	8004b16 <_printf_i+0xb2>
 8004ad4:	2970      	cmp	r1, #112	; 0x70
 8004ad6:	d1dd      	bne.n	8004a94 <_printf_i+0x30>
 8004ad8:	6823      	ldr	r3, [r4, #0]
 8004ada:	f043 0320 	orr.w	r3, r3, #32
 8004ade:	6023      	str	r3, [r4, #0]
 8004ae0:	e003      	b.n	8004aea <_printf_i+0x86>
 8004ae2:	2975      	cmp	r1, #117	; 0x75
 8004ae4:	d017      	beq.n	8004b16 <_printf_i+0xb2>
 8004ae6:	2978      	cmp	r1, #120	; 0x78
 8004ae8:	d1d4      	bne.n	8004a94 <_printf_i+0x30>
 8004aea:	2378      	movs	r3, #120	; 0x78
 8004aec:	4865      	ldr	r0, [pc, #404]	; (8004c84 <_printf_i+0x220>)
 8004aee:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8004af2:	e055      	b.n	8004ba0 <_printf_i+0x13c>
 8004af4:	6813      	ldr	r3, [r2, #0]
 8004af6:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8004afa:	1d19      	adds	r1, r3, #4
 8004afc:	681b      	ldr	r3, [r3, #0]
 8004afe:	6011      	str	r1, [r2, #0]
 8004b00:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8004b04:	2301      	movs	r3, #1
 8004b06:	e08c      	b.n	8004c22 <_printf_i+0x1be>
 8004b08:	681b      	ldr	r3, [r3, #0]
 8004b0a:	f010 0f40 	tst.w	r0, #64	; 0x40
 8004b0e:	6011      	str	r1, [r2, #0]
 8004b10:	bf18      	it	ne
 8004b12:	b21b      	sxthne	r3, r3
 8004b14:	e7cf      	b.n	8004ab6 <_printf_i+0x52>
 8004b16:	6813      	ldr	r3, [r2, #0]
 8004b18:	6825      	ldr	r5, [r4, #0]
 8004b1a:	1d18      	adds	r0, r3, #4
 8004b1c:	6010      	str	r0, [r2, #0]
 8004b1e:	0628      	lsls	r0, r5, #24
 8004b20:	d501      	bpl.n	8004b26 <_printf_i+0xc2>
 8004b22:	681b      	ldr	r3, [r3, #0]
 8004b24:	e002      	b.n	8004b2c <_printf_i+0xc8>
 8004b26:	0668      	lsls	r0, r5, #25
 8004b28:	d5fb      	bpl.n	8004b22 <_printf_i+0xbe>
 8004b2a:	881b      	ldrh	r3, [r3, #0]
 8004b2c:	296f      	cmp	r1, #111	; 0x6f
 8004b2e:	bf14      	ite	ne
 8004b30:	220a      	movne	r2, #10
 8004b32:	2208      	moveq	r2, #8
 8004b34:	4852      	ldr	r0, [pc, #328]	; (8004c80 <_printf_i+0x21c>)
 8004b36:	2100      	movs	r1, #0
 8004b38:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8004b3c:	6865      	ldr	r5, [r4, #4]
 8004b3e:	2d00      	cmp	r5, #0
 8004b40:	60a5      	str	r5, [r4, #8]
 8004b42:	f2c0 8095 	blt.w	8004c70 <_printf_i+0x20c>
 8004b46:	6821      	ldr	r1, [r4, #0]
 8004b48:	f021 0104 	bic.w	r1, r1, #4
 8004b4c:	6021      	str	r1, [r4, #0]
 8004b4e:	2b00      	cmp	r3, #0
 8004b50:	d13d      	bne.n	8004bce <_printf_i+0x16a>
 8004b52:	2d00      	cmp	r5, #0
 8004b54:	f040 808e 	bne.w	8004c74 <_printf_i+0x210>
 8004b58:	4665      	mov	r5, ip
 8004b5a:	2a08      	cmp	r2, #8
 8004b5c:	d10b      	bne.n	8004b76 <_printf_i+0x112>
 8004b5e:	6823      	ldr	r3, [r4, #0]
 8004b60:	07db      	lsls	r3, r3, #31
 8004b62:	d508      	bpl.n	8004b76 <_printf_i+0x112>
 8004b64:	6923      	ldr	r3, [r4, #16]
 8004b66:	6862      	ldr	r2, [r4, #4]
 8004b68:	429a      	cmp	r2, r3
 8004b6a:	bfde      	ittt	le
 8004b6c:	2330      	movle	r3, #48	; 0x30
 8004b6e:	f805 3c01 	strble.w	r3, [r5, #-1]
 8004b72:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 8004b76:	ebac 0305 	sub.w	r3, ip, r5
 8004b7a:	6123      	str	r3, [r4, #16]
 8004b7c:	f8cd 8000 	str.w	r8, [sp]
 8004b80:	463b      	mov	r3, r7
 8004b82:	aa03      	add	r2, sp, #12
 8004b84:	4621      	mov	r1, r4
 8004b86:	4630      	mov	r0, r6
 8004b88:	f7ff fef6 	bl	8004978 <_printf_common>
 8004b8c:	3001      	adds	r0, #1
 8004b8e:	d14d      	bne.n	8004c2c <_printf_i+0x1c8>
 8004b90:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004b94:	b005      	add	sp, #20
 8004b96:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8004b9a:	4839      	ldr	r0, [pc, #228]	; (8004c80 <_printf_i+0x21c>)
 8004b9c:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 8004ba0:	6813      	ldr	r3, [r2, #0]
 8004ba2:	6821      	ldr	r1, [r4, #0]
 8004ba4:	1d1d      	adds	r5, r3, #4
 8004ba6:	681b      	ldr	r3, [r3, #0]
 8004ba8:	6015      	str	r5, [r2, #0]
 8004baa:	060a      	lsls	r2, r1, #24
 8004bac:	d50b      	bpl.n	8004bc6 <_printf_i+0x162>
 8004bae:	07ca      	lsls	r2, r1, #31
 8004bb0:	bf44      	itt	mi
 8004bb2:	f041 0120 	orrmi.w	r1, r1, #32
 8004bb6:	6021      	strmi	r1, [r4, #0]
 8004bb8:	b91b      	cbnz	r3, 8004bc2 <_printf_i+0x15e>
 8004bba:	6822      	ldr	r2, [r4, #0]
 8004bbc:	f022 0220 	bic.w	r2, r2, #32
 8004bc0:	6022      	str	r2, [r4, #0]
 8004bc2:	2210      	movs	r2, #16
 8004bc4:	e7b7      	b.n	8004b36 <_printf_i+0xd2>
 8004bc6:	064d      	lsls	r5, r1, #25
 8004bc8:	bf48      	it	mi
 8004bca:	b29b      	uxthmi	r3, r3
 8004bcc:	e7ef      	b.n	8004bae <_printf_i+0x14a>
 8004bce:	4665      	mov	r5, ip
 8004bd0:	fbb3 f1f2 	udiv	r1, r3, r2
 8004bd4:	fb02 3311 	mls	r3, r2, r1, r3
 8004bd8:	5cc3      	ldrb	r3, [r0, r3]
 8004bda:	f805 3d01 	strb.w	r3, [r5, #-1]!
 8004bde:	460b      	mov	r3, r1
 8004be0:	2900      	cmp	r1, #0
 8004be2:	d1f5      	bne.n	8004bd0 <_printf_i+0x16c>
 8004be4:	e7b9      	b.n	8004b5a <_printf_i+0xf6>
 8004be6:	6813      	ldr	r3, [r2, #0]
 8004be8:	6825      	ldr	r5, [r4, #0]
 8004bea:	1d18      	adds	r0, r3, #4
 8004bec:	6961      	ldr	r1, [r4, #20]
 8004bee:	6010      	str	r0, [r2, #0]
 8004bf0:	0628      	lsls	r0, r5, #24
 8004bf2:	681b      	ldr	r3, [r3, #0]
 8004bf4:	d501      	bpl.n	8004bfa <_printf_i+0x196>
 8004bf6:	6019      	str	r1, [r3, #0]
 8004bf8:	e002      	b.n	8004c00 <_printf_i+0x19c>
 8004bfa:	066a      	lsls	r2, r5, #25
 8004bfc:	d5fb      	bpl.n	8004bf6 <_printf_i+0x192>
 8004bfe:	8019      	strh	r1, [r3, #0]
 8004c00:	2300      	movs	r3, #0
 8004c02:	4665      	mov	r5, ip
 8004c04:	6123      	str	r3, [r4, #16]
 8004c06:	e7b9      	b.n	8004b7c <_printf_i+0x118>
 8004c08:	6813      	ldr	r3, [r2, #0]
 8004c0a:	1d19      	adds	r1, r3, #4
 8004c0c:	6011      	str	r1, [r2, #0]
 8004c0e:	681d      	ldr	r5, [r3, #0]
 8004c10:	6862      	ldr	r2, [r4, #4]
 8004c12:	2100      	movs	r1, #0
 8004c14:	4628      	mov	r0, r5
 8004c16:	f000 f847 	bl	8004ca8 <memchr>
 8004c1a:	b108      	cbz	r0, 8004c20 <_printf_i+0x1bc>
 8004c1c:	1b40      	subs	r0, r0, r5
 8004c1e:	6060      	str	r0, [r4, #4]
 8004c20:	6863      	ldr	r3, [r4, #4]
 8004c22:	6123      	str	r3, [r4, #16]
 8004c24:	2300      	movs	r3, #0
 8004c26:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8004c2a:	e7a7      	b.n	8004b7c <_printf_i+0x118>
 8004c2c:	6923      	ldr	r3, [r4, #16]
 8004c2e:	462a      	mov	r2, r5
 8004c30:	4639      	mov	r1, r7
 8004c32:	4630      	mov	r0, r6
 8004c34:	47c0      	blx	r8
 8004c36:	3001      	adds	r0, #1
 8004c38:	d0aa      	beq.n	8004b90 <_printf_i+0x12c>
 8004c3a:	6823      	ldr	r3, [r4, #0]
 8004c3c:	079b      	lsls	r3, r3, #30
 8004c3e:	d413      	bmi.n	8004c68 <_printf_i+0x204>
 8004c40:	68e0      	ldr	r0, [r4, #12]
 8004c42:	9b03      	ldr	r3, [sp, #12]
 8004c44:	4298      	cmp	r0, r3
 8004c46:	bfb8      	it	lt
 8004c48:	4618      	movlt	r0, r3
 8004c4a:	e7a3      	b.n	8004b94 <_printf_i+0x130>
 8004c4c:	2301      	movs	r3, #1
 8004c4e:	464a      	mov	r2, r9
 8004c50:	4639      	mov	r1, r7
 8004c52:	4630      	mov	r0, r6
 8004c54:	47c0      	blx	r8
 8004c56:	3001      	adds	r0, #1
 8004c58:	d09a      	beq.n	8004b90 <_printf_i+0x12c>
 8004c5a:	3501      	adds	r5, #1
 8004c5c:	68e3      	ldr	r3, [r4, #12]
 8004c5e:	9a03      	ldr	r2, [sp, #12]
 8004c60:	1a9b      	subs	r3, r3, r2
 8004c62:	42ab      	cmp	r3, r5
 8004c64:	dcf2      	bgt.n	8004c4c <_printf_i+0x1e8>
 8004c66:	e7eb      	b.n	8004c40 <_printf_i+0x1dc>
 8004c68:	2500      	movs	r5, #0
 8004c6a:	f104 0919 	add.w	r9, r4, #25
 8004c6e:	e7f5      	b.n	8004c5c <_printf_i+0x1f8>
 8004c70:	2b00      	cmp	r3, #0
 8004c72:	d1ac      	bne.n	8004bce <_printf_i+0x16a>
 8004c74:	7803      	ldrb	r3, [r0, #0]
 8004c76:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8004c7a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8004c7e:	e76c      	b.n	8004b5a <_printf_i+0xf6>
 8004c80:	08004fe1 	.word	0x08004fe1
 8004c84:	08004ff2 	.word	0x08004ff2

08004c88 <_sbrk_r>:
 8004c88:	b538      	push	{r3, r4, r5, lr}
 8004c8a:	2300      	movs	r3, #0
 8004c8c:	4c05      	ldr	r4, [pc, #20]	; (8004ca4 <_sbrk_r+0x1c>)
 8004c8e:	4605      	mov	r5, r0
 8004c90:	4608      	mov	r0, r1
 8004c92:	6023      	str	r3, [r4, #0]
 8004c94:	f7fc fb82 	bl	800139c <_sbrk>
 8004c98:	1c43      	adds	r3, r0, #1
 8004c9a:	d102      	bne.n	8004ca2 <_sbrk_r+0x1a>
 8004c9c:	6823      	ldr	r3, [r4, #0]
 8004c9e:	b103      	cbz	r3, 8004ca2 <_sbrk_r+0x1a>
 8004ca0:	602b      	str	r3, [r5, #0]
 8004ca2:	bd38      	pop	{r3, r4, r5, pc}
 8004ca4:	20002c4c 	.word	0x20002c4c

08004ca8 <memchr>:
 8004ca8:	b510      	push	{r4, lr}
 8004caa:	b2c9      	uxtb	r1, r1
 8004cac:	4402      	add	r2, r0
 8004cae:	4290      	cmp	r0, r2
 8004cb0:	4603      	mov	r3, r0
 8004cb2:	d101      	bne.n	8004cb8 <memchr+0x10>
 8004cb4:	2300      	movs	r3, #0
 8004cb6:	e003      	b.n	8004cc0 <memchr+0x18>
 8004cb8:	781c      	ldrb	r4, [r3, #0]
 8004cba:	3001      	adds	r0, #1
 8004cbc:	428c      	cmp	r4, r1
 8004cbe:	d1f6      	bne.n	8004cae <memchr+0x6>
 8004cc0:	4618      	mov	r0, r3
 8004cc2:	bd10      	pop	{r4, pc}

08004cc4 <memmove>:
 8004cc4:	4288      	cmp	r0, r1
 8004cc6:	b510      	push	{r4, lr}
 8004cc8:	eb01 0302 	add.w	r3, r1, r2
 8004ccc:	d807      	bhi.n	8004cde <memmove+0x1a>
 8004cce:	1e42      	subs	r2, r0, #1
 8004cd0:	4299      	cmp	r1, r3
 8004cd2:	d00a      	beq.n	8004cea <memmove+0x26>
 8004cd4:	f811 4b01 	ldrb.w	r4, [r1], #1
 8004cd8:	f802 4f01 	strb.w	r4, [r2, #1]!
 8004cdc:	e7f8      	b.n	8004cd0 <memmove+0xc>
 8004cde:	4283      	cmp	r3, r0
 8004ce0:	d9f5      	bls.n	8004cce <memmove+0xa>
 8004ce2:	1881      	adds	r1, r0, r2
 8004ce4:	1ad2      	subs	r2, r2, r3
 8004ce6:	42d3      	cmn	r3, r2
 8004ce8:	d100      	bne.n	8004cec <memmove+0x28>
 8004cea:	bd10      	pop	{r4, pc}
 8004cec:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8004cf0:	f801 4d01 	strb.w	r4, [r1, #-1]!
 8004cf4:	e7f7      	b.n	8004ce6 <memmove+0x22>

08004cf6 <__malloc_lock>:
 8004cf6:	4770      	bx	lr

08004cf8 <__malloc_unlock>:
 8004cf8:	4770      	bx	lr

08004cfa <_realloc_r>:
 8004cfa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004cfc:	4607      	mov	r7, r0
 8004cfe:	4614      	mov	r4, r2
 8004d00:	460e      	mov	r6, r1
 8004d02:	b921      	cbnz	r1, 8004d0e <_realloc_r+0x14>
 8004d04:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8004d08:	4611      	mov	r1, r2
 8004d0a:	f7ff bc89 	b.w	8004620 <_malloc_r>
 8004d0e:	b922      	cbnz	r2, 8004d1a <_realloc_r+0x20>
 8004d10:	f7ff fc3a 	bl	8004588 <_free_r>
 8004d14:	4625      	mov	r5, r4
 8004d16:	4628      	mov	r0, r5
 8004d18:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004d1a:	f000 f814 	bl	8004d46 <_malloc_usable_size_r>
 8004d1e:	42a0      	cmp	r0, r4
 8004d20:	d20f      	bcs.n	8004d42 <_realloc_r+0x48>
 8004d22:	4621      	mov	r1, r4
 8004d24:	4638      	mov	r0, r7
 8004d26:	f7ff fc7b 	bl	8004620 <_malloc_r>
 8004d2a:	4605      	mov	r5, r0
 8004d2c:	2800      	cmp	r0, #0
 8004d2e:	d0f2      	beq.n	8004d16 <_realloc_r+0x1c>
 8004d30:	4631      	mov	r1, r6
 8004d32:	4622      	mov	r2, r4
 8004d34:	f7ff fb68 	bl	8004408 <memcpy>
 8004d38:	4631      	mov	r1, r6
 8004d3a:	4638      	mov	r0, r7
 8004d3c:	f7ff fc24 	bl	8004588 <_free_r>
 8004d40:	e7e9      	b.n	8004d16 <_realloc_r+0x1c>
 8004d42:	4635      	mov	r5, r6
 8004d44:	e7e7      	b.n	8004d16 <_realloc_r+0x1c>

08004d46 <_malloc_usable_size_r>:
 8004d46:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004d4a:	1f18      	subs	r0, r3, #4
 8004d4c:	2b00      	cmp	r3, #0
 8004d4e:	bfbc      	itt	lt
 8004d50:	580b      	ldrlt	r3, [r1, r0]
 8004d52:	18c0      	addlt	r0, r0, r3
 8004d54:	4770      	bx	lr
	...

08004d58 <_init>:
 8004d58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004d5a:	bf00      	nop
 8004d5c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004d5e:	bc08      	pop	{r3}
 8004d60:	469e      	mov	lr, r3
 8004d62:	4770      	bx	lr

08004d64 <_fini>:
 8004d64:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004d66:	bf00      	nop
 8004d68:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004d6a:	bc08      	pop	{r3}
 8004d6c:	469e      	mov	lr, r3
 8004d6e:	4770      	bx	lr
